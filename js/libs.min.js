"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = e || self).Swiper = t();
}(void 0, function () {
  "use strict";

  function e(e) {
    return null !== e && "object" == _typeof(e) && "constructor" in e && e.constructor === Object;
  }

  function t(i, s) {
    void 0 === i && (i = {}), void 0 === s && (s = {}), Object.keys(s).forEach(function (a) {
      void 0 === i[a] ? i[a] = s[a] : e(s[a]) && e(i[a]) && Object.keys(s[a]).length > 0 && t(i[a], s[a]);
    });
  }

  var i = "undefined" != typeof document ? document : {},
      s = {
    body: {},
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    activeElement: {
      blur: function blur() {},
      nodeName: ""
    },
    querySelector: function querySelector() {
      return null;
    },
    querySelectorAll: function querySelectorAll() {
      return [];
    },
    getElementById: function getElementById() {
      return null;
    },
    createEvent: function createEvent() {
      return {
        initEvent: function initEvent() {}
      };
    },
    createElement: function createElement() {
      return {
        children: [],
        childNodes: [],
        style: {},
        setAttribute: function setAttribute() {},
        getElementsByTagName: function getElementsByTagName() {
          return [];
        }
      };
    },
    createElementNS: function createElementNS() {
      return {};
    },
    importNode: function importNode() {
      return null;
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    }
  };
  t(i, s);
  var a = "undefined" != typeof window ? window : {};
  t(a, {
    document: s,
    navigator: {
      userAgent: ""
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    },
    history: {
      replaceState: function replaceState() {},
      pushState: function pushState() {},
      go: function go() {},
      back: function back() {}
    },
    CustomEvent: function CustomEvent() {
      return this;
    },
    addEventListener: function addEventListener() {},
    removeEventListener: function removeEventListener() {},
    getComputedStyle: function getComputedStyle() {
      return {
        getPropertyValue: function getPropertyValue() {
          return "";
        }
      };
    },
    Image: function Image() {},
    Date: function Date() {},
    screen: {},
    setTimeout: function setTimeout() {},
    clearTimeout: function clearTimeout() {},
    matchMedia: function matchMedia() {
      return {};
    }
  });

  var n = function n(e) {
    for (var t = 0; t < e.length; t += 1) {
      this[t] = e[t];
    }

    return this.length = e.length, this;
  };

  function r(e, t) {
    var s = [],
        r = 0;
    if (e && !t && e instanceof n) return e;
    if (e) if ("string" == typeof e) {
      var o,
          l,
          h = e.trim();

      if (h.indexOf("<") >= 0 && h.indexOf(">") >= 0) {
        var d = "div";

        for (0 === h.indexOf("<li") && (d = "ul"), 0 === h.indexOf("<tr") && (d = "tbody"), 0 !== h.indexOf("<td") && 0 !== h.indexOf("<th") || (d = "tr"), 0 === h.indexOf("<tbody") && (d = "table"), 0 === h.indexOf("<option") && (d = "select"), (l = i.createElement(d)).innerHTML = h, r = 0; r < l.childNodes.length; r += 1) {
          s.push(l.childNodes[r]);
        }
      } else for (o = t || "#" !== e[0] || e.match(/[ .<>:~]/) ? (t || i).querySelectorAll(e.trim()) : [i.getElementById(e.trim().split("#")[1])], r = 0; r < o.length; r += 1) {
        o[r] && s.push(o[r]);
      }
    } else if (e.nodeType || e === a || e === i) s.push(e);else if (e.length > 0 && e[0].nodeType) for (r = 0; r < e.length; r += 1) {
      s.push(e[r]);
    }
    return new n(s);
  }

  function o(e) {
    for (var t = [], i = 0; i < e.length; i += 1) {
      -1 === t.indexOf(e[i]) && t.push(e[i]);
    }

    return t;
  }

  r.fn = n.prototype, r.Class = n, r.Dom7 = n;
  var l = {
    addClass: function addClass(e) {
      if (void 0 === e) return this;

      for (var t = e.split(" "), i = 0; i < t.length; i += 1) {
        for (var s = 0; s < this.length; s += 1) {
          void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.add(t[i]);
        }
      }

      return this;
    },
    removeClass: function removeClass(e) {
      for (var t = e.split(" "), i = 0; i < t.length; i += 1) {
        for (var s = 0; s < this.length; s += 1) {
          void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.remove(t[i]);
        }
      }

      return this;
    },
    hasClass: function hasClass(e) {
      return !!this[0] && this[0].classList.contains(e);
    },
    toggleClass: function toggleClass(e) {
      for (var t = e.split(" "), i = 0; i < t.length; i += 1) {
        for (var s = 0; s < this.length; s += 1) {
          void 0 !== this[s] && void 0 !== this[s].classList && this[s].classList.toggle(t[i]);
        }
      }

      return this;
    },
    attr: function attr(e, t) {
      var i = arguments;
      if (1 === arguments.length && "string" == typeof e) return this[0] ? this[0].getAttribute(e) : void 0;

      for (var s = 0; s < this.length; s += 1) {
        if (2 === i.length) this[s].setAttribute(e, t);else for (var a in e) {
          this[s][a] = e[a], this[s].setAttribute(a, e[a]);
        }
      }

      return this;
    },
    removeAttr: function removeAttr(e) {
      for (var t = 0; t < this.length; t += 1) {
        this[t].removeAttribute(e);
      }

      return this;
    },
    data: function data(e, t) {
      var i;

      if (void 0 !== t) {
        for (var s = 0; s < this.length; s += 1) {
          (i = this[s]).dom7ElementDataStorage || (i.dom7ElementDataStorage = {}), i.dom7ElementDataStorage[e] = t;
        }

        return this;
      }

      if (i = this[0]) return i.dom7ElementDataStorage && e in i.dom7ElementDataStorage ? i.dom7ElementDataStorage[e] : i.getAttribute("data-" + e) || void 0;
    },
    transform: function transform(e) {
      for (var t = 0; t < this.length; t += 1) {
        var i = this[t].style;
        i.webkitTransform = e, i.transform = e;
      }

      return this;
    },
    transition: function transition(e) {
      "string" != typeof e && (e += "ms");

      for (var t = 0; t < this.length; t += 1) {
        var i = this[t].style;
        i.webkitTransitionDuration = e, i.transitionDuration = e;
      }

      return this;
    },
    on: function on() {
      for (var e, t = [], i = arguments.length; i--;) {
        t[i] = arguments[i];
      }

      var s = t[0],
          a = t[1],
          n = t[2],
          o = t[3];

      function l(e) {
        var t = e.target;

        if (t) {
          var i = e.target.dom7EventData || [];
          if (i.indexOf(e) < 0 && i.unshift(e), r(t).is(a)) n.apply(t, i);else for (var s = r(t).parents(), o = 0; o < s.length; o += 1) {
            r(s[o]).is(a) && n.apply(s[o], i);
          }
        }
      }

      function h(e) {
        var t = e && e.target && e.target.dom7EventData || [];
        t.indexOf(e) < 0 && t.unshift(e), n.apply(this, t);
      }

      "function" == typeof t[1] && (s = (e = t)[0], n = e[1], o = e[2], a = void 0), o || (o = !1);

      for (var d, c = s.split(" "), p = 0; p < this.length; p += 1) {
        var u = this[p];
        if (a) for (d = 0; d < c.length; d += 1) {
          var m = c[d];
          u.dom7LiveListeners || (u.dom7LiveListeners = {}), u.dom7LiveListeners[m] || (u.dom7LiveListeners[m] = []), u.dom7LiveListeners[m].push({
            listener: n,
            proxyListener: l
          }), u.addEventListener(m, l, o);
        } else for (d = 0; d < c.length; d += 1) {
          var f = c[d];
          u.dom7Listeners || (u.dom7Listeners = {}), u.dom7Listeners[f] || (u.dom7Listeners[f] = []), u.dom7Listeners[f].push({
            listener: n,
            proxyListener: h
          }), u.addEventListener(f, h, o);
        }
      }

      return this;
    },
    off: function off() {
      for (var e, t = [], i = arguments.length; i--;) {
        t[i] = arguments[i];
      }

      var s = t[0],
          a = t[1],
          n = t[2],
          r = t[3];
      "function" == typeof t[1] && (s = (e = t)[0], n = e[1], r = e[2], a = void 0), r || (r = !1);

      for (var o = s.split(" "), l = 0; l < o.length; l += 1) {
        for (var h = o[l], d = 0; d < this.length; d += 1) {
          var c = this[d],
              p = void 0;
          if (!a && c.dom7Listeners ? p = c.dom7Listeners[h] : a && c.dom7LiveListeners && (p = c.dom7LiveListeners[h]), p && p.length) for (var u = p.length - 1; u >= 0; u -= 1) {
            var m = p[u];
            n && m.listener === n || n && m.listener && m.listener.dom7proxy && m.listener.dom7proxy === n ? (c.removeEventListener(h, m.proxyListener, r), p.splice(u, 1)) : n || (c.removeEventListener(h, m.proxyListener, r), p.splice(u, 1));
          }
        }
      }

      return this;
    },
    trigger: function trigger() {
      for (var e = [], t = arguments.length; t--;) {
        e[t] = arguments[t];
      }

      for (var s = e[0].split(" "), n = e[1], r = 0; r < s.length; r += 1) {
        for (var o = s[r], l = 0; l < this.length; l += 1) {
          var h = this[l],
              d = void 0;

          try {
            d = new a.CustomEvent(o, {
              detail: n,
              bubbles: !0,
              cancelable: !0
            });
          } catch (e) {
            (d = i.createEvent("Event")).initEvent(o, !0, !0), d.detail = n;
          }

          h.dom7EventData = e.filter(function (e, t) {
            return t > 0;
          }), h.dispatchEvent(d), h.dom7EventData = [], delete h.dom7EventData;
        }
      }

      return this;
    },
    transitionEnd: function transitionEnd(e) {
      var t,
          i = ["webkitTransitionEnd", "transitionend"],
          s = this;

      function a(n) {
        if (n.target === this) for (e.call(this, n), t = 0; t < i.length; t += 1) {
          s.off(i[t], a);
        }
      }

      if (e) for (t = 0; t < i.length; t += 1) {
        s.on(i[t], a);
      }
      return this;
    },
    outerWidth: function outerWidth(e) {
      if (this.length > 0) {
        if (e) {
          var t = this.styles();
          return this[0].offsetWidth + parseFloat(t.getPropertyValue("margin-right")) + parseFloat(t.getPropertyValue("margin-left"));
        }

        return this[0].offsetWidth;
      }

      return null;
    },
    outerHeight: function outerHeight(e) {
      if (this.length > 0) {
        if (e) {
          var t = this.styles();
          return this[0].offsetHeight + parseFloat(t.getPropertyValue("margin-top")) + parseFloat(t.getPropertyValue("margin-bottom"));
        }

        return this[0].offsetHeight;
      }

      return null;
    },
    offset: function offset() {
      if (this.length > 0) {
        var e = this[0],
            t = e.getBoundingClientRect(),
            s = i.body,
            n = e.clientTop || s.clientTop || 0,
            r = e.clientLeft || s.clientLeft || 0,
            o = e === a ? a.scrollY : e.scrollTop,
            l = e === a ? a.scrollX : e.scrollLeft;
        return {
          top: t.top + o - n,
          left: t.left + l - r
        };
      }

      return null;
    },
    css: function css(e, t) {
      var i;

      if (1 === arguments.length) {
        if ("string" != typeof e) {
          for (i = 0; i < this.length; i += 1) {
            for (var s in e) {
              this[i].style[s] = e[s];
            }
          }

          return this;
        }

        if (this[0]) return a.getComputedStyle(this[0], null).getPropertyValue(e);
      }

      if (2 === arguments.length && "string" == typeof e) {
        for (i = 0; i < this.length; i += 1) {
          this[i].style[e] = t;
        }

        return this;
      }

      return this;
    },
    each: function each(e) {
      if (!e) return this;

      for (var t = 0; t < this.length; t += 1) {
        if (!1 === e.call(this[t], t, this[t])) return this;
      }

      return this;
    },
    html: function html(e) {
      if (void 0 === e) return this[0] ? this[0].innerHTML : void 0;

      for (var t = 0; t < this.length; t += 1) {
        this[t].innerHTML = e;
      }

      return this;
    },
    text: function text(e) {
      if (void 0 === e) return this[0] ? this[0].textContent.trim() : null;

      for (var t = 0; t < this.length; t += 1) {
        this[t].textContent = e;
      }

      return this;
    },
    is: function is(e) {
      var t,
          s,
          o = this[0];
      if (!o || void 0 === e) return !1;

      if ("string" == typeof e) {
        if (o.matches) return o.matches(e);
        if (o.webkitMatchesSelector) return o.webkitMatchesSelector(e);
        if (o.msMatchesSelector) return o.msMatchesSelector(e);

        for (t = r(e), s = 0; s < t.length; s += 1) {
          if (t[s] === o) return !0;
        }

        return !1;
      }

      if (e === i) return o === i;
      if (e === a) return o === a;

      if (e.nodeType || e instanceof n) {
        for (t = e.nodeType ? [e] : e, s = 0; s < t.length; s += 1) {
          if (t[s] === o) return !0;
        }

        return !1;
      }

      return !1;
    },
    index: function index() {
      var e,
          t = this[0];

      if (t) {
        for (e = 0; null !== (t = t.previousSibling);) {
          1 === t.nodeType && (e += 1);
        }

        return e;
      }
    },
    eq: function eq(e) {
      if (void 0 === e) return this;
      var t,
          i = this.length;
      return new n(e > i - 1 ? [] : e < 0 ? (t = i + e) < 0 ? [] : [this[t]] : [this[e]]);
    },
    append: function append() {
      for (var e, t = [], s = arguments.length; s--;) {
        t[s] = arguments[s];
      }

      for (var a = 0; a < t.length; a += 1) {
        e = t[a];

        for (var r = 0; r < this.length; r += 1) {
          if ("string" == typeof e) {
            var o = i.createElement("div");

            for (o.innerHTML = e; o.firstChild;) {
              this[r].appendChild(o.firstChild);
            }
          } else if (e instanceof n) for (var l = 0; l < e.length; l += 1) {
            this[r].appendChild(e[l]);
          } else this[r].appendChild(e);
        }
      }

      return this;
    },
    prepend: function prepend(e) {
      var t, s;

      for (t = 0; t < this.length; t += 1) {
        if ("string" == typeof e) {
          var a = i.createElement("div");

          for (a.innerHTML = e, s = a.childNodes.length - 1; s >= 0; s -= 1) {
            this[t].insertBefore(a.childNodes[s], this[t].childNodes[0]);
          }
        } else if (e instanceof n) for (s = 0; s < e.length; s += 1) {
          this[t].insertBefore(e[s], this[t].childNodes[0]);
        } else this[t].insertBefore(e, this[t].childNodes[0]);
      }

      return this;
    },
    next: function next(e) {
      return this.length > 0 ? e ? this[0].nextElementSibling && r(this[0].nextElementSibling).is(e) ? new n([this[0].nextElementSibling]) : new n([]) : this[0].nextElementSibling ? new n([this[0].nextElementSibling]) : new n([]) : new n([]);
    },
    nextAll: function nextAll(e) {
      var t = [],
          i = this[0];
      if (!i) return new n([]);

      for (; i.nextElementSibling;) {
        var s = i.nextElementSibling;
        e ? r(s).is(e) && t.push(s) : t.push(s), i = s;
      }

      return new n(t);
    },
    prev: function prev(e) {
      if (this.length > 0) {
        var t = this[0];
        return e ? t.previousElementSibling && r(t.previousElementSibling).is(e) ? new n([t.previousElementSibling]) : new n([]) : t.previousElementSibling ? new n([t.previousElementSibling]) : new n([]);
      }

      return new n([]);
    },
    prevAll: function prevAll(e) {
      var t = [],
          i = this[0];
      if (!i) return new n([]);

      for (; i.previousElementSibling;) {
        var s = i.previousElementSibling;
        e ? r(s).is(e) && t.push(s) : t.push(s), i = s;
      }

      return new n(t);
    },
    parent: function parent(e) {
      for (var t = [], i = 0; i < this.length; i += 1) {
        null !== this[i].parentNode && (e ? r(this[i].parentNode).is(e) && t.push(this[i].parentNode) : t.push(this[i].parentNode));
      }

      return r(o(t));
    },
    parents: function parents(e) {
      for (var t = [], i = 0; i < this.length; i += 1) {
        for (var s = this[i].parentNode; s;) {
          e ? r(s).is(e) && t.push(s) : t.push(s), s = s.parentNode;
        }
      }

      return r(o(t));
    },
    closest: function closest(e) {
      var t = this;
      return void 0 === e ? new n([]) : (t.is(e) || (t = t.parents(e).eq(0)), t);
    },
    find: function find(e) {
      for (var t = [], i = 0; i < this.length; i += 1) {
        for (var s = this[i].querySelectorAll(e), a = 0; a < s.length; a += 1) {
          t.push(s[a]);
        }
      }

      return new n(t);
    },
    children: function children(e) {
      for (var t = [], i = 0; i < this.length; i += 1) {
        for (var s = this[i].childNodes, a = 0; a < s.length; a += 1) {
          e ? 1 === s[a].nodeType && r(s[a]).is(e) && t.push(s[a]) : 1 === s[a].nodeType && t.push(s[a]);
        }
      }

      return new n(o(t));
    },
    filter: function filter(e) {
      for (var t = [], i = 0; i < this.length; i += 1) {
        e.call(this[i], i, this[i]) && t.push(this[i]);
      }

      return new n(t);
    },
    remove: function remove() {
      for (var e = 0; e < this.length; e += 1) {
        this[e].parentNode && this[e].parentNode.removeChild(this[e]);
      }

      return this;
    },
    add: function add() {
      for (var e = [], t = arguments.length; t--;) {
        e[t] = arguments[t];
      }

      var i,
          s,
          a = this;

      for (i = 0; i < e.length; i += 1) {
        var n = r(e[i]);

        for (s = 0; s < n.length; s += 1) {
          a[a.length] = n[s], a.length += 1;
        }
      }

      return a;
    },
    styles: function styles() {
      return this[0] ? a.getComputedStyle(this[0], null) : {};
    }
  };
  Object.keys(l).forEach(function (e) {
    r.fn[e] = r.fn[e] || l[e];
  });

  var h = {
    deleteProps: function deleteProps(e) {
      var t = e;
      Object.keys(t).forEach(function (e) {
        try {
          t[e] = null;
        } catch (e) {}

        try {
          delete t[e];
        } catch (e) {}
      });
    },
    nextTick: function nextTick(e, t) {
      return void 0 === t && (t = 0), setTimeout(e, t);
    },
    now: function now() {
      return Date.now();
    },
    getTranslate: function getTranslate(e, t) {
      var i, s, n;
      void 0 === t && (t = "x");
      var r = a.getComputedStyle(e, null);
      return a.WebKitCSSMatrix ? ((s = r.transform || r.webkitTransform).split(",").length > 6 && (s = s.split(", ").map(function (e) {
        return e.replace(",", ".");
      }).join(", ")), n = new a.WebKitCSSMatrix("none" === s ? "" : s)) : i = (n = r.MozTransform || r.OTransform || r.MsTransform || r.msTransform || r.transform || r.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,")).toString().split(","), "x" === t && (s = a.WebKitCSSMatrix ? n.m41 : 16 === i.length ? parseFloat(i[12]) : parseFloat(i[4])), "y" === t && (s = a.WebKitCSSMatrix ? n.m42 : 16 === i.length ? parseFloat(i[13]) : parseFloat(i[5])), s || 0;
    },
    parseUrlQuery: function parseUrlQuery(e) {
      var t,
          i,
          s,
          n,
          r = {},
          o = e || a.location.href;
      if ("string" == typeof o && o.length) for (n = (i = (o = o.indexOf("?") > -1 ? o.replace(/\S*\?/, "") : "").split("&").filter(function (e) {
        return "" !== e;
      })).length, t = 0; t < n; t += 1) {
        s = i[t].replace(/#\S+/g, "").split("="), r[decodeURIComponent(s[0])] = void 0 === s[1] ? void 0 : decodeURIComponent(s[1]) || "";
      }
      return r;
    },
    isObject: function isObject(e) {
      return "object" == _typeof(e) && null !== e && e.constructor && e.constructor === Object;
    },
    extend: function extend() {
      for (var e = [], t = arguments.length; t--;) {
        e[t] = arguments[t];
      }

      for (var i = Object(e[0]), s = 1; s < e.length; s += 1) {
        var a = e[s];
        if (null != a) for (var n = Object.keys(Object(a)), r = 0, o = n.length; r < o; r += 1) {
          var l = n[r],
              d = Object.getOwnPropertyDescriptor(a, l);
          void 0 !== d && d.enumerable && (h.isObject(i[l]) && h.isObject(a[l]) ? h.extend(i[l], a[l]) : !h.isObject(i[l]) && h.isObject(a[l]) ? (i[l] = {}, h.extend(i[l], a[l])) : i[l] = a[l]);
        }
      }

      return i;
    }
  },
      d = {
    touch: !!("ontouchstart" in a || a.DocumentTouch && i instanceof a.DocumentTouch),
    pointerEvents: !!a.PointerEvent && "maxTouchPoints" in a.navigator && a.navigator.maxTouchPoints >= 0,
    observer: "MutationObserver" in a || "WebkitMutationObserver" in a,
    passiveListener: function () {
      var e = !1;

      try {
        var t = Object.defineProperty({}, "passive", {
          get: function get() {
            e = !0;
          }
        });
        a.addEventListener("testPassiveListener", null, t);
      } catch (e) {}

      return e;
    }(),
    gestures: "ongesturestart" in a
  },
      c = function c(e) {
    void 0 === e && (e = {});
    var t = this;
    t.params = e, t.eventsListeners = {}, t.params && t.params.on && Object.keys(t.params.on).forEach(function (e) {
      t.on(e, t.params.on[e]);
    });
  },
      p = {
    components: {
      configurable: !0
    }
  };

  c.prototype.on = function (e, t, i) {
    var s = this;
    if ("function" != typeof t) return s;
    var a = i ? "unshift" : "push";
    return e.split(" ").forEach(function (e) {
      s.eventsListeners[e] || (s.eventsListeners[e] = []), s.eventsListeners[e][a](t);
    }), s;
  }, c.prototype.once = function (e, t, i) {
    var s = this;
    if ("function" != typeof t) return s;

    function a() {
      for (var i = [], n = arguments.length; n--;) {
        i[n] = arguments[n];
      }

      s.off(e, a), a.f7proxy && delete a.f7proxy, t.apply(s, i);
    }

    return a.f7proxy = t, s.on(e, a, i);
  }, c.prototype.off = function (e, t) {
    var i = this;
    return i.eventsListeners ? (e.split(" ").forEach(function (e) {
      void 0 === t ? i.eventsListeners[e] = [] : i.eventsListeners[e] && i.eventsListeners[e].length && i.eventsListeners[e].forEach(function (s, a) {
        (s === t || s.f7proxy && s.f7proxy === t) && i.eventsListeners[e].splice(a, 1);
      });
    }), i) : i;
  }, c.prototype.emit = function () {
    for (var e = [], t = arguments.length; t--;) {
      e[t] = arguments[t];
    }

    var i,
        s,
        a,
        n = this;
    if (!n.eventsListeners) return n;
    "string" == typeof e[0] || Array.isArray(e[0]) ? (i = e[0], s = e.slice(1, e.length), a = n) : (i = e[0].events, s = e[0].data, a = e[0].context || n);
    var r = Array.isArray(i) ? i : i.split(" ");
    return r.forEach(function (e) {
      if (n.eventsListeners && n.eventsListeners[e]) {
        var t = [];
        n.eventsListeners[e].forEach(function (e) {
          t.push(e);
        }), t.forEach(function (e) {
          e.apply(a, s);
        });
      }
    }), n;
  }, c.prototype.useModulesParams = function (e) {
    var t = this;
    t.modules && Object.keys(t.modules).forEach(function (i) {
      var s = t.modules[i];
      s.params && h.extend(e, s.params);
    });
  }, c.prototype.useModules = function (e) {
    void 0 === e && (e = {});
    var t = this;
    t.modules && Object.keys(t.modules).forEach(function (i) {
      var s = t.modules[i],
          a = e[i] || {};
      s.instance && Object.keys(s.instance).forEach(function (e) {
        var i = s.instance[e];
        t[e] = "function" == typeof i ? i.bind(t) : i;
      }), s.on && t.on && Object.keys(s.on).forEach(function (e) {
        t.on(e, s.on[e]);
      }), s.create && s.create.bind(t)(a);
    });
  }, p.components.set = function (e) {
    this.use && this.use(e);
  }, c.installModule = function (e) {
    for (var t = [], i = arguments.length - 1; i-- > 0;) {
      t[i] = arguments[i + 1];
    }

    var s = this;
    s.prototype.modules || (s.prototype.modules = {});
    var a = e.name || Object.keys(s.prototype.modules).length + "_" + h.now();
    return s.prototype.modules[a] = e, e.proto && Object.keys(e.proto).forEach(function (t) {
      s.prototype[t] = e.proto[t];
    }), e["static"] && Object.keys(e["static"]).forEach(function (t) {
      s[t] = e["static"][t];
    }), e.install && e.install.apply(s, t), s;
  }, c.use = function (e) {
    for (var t = [], i = arguments.length - 1; i-- > 0;) {
      t[i] = arguments[i + 1];
    }

    var s = this;
    return Array.isArray(e) ? (e.forEach(function (e) {
      return s.installModule(e);
    }), s) : s.installModule.apply(s, [e].concat(t));
  }, Object.defineProperties(c, p);

  var u,
      m,
      f,
      v,
      g,
      y,
      w,
      b,
      x,
      E,
      C,
      T,
      S,
      M,
      _,
      z = {
    updateSize: function updateSize() {
      var e,
          t,
          i = this.$el;
      e = void 0 !== this.params.width ? this.params.width : i[0].clientWidth, t = void 0 !== this.params.height ? this.params.height : i[0].clientHeight, 0 === e && this.isHorizontal() || 0 === t && this.isVertical() || (e = e - parseInt(i.css("padding-left"), 10) - parseInt(i.css("padding-right"), 10), t = t - parseInt(i.css("padding-top"), 10) - parseInt(i.css("padding-bottom"), 10), h.extend(this, {
        width: e,
        height: t,
        size: this.isHorizontal() ? e : t
      }));
    },
    updateSlides: function updateSlides() {
      var e = this.params,
          t = this.$wrapperEl,
          i = this.size,
          s = this.rtlTranslate,
          n = this.wrongRTL,
          r = this.virtual && e.virtual.enabled,
          o = r ? this.virtual.slides.length : this.slides.length,
          l = t.children("." + this.params.slideClass),
          d = r ? this.virtual.slides.length : l.length,
          c = [],
          p = [],
          u = [];

      function m(t) {
        return !e.cssMode || t !== l.length - 1;
      }

      var f = e.slidesOffsetBefore;
      "function" == typeof f && (f = e.slidesOffsetBefore.call(this));
      var v = e.slidesOffsetAfter;
      "function" == typeof v && (v = e.slidesOffsetAfter.call(this));
      var g = this.snapGrid.length,
          y = this.snapGrid.length,
          w = e.spaceBetween,
          b = -f,
          x = 0,
          E = 0;

      if (void 0 !== i) {
        var C, T;
        "string" == typeof w && w.indexOf("%") >= 0 && (w = parseFloat(w.replace("%", "")) / 100 * i), this.virtualSize = -w, s ? l.css({
          marginLeft: "",
          marginTop: ""
        }) : l.css({
          marginRight: "",
          marginBottom: ""
        }), e.slidesPerColumn > 1 && (C = Math.floor(d / e.slidesPerColumn) === d / this.params.slidesPerColumn ? d : Math.ceil(d / e.slidesPerColumn) * e.slidesPerColumn, "auto" !== e.slidesPerView && "row" === e.slidesPerColumnFill && (C = Math.max(C, e.slidesPerView * e.slidesPerColumn)));

        for (var S, M = e.slidesPerColumn, _ = C / M, z = Math.floor(d / e.slidesPerColumn), $ = 0; $ < d; $ += 1) {
          T = 0;
          var P = l.eq($);

          if (e.slidesPerColumn > 1) {
            var D = void 0,
                k = void 0,
                L = void 0;

            if ("row" === e.slidesPerColumnFill && e.slidesPerGroup > 1) {
              var I = Math.floor($ / (e.slidesPerGroup * e.slidesPerColumn)),
                  O = $ - e.slidesPerColumn * e.slidesPerGroup * I,
                  A = 0 === I ? e.slidesPerGroup : Math.min(Math.ceil((d - I * M * e.slidesPerGroup) / M), e.slidesPerGroup);
              D = (k = O - (L = Math.floor(O / A)) * A + I * e.slidesPerGroup) + L * C / M, P.css({
                "-webkit-box-ordinal-group": D,
                "-moz-box-ordinal-group": D,
                "-ms-flex-order": D,
                "-webkit-order": D,
                order: D
              });
            } else "column" === e.slidesPerColumnFill ? (L = $ - (k = Math.floor($ / M)) * M, (k > z || k === z && L === M - 1) && (L += 1) >= M && (L = 0, k += 1)) : k = $ - (L = Math.floor($ / _)) * _;

            P.css("margin-" + (this.isHorizontal() ? "top" : "left"), 0 !== L && e.spaceBetween && e.spaceBetween + "px");
          }

          if ("none" !== P.css("display")) {
            if ("auto" === e.slidesPerView) {
              var q = a.getComputedStyle(P[0], null),
                  H = P[0].style.transform,
                  N = P[0].style.webkitTransform;
              if (H && (P[0].style.transform = "none"), N && (P[0].style.webkitTransform = "none"), e.roundLengths) T = this.isHorizontal() ? P.outerWidth(!0) : P.outerHeight(!0);else if (this.isHorizontal()) {
                var B = parseFloat(q.getPropertyValue("width")),
                    G = parseFloat(q.getPropertyValue("padding-left")),
                    Y = parseFloat(q.getPropertyValue("padding-right")),
                    j = parseFloat(q.getPropertyValue("margin-left")),
                    V = parseFloat(q.getPropertyValue("margin-right")),
                    W = q.getPropertyValue("box-sizing");
                T = W && "border-box" === W ? B + j + V : B + G + Y + j + V;
              } else {
                var R = parseFloat(q.getPropertyValue("height")),
                    F = parseFloat(q.getPropertyValue("padding-top")),
                    X = parseFloat(q.getPropertyValue("padding-bottom")),
                    U = parseFloat(q.getPropertyValue("margin-top")),
                    K = parseFloat(q.getPropertyValue("margin-bottom")),
                    Q = q.getPropertyValue("box-sizing");
                T = Q && "border-box" === Q ? R + U + K : R + F + X + U + K;
              }
              H && (P[0].style.transform = H), N && (P[0].style.webkitTransform = N), e.roundLengths && (T = Math.floor(T));
            } else T = (i - (e.slidesPerView - 1) * w) / e.slidesPerView, e.roundLengths && (T = Math.floor(T)), l[$] && (this.isHorizontal() ? l[$].style.width = T + "px" : l[$].style.height = T + "px");

            l[$] && (l[$].swiperSlideSize = T), u.push(T), e.centeredSlides ? (b = b + T / 2 + x / 2 + w, 0 === x && 0 !== $ && (b = b - i / 2 - w), 0 === $ && (b = b - i / 2 - w), Math.abs(b) < .001 && (b = 0), e.roundLengths && (b = Math.floor(b)), E % e.slidesPerGroup == 0 && c.push(b), p.push(b)) : (e.roundLengths && (b = Math.floor(b)), (E - Math.min(this.params.slidesPerGroupSkip, E)) % this.params.slidesPerGroup == 0 && c.push(b), p.push(b), b = b + T + w), this.virtualSize += T + w, x = T, E += 1;
          }
        }

        if (this.virtualSize = Math.max(this.virtualSize, i) + v, s && n && ("slide" === e.effect || "coverflow" === e.effect) && t.css({
          width: this.virtualSize + e.spaceBetween + "px"
        }), e.setWrapperSize && (this.isHorizontal() ? t.css({
          width: this.virtualSize + e.spaceBetween + "px"
        }) : t.css({
          height: this.virtualSize + e.spaceBetween + "px"
        })), e.slidesPerColumn > 1 && (this.virtualSize = (T + e.spaceBetween) * C, this.virtualSize = Math.ceil(this.virtualSize / e.slidesPerColumn) - e.spaceBetween, this.isHorizontal() ? t.css({
          width: this.virtualSize + e.spaceBetween + "px"
        }) : t.css({
          height: this.virtualSize + e.spaceBetween + "px"
        }), e.centeredSlides)) {
          S = [];

          for (var Z = 0; Z < c.length; Z += 1) {
            var J = c[Z];
            e.roundLengths && (J = Math.floor(J)), c[Z] < this.virtualSize + c[0] && S.push(J);
          }

          c = S;
        }

        if (!e.centeredSlides) {
          S = [];

          for (var ee = 0; ee < c.length; ee += 1) {
            var te = c[ee];
            e.roundLengths && (te = Math.floor(te)), c[ee] <= this.virtualSize - i && S.push(te);
          }

          c = S, Math.floor(this.virtualSize - i) - Math.floor(c[c.length - 1]) > 1 && c.push(this.virtualSize - i);
        }

        if (0 === c.length && (c = [0]), 0 !== e.spaceBetween && (this.isHorizontal() ? s ? l.filter(m).css({
          marginLeft: w + "px"
        }) : l.filter(m).css({
          marginRight: w + "px"
        }) : l.filter(m).css({
          marginBottom: w + "px"
        })), e.centeredSlides && e.centeredSlidesBounds) {
          var ie = 0;
          u.forEach(function (t) {
            ie += t + (e.spaceBetween ? e.spaceBetween : 0);
          });
          var se = (ie -= e.spaceBetween) - i;
          c = c.map(function (e) {
            return e < 0 ? -f : e > se ? se + v : e;
          });
        }

        if (e.centerInsufficientSlides) {
          var ae = 0;

          if (u.forEach(function (t) {
            ae += t + (e.spaceBetween ? e.spaceBetween : 0);
          }), (ae -= e.spaceBetween) < i) {
            var ne = (i - ae) / 2;
            c.forEach(function (e, t) {
              c[t] = e - ne;
            }), p.forEach(function (e, t) {
              p[t] = e + ne;
            });
          }
        }

        h.extend(this, {
          slides: l,
          snapGrid: c,
          slidesGrid: p,
          slidesSizesGrid: u
        }), d !== o && this.emit("slidesLengthChange"), c.length !== g && (this.params.watchOverflow && this.checkOverflow(), this.emit("snapGridLengthChange")), p.length !== y && this.emit("slidesGridLengthChange"), (e.watchSlidesProgress || e.watchSlidesVisibility) && this.updateSlidesOffset();
      }
    },
    updateAutoHeight: function updateAutoHeight(e) {
      var t,
          i = [],
          s = 0;
      if ("number" == typeof e ? this.setTransition(e) : !0 === e && this.setTransition(this.params.speed), "auto" !== this.params.slidesPerView && this.params.slidesPerView > 1) {
        if (this.params.centeredSlides) this.visibleSlides.each(function (e, t) {
          i.push(t);
        });else for (t = 0; t < Math.ceil(this.params.slidesPerView); t += 1) {
          var a = this.activeIndex + t;
          if (a > this.slides.length) break;
          i.push(this.slides.eq(a)[0]);
        }
      } else i.push(this.slides.eq(this.activeIndex)[0]);

      for (t = 0; t < i.length; t += 1) {
        if (void 0 !== i[t]) {
          var n = i[t].offsetHeight;
          s = n > s ? n : s;
        }
      }

      s && this.$wrapperEl.css("height", s + "px");
    },
    updateSlidesOffset: function updateSlidesOffset() {
      for (var e = this.slides, t = 0; t < e.length; t += 1) {
        e[t].swiperSlideOffset = this.isHorizontal() ? e[t].offsetLeft : e[t].offsetTop;
      }
    },
    updateSlidesProgress: function updateSlidesProgress(e) {
      void 0 === e && (e = this && this.translate || 0);
      var t = this.params,
          i = this.slides,
          s = this.rtlTranslate;

      if (0 !== i.length) {
        void 0 === i[0].swiperSlideOffset && this.updateSlidesOffset();
        var a = -e;
        s && (a = e), i.removeClass(t.slideVisibleClass), this.visibleSlidesIndexes = [], this.visibleSlides = [];

        for (var n = 0; n < i.length; n += 1) {
          var o = i[n],
              l = (a + (t.centeredSlides ? this.minTranslate() : 0) - o.swiperSlideOffset) / (o.swiperSlideSize + t.spaceBetween);

          if (t.watchSlidesVisibility || t.centeredSlides && t.autoHeight) {
            var h = -(a - o.swiperSlideOffset),
                d = h + this.slidesSizesGrid[n];
            (h >= 0 && h < this.size - 1 || d > 1 && d <= this.size || h <= 0 && d >= this.size) && (this.visibleSlides.push(o), this.visibleSlidesIndexes.push(n), i.eq(n).addClass(t.slideVisibleClass));
          }

          o.progress = s ? -l : l;
        }

        this.visibleSlides = r(this.visibleSlides);
      }
    },
    updateProgress: function updateProgress(e) {
      if (void 0 === e) {
        var t = this.rtlTranslate ? -1 : 1;
        e = this && this.translate && this.translate * t || 0;
      }

      var i = this.params,
          s = this.maxTranslate() - this.minTranslate(),
          a = this.progress,
          n = this.isBeginning,
          r = this.isEnd,
          o = n,
          l = r;
      0 === s ? (a = 0, n = !0, r = !0) : (n = (a = (e - this.minTranslate()) / s) <= 0, r = a >= 1), h.extend(this, {
        progress: a,
        isBeginning: n,
        isEnd: r
      }), (i.watchSlidesProgress || i.watchSlidesVisibility || i.centeredSlides && i.autoHeight) && this.updateSlidesProgress(e), n && !o && this.emit("reachBeginning toEdge"), r && !l && this.emit("reachEnd toEdge"), (o && !n || l && !r) && this.emit("fromEdge"), this.emit("progress", a);
    },
    updateSlidesClasses: function updateSlidesClasses() {
      var e,
          t = this.slides,
          i = this.params,
          s = this.$wrapperEl,
          a = this.activeIndex,
          n = this.realIndex,
          r = this.virtual && i.virtual.enabled;
      t.removeClass(i.slideActiveClass + " " + i.slideNextClass + " " + i.slidePrevClass + " " + i.slideDuplicateActiveClass + " " + i.slideDuplicateNextClass + " " + i.slideDuplicatePrevClass), (e = r ? this.$wrapperEl.find("." + i.slideClass + '[data-swiper-slide-index="' + a + '"]') : t.eq(a)).addClass(i.slideActiveClass), i.loop && (e.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + n + '"]').addClass(i.slideDuplicateActiveClass));
      var o = e.nextAll("." + i.slideClass).eq(0).addClass(i.slideNextClass);
      i.loop && 0 === o.length && (o = t.eq(0)).addClass(i.slideNextClass);
      var l = e.prevAll("." + i.slideClass).eq(0).addClass(i.slidePrevClass);
      i.loop && 0 === l.length && (l = t.eq(-1)).addClass(i.slidePrevClass), i.loop && (o.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + o.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicateNextClass), l.hasClass(i.slideDuplicateClass) ? s.children("." + i.slideClass + ":not(." + i.slideDuplicateClass + ')[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass) : s.children("." + i.slideClass + "." + i.slideDuplicateClass + '[data-swiper-slide-index="' + l.attr("data-swiper-slide-index") + '"]').addClass(i.slideDuplicatePrevClass));
    },
    updateActiveIndex: function updateActiveIndex(e) {
      var t,
          i = this.rtlTranslate ? this.translate : -this.translate,
          s = this.slidesGrid,
          a = this.snapGrid,
          n = this.params,
          r = this.activeIndex,
          o = this.realIndex,
          l = this.snapIndex,
          d = e;

      if (void 0 === d) {
        for (var c = 0; c < s.length; c += 1) {
          void 0 !== s[c + 1] ? i >= s[c] && i < s[c + 1] - (s[c + 1] - s[c]) / 2 ? d = c : i >= s[c] && i < s[c + 1] && (d = c + 1) : i >= s[c] && (d = c);
        }

        n.normalizeSlideIndex && (d < 0 || void 0 === d) && (d = 0);
      }

      if (a.indexOf(i) >= 0) t = a.indexOf(i);else {
        var p = Math.min(n.slidesPerGroupSkip, d);
        t = p + Math.floor((d - p) / n.slidesPerGroup);
      }

      if (t >= a.length && (t = a.length - 1), d !== r) {
        var u = parseInt(this.slides.eq(d).attr("data-swiper-slide-index") || d, 10);
        h.extend(this, {
          snapIndex: t,
          realIndex: u,
          previousIndex: r,
          activeIndex: d
        }), this.emit("activeIndexChange"), this.emit("snapIndexChange"), o !== u && this.emit("realIndexChange"), (this.initialized || this.params.runCallbacksOnInit) && this.emit("slideChange");
      } else t !== l && (this.snapIndex = t, this.emit("snapIndexChange"));
    },
    updateClickedSlide: function updateClickedSlide(e) {
      var t = this.params,
          i = r(e.target).closest("." + t.slideClass)[0],
          s = !1;
      if (i) for (var a = 0; a < this.slides.length; a += 1) {
        this.slides[a] === i && (s = !0);
      }
      if (!i || !s) return this.clickedSlide = void 0, void (this.clickedIndex = void 0);
      this.clickedSlide = i, this.virtual && this.params.virtual.enabled ? this.clickedIndex = parseInt(r(i).attr("data-swiper-slide-index"), 10) : this.clickedIndex = r(i).index(), t.slideToClickedSlide && void 0 !== this.clickedIndex && this.clickedIndex !== this.activeIndex && this.slideToClickedSlide();
    }
  },
      $ = {
    getTranslate: function getTranslate(e) {
      void 0 === e && (e = this.isHorizontal() ? "x" : "y");
      var t = this.params,
          i = this.rtlTranslate,
          s = this.translate,
          a = this.$wrapperEl;
      if (t.virtualTranslate) return i ? -s : s;
      if (t.cssMode) return s;
      var n = h.getTranslate(a[0], e);
      return i && (n = -n), n || 0;
    },
    setTranslate: function setTranslate(e, t) {
      var i = this.rtlTranslate,
          s = this.params,
          a = this.$wrapperEl,
          n = this.wrapperEl,
          r = this.progress,
          o = 0,
          l = 0;
      this.isHorizontal() ? o = i ? -e : e : l = e, s.roundLengths && (o = Math.floor(o), l = Math.floor(l)), s.cssMode ? n[this.isHorizontal() ? "scrollLeft" : "scrollTop"] = this.isHorizontal() ? -o : -l : s.virtualTranslate || a.transform("translate3d(" + o + "px, " + l + "px, 0px)"), this.previousTranslate = this.translate, this.translate = this.isHorizontal() ? o : l;
      var h = this.maxTranslate() - this.minTranslate();
      (0 === h ? 0 : (e - this.minTranslate()) / h) !== r && this.updateProgress(e), this.emit("setTranslate", this.translate, t);
    },
    minTranslate: function minTranslate() {
      return -this.snapGrid[0];
    },
    maxTranslate: function maxTranslate() {
      return -this.snapGrid[this.snapGrid.length - 1];
    },
    translateTo: function translateTo(e, t, i, s, a) {
      var n;
      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0), void 0 === s && (s = !0);
      var r = this,
          o = r.params,
          l = r.wrapperEl;
      if (r.animating && o.preventInteractionOnTransition) return !1;
      var h,
          d = r.minTranslate(),
          c = r.maxTranslate();

      if (h = s && e > d ? d : s && e < c ? c : e, r.updateProgress(h), o.cssMode) {
        var p = r.isHorizontal();
        return 0 === t ? l[p ? "scrollLeft" : "scrollTop"] = -h : l.scrollTo ? l.scrollTo(((n = {})[p ? "left" : "top"] = -h, n.behavior = "smooth", n)) : l[p ? "scrollLeft" : "scrollTop"] = -h, !0;
      }

      return 0 === t ? (r.setTransition(0), r.setTranslate(h), i && (r.emit("beforeTransitionStart", t, a), r.emit("transitionEnd"))) : (r.setTransition(t), r.setTranslate(h), i && (r.emit("beforeTransitionStart", t, a), r.emit("transitionStart")), r.animating || (r.animating = !0, r.onTranslateToWrapperTransitionEnd || (r.onTranslateToWrapperTransitionEnd = function (e) {
        r && !r.destroyed && e.target === this && (r.$wrapperEl[0].removeEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].removeEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd), r.onTranslateToWrapperTransitionEnd = null, delete r.onTranslateToWrapperTransitionEnd, i && r.emit("transitionEnd"));
      }), r.$wrapperEl[0].addEventListener("transitionend", r.onTranslateToWrapperTransitionEnd), r.$wrapperEl[0].addEventListener("webkitTransitionEnd", r.onTranslateToWrapperTransitionEnd))), !0;
    }
  },
      P = {
    slideTo: function slideTo(e, t, i, s) {
      var a;
      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0);
      var n = this,
          r = e;
      r < 0 && (r = 0);
      var o = n.params,
          l = n.snapGrid,
          h = n.slidesGrid,
          d = n.previousIndex,
          c = n.activeIndex,
          p = n.rtlTranslate,
          u = n.wrapperEl;
      if (n.animating && o.preventInteractionOnTransition) return !1;
      var m = Math.min(n.params.slidesPerGroupSkip, r),
          f = m + Math.floor((r - m) / n.params.slidesPerGroup);
      f >= l.length && (f = l.length - 1), (c || o.initialSlide || 0) === (d || 0) && i && n.emit("beforeSlideChangeStart");
      var v,
          g = -l[f];
      if (n.updateProgress(g), o.normalizeSlideIndex) for (var y = 0; y < h.length; y += 1) {
        -Math.floor(100 * g) >= Math.floor(100 * h[y]) && (r = y);
      }

      if (n.initialized && r !== c) {
        if (!n.allowSlideNext && g < n.translate && g < n.minTranslate()) return !1;
        if (!n.allowSlidePrev && g > n.translate && g > n.maxTranslate() && (c || 0) !== r) return !1;
      }

      if (v = r > c ? "next" : r < c ? "prev" : "reset", p && -g === n.translate || !p && g === n.translate) return n.updateActiveIndex(r), o.autoHeight && n.updateAutoHeight(), n.updateSlidesClasses(), "slide" !== o.effect && n.setTranslate(g), "reset" !== v && (n.transitionStart(i, v), n.transitionEnd(i, v)), !1;

      if (o.cssMode) {
        var w = n.isHorizontal(),
            b = -g;
        return p && (b = u.scrollWidth - u.offsetWidth - b), 0 === t ? u[w ? "scrollLeft" : "scrollTop"] = b : u.scrollTo ? u.scrollTo(((a = {})[w ? "left" : "top"] = b, a.behavior = "smooth", a)) : u[w ? "scrollLeft" : "scrollTop"] = b, !0;
      }

      return 0 === t ? (n.setTransition(0), n.setTranslate(g), n.updateActiveIndex(r), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, s), n.transitionStart(i, v), n.transitionEnd(i, v)) : (n.setTransition(t), n.setTranslate(g), n.updateActiveIndex(r), n.updateSlidesClasses(), n.emit("beforeTransitionStart", t, s), n.transitionStart(i, v), n.animating || (n.animating = !0, n.onSlideToWrapperTransitionEnd || (n.onSlideToWrapperTransitionEnd = function (e) {
        n && !n.destroyed && e.target === this && (n.$wrapperEl[0].removeEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].removeEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd), n.onSlideToWrapperTransitionEnd = null, delete n.onSlideToWrapperTransitionEnd, n.transitionEnd(i, v));
      }), n.$wrapperEl[0].addEventListener("transitionend", n.onSlideToWrapperTransitionEnd), n.$wrapperEl[0].addEventListener("webkitTransitionEnd", n.onSlideToWrapperTransitionEnd))), !0;
    },
    slideToLoop: function slideToLoop(e, t, i, s) {
      void 0 === e && (e = 0), void 0 === t && (t = this.params.speed), void 0 === i && (i = !0);
      var a = e;
      return this.params.loop && (a += this.loopedSlides), this.slideTo(a, t, i, s);
    },
    slideNext: function slideNext(e, t, i) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      var s = this.params,
          a = this.animating,
          n = this.activeIndex < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup;

      if (s.loop) {
        if (a) return !1;
        this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
      }

      return this.slideTo(this.activeIndex + n, e, t, i);
    },
    slidePrev: function slidePrev(e, t, i) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0);
      var s = this.params,
          a = this.animating,
          n = this.snapGrid,
          r = this.slidesGrid,
          o = this.rtlTranslate;

      if (s.loop) {
        if (a) return !1;
        this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft;
      }

      function l(e) {
        return e < 0 ? -Math.floor(Math.abs(e)) : Math.floor(e);
      }

      var h,
          d = l(o ? this.translate : -this.translate),
          c = n.map(function (e) {
        return l(e);
      }),
          p = (r.map(function (e) {
        return l(e);
      }), n[c.indexOf(d)], n[c.indexOf(d) - 1]);
      return void 0 === p && s.cssMode && n.forEach(function (e) {
        !p && d >= e && (p = e);
      }), void 0 !== p && (h = r.indexOf(p)) < 0 && (h = this.activeIndex - 1), this.slideTo(h, e, t, i);
    },
    slideReset: function slideReset(e, t, i) {
      return void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), this.slideTo(this.activeIndex, e, t, i);
    },
    slideToClosest: function slideToClosest(e, t, i, s) {
      void 0 === e && (e = this.params.speed), void 0 === t && (t = !0), void 0 === s && (s = .5);
      var a = this.activeIndex,
          n = Math.min(this.params.slidesPerGroupSkip, a),
          r = n + Math.floor((a - n) / this.params.slidesPerGroup),
          o = this.rtlTranslate ? this.translate : -this.translate;

      if (o >= this.snapGrid[r]) {
        var l = this.snapGrid[r];
        o - l > (this.snapGrid[r + 1] - l) * s && (a += this.params.slidesPerGroup);
      } else {
        var h = this.snapGrid[r - 1];
        o - h <= (this.snapGrid[r] - h) * s && (a -= this.params.slidesPerGroup);
      }

      return a = Math.max(a, 0), a = Math.min(a, this.slidesGrid.length - 1), this.slideTo(a, e, t, i);
    },
    slideToClickedSlide: function slideToClickedSlide() {
      var e,
          t = this,
          i = t.params,
          s = t.$wrapperEl,
          a = "auto" === i.slidesPerView ? t.slidesPerViewDynamic() : i.slidesPerView,
          n = t.clickedIndex;

      if (i.loop) {
        if (t.animating) return;
        e = parseInt(r(t.clickedSlide).attr("data-swiper-slide-index"), 10), i.centeredSlides ? n < t.loopedSlides - a / 2 || n > t.slides.length - t.loopedSlides + a / 2 ? (t.loopFix(), n = s.children("." + i.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + i.slideDuplicateClass + ")").eq(0).index(), h.nextTick(function () {
          t.slideTo(n);
        })) : t.slideTo(n) : n > t.slides.length - a ? (t.loopFix(), n = s.children("." + i.slideClass + '[data-swiper-slide-index="' + e + '"]:not(.' + i.slideDuplicateClass + ")").eq(0).index(), h.nextTick(function () {
          t.slideTo(n);
        })) : t.slideTo(n);
      } else t.slideTo(n);
    }
  },
      D = {
    loopCreate: function loopCreate() {
      var e = this,
          t = e.params,
          s = e.$wrapperEl;
      s.children("." + t.slideClass + "." + t.slideDuplicateClass).remove();
      var a = s.children("." + t.slideClass);

      if (t.loopFillGroupWithBlank) {
        var n = t.slidesPerGroup - a.length % t.slidesPerGroup;

        if (n !== t.slidesPerGroup) {
          for (var o = 0; o < n; o += 1) {
            var l = r(i.createElement("div")).addClass(t.slideClass + " " + t.slideBlankClass);
            s.append(l);
          }

          a = s.children("." + t.slideClass);
        }
      }

      "auto" !== t.slidesPerView || t.loopedSlides || (t.loopedSlides = a.length), e.loopedSlides = Math.ceil(parseFloat(t.loopedSlides || t.slidesPerView, 10)), e.loopedSlides += t.loopAdditionalSlides, e.loopedSlides > a.length && (e.loopedSlides = a.length);
      var h = [],
          d = [];
      a.each(function (t, i) {
        var s = r(i);
        t < e.loopedSlides && d.push(i), t < a.length && t >= a.length - e.loopedSlides && h.push(i), s.attr("data-swiper-slide-index", t);
      });

      for (var c = 0; c < d.length; c += 1) {
        s.append(r(d[c].cloneNode(!0)).addClass(t.slideDuplicateClass));
      }

      for (var p = h.length - 1; p >= 0; p -= 1) {
        s.prepend(r(h[p].cloneNode(!0)).addClass(t.slideDuplicateClass));
      }
    },
    loopFix: function loopFix() {
      this.emit("beforeLoopFix");
      var e,
          t = this.activeIndex,
          i = this.slides,
          s = this.loopedSlides,
          a = this.allowSlidePrev,
          n = this.allowSlideNext,
          r = this.snapGrid,
          o = this.rtlTranslate;
      this.allowSlidePrev = !0, this.allowSlideNext = !0;
      var l = -r[t] - this.getTranslate();
      t < s ? (e = i.length - 3 * s + t, e += s, this.slideTo(e, 0, !1, !0) && 0 !== l && this.setTranslate((o ? -this.translate : this.translate) - l)) : t >= i.length - s && (e = -i.length + t + s, e += s, this.slideTo(e, 0, !1, !0) && 0 !== l && this.setTranslate((o ? -this.translate : this.translate) - l)), this.allowSlidePrev = a, this.allowSlideNext = n, this.emit("loopFix");
    },
    loopDestroy: function loopDestroy() {
      var e = this.$wrapperEl,
          t = this.params,
          i = this.slides;
      e.children("." + t.slideClass + "." + t.slideDuplicateClass + ",." + t.slideClass + "." + t.slideBlankClass).remove(), i.removeAttr("data-swiper-slide-index");
    }
  },
      k = {
    setGrabCursor: function setGrabCursor(e) {
      if (!(d.touch || !this.params.simulateTouch || this.params.watchOverflow && this.isLocked || this.params.cssMode)) {
        var t = this.el;
        t.style.cursor = "move", t.style.cursor = e ? "-webkit-grabbing" : "-webkit-grab", t.style.cursor = e ? "-moz-grabbin" : "-moz-grab", t.style.cursor = e ? "grabbing" : "grab";
      }
    },
    unsetGrabCursor: function unsetGrabCursor() {
      d.touch || this.params.watchOverflow && this.isLocked || this.params.cssMode || (this.el.style.cursor = "");
    }
  },
      L = {
    appendSlide: function appendSlide(e) {
      var t = this.$wrapperEl,
          i = this.params;
      if (i.loop && this.loopDestroy(), "object" == _typeof(e) && "length" in e) for (var s = 0; s < e.length; s += 1) {
        e[s] && t.append(e[s]);
      } else t.append(e);
      i.loop && this.loopCreate(), i.observer && d.observer || this.update();
    },
    prependSlide: function prependSlide(e) {
      var t = this.params,
          i = this.$wrapperEl,
          s = this.activeIndex;
      t.loop && this.loopDestroy();
      var a = s + 1;

      if ("object" == _typeof(e) && "length" in e) {
        for (var n = 0; n < e.length; n += 1) {
          e[n] && i.prepend(e[n]);
        }

        a = s + e.length;
      } else i.prepend(e);

      t.loop && this.loopCreate(), t.observer && d.observer || this.update(), this.slideTo(a, 0, !1);
    },
    addSlide: function addSlide(e, t) {
      var i = this.$wrapperEl,
          s = this.params,
          a = this.activeIndex;
      s.loop && (a -= this.loopedSlides, this.loopDestroy(), this.slides = i.children("." + s.slideClass));
      var n = this.slides.length;
      if (e <= 0) this.prependSlide(t);else if (e >= n) this.appendSlide(t);else {
        for (var r = a > e ? a + 1 : a, o = [], l = n - 1; l >= e; l -= 1) {
          var h = this.slides.eq(l);
          h.remove(), o.unshift(h);
        }

        if ("object" == _typeof(t) && "length" in t) {
          for (var c = 0; c < t.length; c += 1) {
            t[c] && i.append(t[c]);
          }

          r = a > e ? a + t.length : a;
        } else i.append(t);

        for (var p = 0; p < o.length; p += 1) {
          i.append(o[p]);
        }

        s.loop && this.loopCreate(), s.observer && d.observer || this.update(), s.loop ? this.slideTo(r + this.loopedSlides, 0, !1) : this.slideTo(r, 0, !1);
      }
    },
    removeSlide: function removeSlide(e) {
      var t = this.params,
          i = this.$wrapperEl,
          s = this.activeIndex;
      t.loop && (s -= this.loopedSlides, this.loopDestroy(), this.slides = i.children("." + t.slideClass));
      var a,
          n = s;

      if ("object" == _typeof(e) && "length" in e) {
        for (var r = 0; r < e.length; r += 1) {
          a = e[r], this.slides[a] && this.slides.eq(a).remove(), a < n && (n -= 1);
        }

        n = Math.max(n, 0);
      } else a = e, this.slides[a] && this.slides.eq(a).remove(), a < n && (n -= 1), n = Math.max(n, 0);

      t.loop && this.loopCreate(), t.observer && d.observer || this.update(), t.loop ? this.slideTo(n + this.loopedSlides, 0, !1) : this.slideTo(n, 0, !1);
    },
    removeAllSlides: function removeAllSlides() {
      for (var e = [], t = 0; t < this.slides.length; t += 1) {
        e.push(t);
      }

      this.removeSlide(e);
    }
  },
      I = (u = a.navigator.platform, m = a.navigator.userAgent, f = {
    ios: !1,
    android: !1,
    androidChrome: !1,
    desktop: !1,
    iphone: !1,
    ipod: !1,
    ipad: !1,
    edge: !1,
    ie: !1,
    firefox: !1,
    macos: !1,
    windows: !1,
    cordova: !(!a.cordova && !a.phonegap),
    phonegap: !(!a.cordova && !a.phonegap),
    electron: !1
  }, v = a.screen.width, g = a.screen.height, y = m.match(/(Android);?[\s\/]+([\d.]+)?/), w = m.match(/(iPad).*OS\s([\d_]+)/), b = m.match(/(iPod)(.*OS\s([\d_]+))?/), x = !w && m.match(/(iPhone\sOS|iOS)\s([\d_]+)/), E = m.indexOf("MSIE ") >= 0 || m.indexOf("Trident/") >= 0, C = m.indexOf("Edge/") >= 0, T = m.indexOf("Gecko/") >= 0 && m.indexOf("Firefox/") >= 0, S = "Win32" === u, M = m.toLowerCase().indexOf("electron") >= 0, _ = "MacIntel" === u, !w && _ && d.touch && (1024 === v && 1366 === g || 834 === v && 1194 === g || 834 === v && 1112 === g || 768 === v && 1024 === g) && (w = m.match(/(Version)\/([\d.]+)/), _ = !1), f.ie = E, f.edge = C, f.firefox = T, y && !S && (f.os = "android", f.osVersion = y[2], f.android = !0, f.androidChrome = m.toLowerCase().indexOf("chrome") >= 0), (w || x || b) && (f.os = "ios", f.ios = !0), x && !b && (f.osVersion = x[2].replace(/_/g, "."), f.iphone = !0), w && (f.osVersion = w[2].replace(/_/g, "."), f.ipad = !0), b && (f.osVersion = b[3] ? b[3].replace(/_/g, ".") : null, f.ipod = !0), f.ios && f.osVersion && m.indexOf("Version/") >= 0 && "10" === f.osVersion.split(".")[0] && (f.osVersion = m.toLowerCase().split("version/")[1].split(" ")[0]), f.webView = !(!(x || w || b) || !m.match(/.*AppleWebKit(?!.*Safari)/i) && !a.navigator.standalone) || a.matchMedia && a.matchMedia("(display-mode: standalone)").matches, f.webview = f.webView, f.standalone = f.webView, f.desktop = !(f.ios || f.android) || M, f.desktop && (f.electron = M, f.macos = _, f.windows = S, f.macos && (f.os = "macos"), f.windows && (f.os = "windows")), f.pixelRatio = a.devicePixelRatio || 1, f);

  function O(e) {
    var t = this.touchEventsData,
        s = this.params,
        n = this.touches;

    if (!this.animating || !s.preventInteractionOnTransition) {
      var o = e;
      o.originalEvent && (o = o.originalEvent);
      var l = r(o.target);
      if (("wrapper" !== s.touchEventsTarget || l.closest(this.wrapperEl).length) && (t.isTouchEvent = "touchstart" === o.type, (t.isTouchEvent || !("which" in o) || 3 !== o.which) && !(!t.isTouchEvent && "button" in o && o.button > 0 || t.isTouched && t.isMoved))) if (s.noSwiping && l.closest(s.noSwipingSelector ? s.noSwipingSelector : "." + s.noSwipingClass)[0]) this.allowClick = !0;else if (!s.swipeHandler || l.closest(s.swipeHandler)[0]) {
        n.currentX = "touchstart" === o.type ? o.targetTouches[0].pageX : o.pageX, n.currentY = "touchstart" === o.type ? o.targetTouches[0].pageY : o.pageY;
        var d = n.currentX,
            c = n.currentY,
            p = s.edgeSwipeDetection || s.iOSEdgeSwipeDetection,
            u = s.edgeSwipeThreshold || s.iOSEdgeSwipeThreshold;

        if (!p || !(d <= u || d >= a.screen.width - u)) {
          if (h.extend(t, {
            isTouched: !0,
            isMoved: !1,
            allowTouchCallbacks: !0,
            isScrolling: void 0,
            startMoving: void 0
          }), n.startX = d, n.startY = c, t.touchStartTime = h.now(), this.allowClick = !0, this.updateSize(), this.swipeDirection = void 0, s.threshold > 0 && (t.allowThresholdMove = !1), "touchstart" !== o.type) {
            var m = !0;
            l.is(t.formElements) && (m = !1), i.activeElement && r(i.activeElement).is(t.formElements) && i.activeElement !== l[0] && i.activeElement.blur();
            var f = m && this.allowTouchMove && s.touchStartPreventDefault;
            (s.touchStartForcePreventDefault || f) && o.preventDefault();
          }

          this.emit("touchStart", o);
        }
      }
    }
  }

  function A(e) {
    var t = this.touchEventsData,
        s = this.params,
        a = this.touches,
        n = this.rtlTranslate,
        o = e;

    if (o.originalEvent && (o = o.originalEvent), t.isTouched) {
      if (!t.isTouchEvent || "touchmove" === o.type) {
        var l = "touchmove" === o.type && o.targetTouches && (o.targetTouches[0] || o.changedTouches[0]),
            d = "touchmove" === o.type ? l.pageX : o.pageX,
            c = "touchmove" === o.type ? l.pageY : o.pageY;
        if (o.preventedByNestedSwiper) return a.startX = d, void (a.startY = c);
        if (!this.allowTouchMove) return this.allowClick = !1, void (t.isTouched && (h.extend(a, {
          startX: d,
          startY: c,
          currentX: d,
          currentY: c
        }), t.touchStartTime = h.now()));
        if (t.isTouchEvent && s.touchReleaseOnEdges && !s.loop) if (this.isVertical()) {
          if (c < a.startY && this.translate <= this.maxTranslate() || c > a.startY && this.translate >= this.minTranslate()) return t.isTouched = !1, void (t.isMoved = !1);
        } else if (d < a.startX && this.translate <= this.maxTranslate() || d > a.startX && this.translate >= this.minTranslate()) return;
        if (t.isTouchEvent && i.activeElement && o.target === i.activeElement && r(o.target).is(t.formElements)) return t.isMoved = !0, void (this.allowClick = !1);

        if (t.allowTouchCallbacks && this.emit("touchMove", o), !(o.targetTouches && o.targetTouches.length > 1)) {
          a.currentX = d, a.currentY = c;
          var p,
              u = a.currentX - a.startX,
              m = a.currentY - a.startY;
          if (!(this.params.threshold && Math.sqrt(Math.pow(u, 2) + Math.pow(m, 2)) < this.params.threshold)) if (void 0 === t.isScrolling && (this.isHorizontal() && a.currentY === a.startY || this.isVertical() && a.currentX === a.startX ? t.isScrolling = !1 : u * u + m * m >= 25 && (p = 180 * Math.atan2(Math.abs(m), Math.abs(u)) / Math.PI, t.isScrolling = this.isHorizontal() ? p > s.touchAngle : 90 - p > s.touchAngle)), t.isScrolling && this.emit("touchMoveOpposite", o), void 0 === t.startMoving && (a.currentX === a.startX && a.currentY === a.startY || (t.startMoving = !0)), t.isScrolling) t.isTouched = !1;else if (t.startMoving) {
            this.allowClick = !1, !s.cssMode && o.cancelable && o.preventDefault(), s.touchMoveStopPropagation && !s.nested && o.stopPropagation(), t.isMoved || (s.loop && this.loopFix(), t.startTranslate = this.getTranslate(), this.setTransition(0), this.animating && this.$wrapperEl.trigger("webkitTransitionEnd transitionend"), t.allowMomentumBounce = !1, !s.grabCursor || !0 !== this.allowSlideNext && !0 !== this.allowSlidePrev || this.setGrabCursor(!0), this.emit("sliderFirstMove", o)), this.emit("sliderMove", o), t.isMoved = !0;
            var f = this.isHorizontal() ? u : m;
            a.diff = f, f *= s.touchRatio, n && (f = -f), this.swipeDirection = f > 0 ? "prev" : "next", t.currentTranslate = f + t.startTranslate;
            var v = !0,
                g = s.resistanceRatio;

            if (s.touchReleaseOnEdges && (g = 0), f > 0 && t.currentTranslate > this.minTranslate() ? (v = !1, s.resistance && (t.currentTranslate = this.minTranslate() - 1 + Math.pow(-this.minTranslate() + t.startTranslate + f, g))) : f < 0 && t.currentTranslate < this.maxTranslate() && (v = !1, s.resistance && (t.currentTranslate = this.maxTranslate() + 1 - Math.pow(this.maxTranslate() - t.startTranslate - f, g))), v && (o.preventedByNestedSwiper = !0), !this.allowSlideNext && "next" === this.swipeDirection && t.currentTranslate < t.startTranslate && (t.currentTranslate = t.startTranslate), !this.allowSlidePrev && "prev" === this.swipeDirection && t.currentTranslate > t.startTranslate && (t.currentTranslate = t.startTranslate), s.threshold > 0) {
              if (!(Math.abs(f) > s.threshold || t.allowThresholdMove)) return void (t.currentTranslate = t.startTranslate);
              if (!t.allowThresholdMove) return t.allowThresholdMove = !0, a.startX = a.currentX, a.startY = a.currentY, t.currentTranslate = t.startTranslate, void (a.diff = this.isHorizontal() ? a.currentX - a.startX : a.currentY - a.startY);
            }

            s.followFinger && !s.cssMode && ((s.freeMode || s.watchSlidesProgress || s.watchSlidesVisibility) && (this.updateActiveIndex(), this.updateSlidesClasses()), s.freeMode && (0 === t.velocities.length && t.velocities.push({
              position: a[this.isHorizontal() ? "startX" : "startY"],
              time: t.touchStartTime
            }), t.velocities.push({
              position: a[this.isHorizontal() ? "currentX" : "currentY"],
              time: h.now()
            })), this.updateProgress(t.currentTranslate), this.setTranslate(t.currentTranslate));
          }
        }
      }
    } else t.startMoving && t.isScrolling && this.emit("touchMoveOpposite", o);
  }

  function q(e) {
    var t = this,
        i = t.touchEventsData,
        s = t.params,
        a = t.touches,
        n = t.rtlTranslate,
        r = t.$wrapperEl,
        o = t.slidesGrid,
        l = t.snapGrid,
        d = e;
    if (d.originalEvent && (d = d.originalEvent), i.allowTouchCallbacks && t.emit("touchEnd", d), i.allowTouchCallbacks = !1, !i.isTouched) return i.isMoved && s.grabCursor && t.setGrabCursor(!1), i.isMoved = !1, void (i.startMoving = !1);
    s.grabCursor && i.isMoved && i.isTouched && (!0 === t.allowSlideNext || !0 === t.allowSlidePrev) && t.setGrabCursor(!1);
    var c,
        p = h.now(),
        u = p - i.touchStartTime;
    if (t.allowClick && (t.updateClickedSlide(d), t.emit("tap click", d), u < 300 && p - i.lastClickTime < 300 && t.emit("doubleTap doubleClick", d)), i.lastClickTime = h.now(), h.nextTick(function () {
      t.destroyed || (t.allowClick = !0);
    }), !i.isTouched || !i.isMoved || !t.swipeDirection || 0 === a.diff || i.currentTranslate === i.startTranslate) return i.isTouched = !1, i.isMoved = !1, void (i.startMoving = !1);
    if (i.isTouched = !1, i.isMoved = !1, i.startMoving = !1, c = s.followFinger ? n ? t.translate : -t.translate : -i.currentTranslate, !s.cssMode) if (s.freeMode) {
      if (c < -t.minTranslate()) return void t.slideTo(t.activeIndex);
      if (c > -t.maxTranslate()) return void (t.slides.length < l.length ? t.slideTo(l.length - 1) : t.slideTo(t.slides.length - 1));

      if (s.freeModeMomentum) {
        if (i.velocities.length > 1) {
          var m = i.velocities.pop(),
              f = i.velocities.pop(),
              v = m.position - f.position,
              g = m.time - f.time;
          t.velocity = v / g, t.velocity /= 2, Math.abs(t.velocity) < s.freeModeMinimumVelocity && (t.velocity = 0), (g > 150 || h.now() - m.time > 300) && (t.velocity = 0);
        } else t.velocity = 0;

        t.velocity *= s.freeModeMomentumVelocityRatio, i.velocities.length = 0;
        var y = 1e3 * s.freeModeMomentumRatio,
            w = t.velocity * y,
            b = t.translate + w;
        n && (b = -b);
        var x,
            E,
            C = !1,
            T = 20 * Math.abs(t.velocity) * s.freeModeMomentumBounceRatio;
        if (b < t.maxTranslate()) s.freeModeMomentumBounce ? (b + t.maxTranslate() < -T && (b = t.maxTranslate() - T), x = t.maxTranslate(), C = !0, i.allowMomentumBounce = !0) : b = t.maxTranslate(), s.loop && s.centeredSlides && (E = !0);else if (b > t.minTranslate()) s.freeModeMomentumBounce ? (b - t.minTranslate() > T && (b = t.minTranslate() + T), x = t.minTranslate(), C = !0, i.allowMomentumBounce = !0) : b = t.minTranslate(), s.loop && s.centeredSlides && (E = !0);else if (s.freeModeSticky) {
          for (var S, M = 0; M < l.length; M += 1) {
            if (l[M] > -b) {
              S = M;
              break;
            }
          }

          b = -(b = Math.abs(l[S] - b) < Math.abs(l[S - 1] - b) || "next" === t.swipeDirection ? l[S] : l[S - 1]);
        }

        if (E && t.once("transitionEnd", function () {
          t.loopFix();
        }), 0 !== t.velocity) {
          if (y = n ? Math.abs((-b - t.translate) / t.velocity) : Math.abs((b - t.translate) / t.velocity), s.freeModeSticky) {
            var _ = Math.abs((n ? -b : b) - t.translate),
                z = t.slidesSizesGrid[t.activeIndex];

            y = _ < z ? s.speed : _ < 2 * z ? 1.5 * s.speed : 2.5 * s.speed;
          }
        } else if (s.freeModeSticky) return void t.slideToClosest();

        s.freeModeMomentumBounce && C ? (t.updateProgress(x), t.setTransition(y), t.setTranslate(b), t.transitionStart(!0, t.swipeDirection), t.animating = !0, r.transitionEnd(function () {
          t && !t.destroyed && i.allowMomentumBounce && (t.emit("momentumBounce"), t.setTransition(s.speed), setTimeout(function () {
            t.setTranslate(x), r.transitionEnd(function () {
              t && !t.destroyed && t.transitionEnd();
            });
          }, 0));
        })) : t.velocity ? (t.updateProgress(b), t.setTransition(y), t.setTranslate(b), t.transitionStart(!0, t.swipeDirection), t.animating || (t.animating = !0, r.transitionEnd(function () {
          t && !t.destroyed && t.transitionEnd();
        }))) : t.updateProgress(b), t.updateActiveIndex(), t.updateSlidesClasses();
      } else if (s.freeModeSticky) return void t.slideToClosest();

      (!s.freeModeMomentum || u >= s.longSwipesMs) && (t.updateProgress(), t.updateActiveIndex(), t.updateSlidesClasses());
    } else {
      for (var $ = 0, P = t.slidesSizesGrid[0], D = 0; D < o.length; D += D < s.slidesPerGroupSkip ? 1 : s.slidesPerGroup) {
        var k = D < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;
        void 0 !== o[D + k] ? c >= o[D] && c < o[D + k] && ($ = D, P = o[D + k] - o[D]) : c >= o[D] && ($ = D, P = o[o.length - 1] - o[o.length - 2]);
      }

      var L = (c - o[$]) / P,
          I = $ < s.slidesPerGroupSkip - 1 ? 1 : s.slidesPerGroup;

      if (u > s.longSwipesMs) {
        if (!s.longSwipes) return void t.slideTo(t.activeIndex);
        "next" === t.swipeDirection && (L >= s.longSwipesRatio ? t.slideTo($ + I) : t.slideTo($)), "prev" === t.swipeDirection && (L > 1 - s.longSwipesRatio ? t.slideTo($ + I) : t.slideTo($));
      } else {
        if (!s.shortSwipes) return void t.slideTo(t.activeIndex);
        !t.navigation || d.target !== t.navigation.nextEl && d.target !== t.navigation.prevEl ? ("next" === t.swipeDirection && t.slideTo($ + I), "prev" === t.swipeDirection && t.slideTo($)) : d.target === t.navigation.nextEl ? t.slideTo($ + I) : t.slideTo($);
      }
    }
  }

  function H() {
    var e = this.params,
        t = this.el;

    if (!t || 0 !== t.offsetWidth) {
      e.breakpoints && this.setBreakpoint();
      var i = this.allowSlideNext,
          s = this.allowSlidePrev,
          a = this.snapGrid;
      this.allowSlideNext = !0, this.allowSlidePrev = !0, this.updateSize(), this.updateSlides(), this.updateSlidesClasses(), ("auto" === e.slidesPerView || e.slidesPerView > 1) && this.isEnd && !this.isBeginning && !this.params.centeredSlides ? this.slideTo(this.slides.length - 1, 0, !1, !0) : this.slideTo(this.activeIndex, 0, !1, !0), this.autoplay && this.autoplay.running && this.autoplay.paused && this.autoplay.run(), this.allowSlidePrev = s, this.allowSlideNext = i, this.params.watchOverflow && a !== this.snapGrid && this.checkOverflow();
    }
  }

  function N(e) {
    this.allowClick || (this.params.preventClicks && e.preventDefault(), this.params.preventClicksPropagation && this.animating && (e.stopPropagation(), e.stopImmediatePropagation()));
  }

  function B() {
    var e = this.wrapperEl,
        t = this.rtlTranslate;
    this.previousTranslate = this.translate, this.isHorizontal() ? this.translate = t ? e.scrollWidth - e.offsetWidth - e.scrollLeft : -e.scrollLeft : this.translate = -e.scrollTop, -0 === this.translate && (this.translate = 0), this.updateActiveIndex(), this.updateSlidesClasses();
    var i = this.maxTranslate() - this.minTranslate();
    (0 === i ? 0 : (this.translate - this.minTranslate()) / i) !== this.progress && this.updateProgress(t ? -this.translate : this.translate), this.emit("setTranslate", this.translate, !1);
  }

  var G = !1;

  function Y() {}

  var j = {
    init: !0,
    direction: "horizontal",
    touchEventsTarget: "container",
    initialSlide: 0,
    speed: 300,
    cssMode: !1,
    updateOnWindowResize: !0,
    preventInteractionOnTransition: !1,
    edgeSwipeDetection: !1,
    edgeSwipeThreshold: 20,
    freeMode: !1,
    freeModeMomentum: !0,
    freeModeMomentumRatio: 1,
    freeModeMomentumBounce: !0,
    freeModeMomentumBounceRatio: 1,
    freeModeMomentumVelocityRatio: 1,
    freeModeSticky: !1,
    freeModeMinimumVelocity: .02,
    autoHeight: !1,
    setWrapperSize: !1,
    virtualTranslate: !1,
    effect: "slide",
    breakpoints: void 0,
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerColumn: 1,
    slidesPerColumnFill: "column",
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    centeredSlides: !1,
    centeredSlidesBounds: !1,
    slidesOffsetBefore: 0,
    slidesOffsetAfter: 0,
    normalizeSlideIndex: !0,
    centerInsufficientSlides: !1,
    watchOverflow: !1,
    roundLengths: !1,
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: !0,
    shortSwipes: !0,
    longSwipes: !0,
    longSwipesRatio: .5,
    longSwipesMs: 300,
    followFinger: !0,
    allowTouchMove: !0,
    threshold: 0,
    touchMoveStopPropagation: !1,
    touchStartPreventDefault: !0,
    touchStartForcePreventDefault: !1,
    touchReleaseOnEdges: !1,
    uniqueNavElements: !0,
    resistance: !0,
    resistanceRatio: .85,
    watchSlidesProgress: !1,
    watchSlidesVisibility: !1,
    grabCursor: !1,
    preventClicks: !0,
    preventClicksPropagation: !0,
    slideToClickedSlide: !1,
    preloadImages: !0,
    updateOnImagesReady: !0,
    loop: !1,
    loopAdditionalSlides: 0,
    loopedSlides: null,
    loopFillGroupWithBlank: !1,
    allowSlidePrev: !0,
    allowSlideNext: !0,
    swipeHandler: null,
    noSwiping: !0,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    passiveListeners: !0,
    containerModifierClass: "swiper-container-",
    slideClass: "swiper-slide",
    slideBlankClass: "swiper-slide-invisible-blank",
    slideActiveClass: "swiper-slide-active",
    slideDuplicateActiveClass: "swiper-slide-duplicate-active",
    slideVisibleClass: "swiper-slide-visible",
    slideDuplicateClass: "swiper-slide-duplicate",
    slideNextClass: "swiper-slide-next",
    slideDuplicateNextClass: "swiper-slide-duplicate-next",
    slidePrevClass: "swiper-slide-prev",
    slideDuplicatePrevClass: "swiper-slide-duplicate-prev",
    wrapperClass: "swiper-wrapper",
    runCallbacksOnInit: !0
  },
      V = {
    update: z,
    translate: $,
    transition: {
      setTransition: function setTransition(e, t) {
        this.params.cssMode || this.$wrapperEl.transition(e), this.emit("setTransition", e, t);
      },
      transitionStart: function transitionStart(e, t) {
        void 0 === e && (e = !0);
        var i = this.activeIndex,
            s = this.params,
            a = this.previousIndex;

        if (!s.cssMode) {
          s.autoHeight && this.updateAutoHeight();
          var n = t;

          if (n || (n = i > a ? "next" : i < a ? "prev" : "reset"), this.emit("transitionStart"), e && i !== a) {
            if ("reset" === n) return void this.emit("slideResetTransitionStart");
            this.emit("slideChangeTransitionStart"), "next" === n ? this.emit("slideNextTransitionStart") : this.emit("slidePrevTransitionStart");
          }
        }
      },
      transitionEnd: function transitionEnd(e, t) {
        void 0 === e && (e = !0);
        var i = this.activeIndex,
            s = this.previousIndex,
            a = this.params;

        if (this.animating = !1, !a.cssMode) {
          this.setTransition(0);
          var n = t;

          if (n || (n = i > s ? "next" : i < s ? "prev" : "reset"), this.emit("transitionEnd"), e && i !== s) {
            if ("reset" === n) return void this.emit("slideResetTransitionEnd");
            this.emit("slideChangeTransitionEnd"), "next" === n ? this.emit("slideNextTransitionEnd") : this.emit("slidePrevTransitionEnd");
          }
        }
      }
    },
    slide: P,
    loop: D,
    grabCursor: k,
    manipulation: L,
    events: {
      attachEvents: function attachEvents() {
        var e = this.params,
            t = this.touchEvents,
            s = this.el,
            a = this.wrapperEl;
        this.onTouchStart = O.bind(this), this.onTouchMove = A.bind(this), this.onTouchEnd = q.bind(this), e.cssMode && (this.onScroll = B.bind(this)), this.onClick = N.bind(this);
        var n = !!e.nested;
        if (!d.touch && d.pointerEvents) s.addEventListener(t.start, this.onTouchStart, !1), i.addEventListener(t.move, this.onTouchMove, n), i.addEventListener(t.end, this.onTouchEnd, !1);else {
          if (d.touch) {
            var r = !("touchstart" !== t.start || !d.passiveListener || !e.passiveListeners) && {
              passive: !0,
              capture: !1
            };
            s.addEventListener(t.start, this.onTouchStart, r), s.addEventListener(t.move, this.onTouchMove, d.passiveListener ? {
              passive: !1,
              capture: n
            } : n), s.addEventListener(t.end, this.onTouchEnd, r), t.cancel && s.addEventListener(t.cancel, this.onTouchEnd, r), G || (i.addEventListener("touchstart", Y), G = !0);
          }

          (e.simulateTouch && !I.ios && !I.android || e.simulateTouch && !d.touch && I.ios) && (s.addEventListener("mousedown", this.onTouchStart, !1), i.addEventListener("mousemove", this.onTouchMove, n), i.addEventListener("mouseup", this.onTouchEnd, !1));
        }
        (e.preventClicks || e.preventClicksPropagation) && s.addEventListener("click", this.onClick, !0), e.cssMode && a.addEventListener("scroll", this.onScroll), e.updateOnWindowResize ? this.on(I.ios || I.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", H, !0) : this.on("observerUpdate", H, !0);
      },
      detachEvents: function detachEvents() {
        var e = this.params,
            t = this.touchEvents,
            s = this.el,
            a = this.wrapperEl,
            n = !!e.nested;
        if (!d.touch && d.pointerEvents) s.removeEventListener(t.start, this.onTouchStart, !1), i.removeEventListener(t.move, this.onTouchMove, n), i.removeEventListener(t.end, this.onTouchEnd, !1);else {
          if (d.touch) {
            var r = !("onTouchStart" !== t.start || !d.passiveListener || !e.passiveListeners) && {
              passive: !0,
              capture: !1
            };
            s.removeEventListener(t.start, this.onTouchStart, r), s.removeEventListener(t.move, this.onTouchMove, n), s.removeEventListener(t.end, this.onTouchEnd, r), t.cancel && s.removeEventListener(t.cancel, this.onTouchEnd, r);
          }

          (e.simulateTouch && !I.ios && !I.android || e.simulateTouch && !d.touch && I.ios) && (s.removeEventListener("mousedown", this.onTouchStart, !1), i.removeEventListener("mousemove", this.onTouchMove, n), i.removeEventListener("mouseup", this.onTouchEnd, !1));
        }
        (e.preventClicks || e.preventClicksPropagation) && s.removeEventListener("click", this.onClick, !0), e.cssMode && a.removeEventListener("scroll", this.onScroll), this.off(I.ios || I.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", H);
      }
    },
    breakpoints: {
      setBreakpoint: function setBreakpoint() {
        var e = this.activeIndex,
            t = this.initialized,
            i = this.loopedSlides;
        void 0 === i && (i = 0);
        var s = this.params,
            a = this.$el,
            n = s.breakpoints;

        if (n && (!n || 0 !== Object.keys(n).length)) {
          var r = this.getBreakpoint(n);

          if (r && this.currentBreakpoint !== r) {
            var o = r in n ? n[r] : void 0;
            o && ["slidesPerView", "spaceBetween", "slidesPerGroup", "slidesPerGroupSkip", "slidesPerColumn"].forEach(function (e) {
              var t = o[e];
              void 0 !== t && (o[e] = "slidesPerView" !== e || "AUTO" !== t && "auto" !== t ? "slidesPerView" === e ? parseFloat(t) : parseInt(t, 10) : "auto");
            });
            var l = o || this.originalParams,
                d = s.slidesPerColumn > 1,
                c = l.slidesPerColumn > 1;
            d && !c ? a.removeClass(s.containerModifierClass + "multirow " + s.containerModifierClass + "multirow-column") : !d && c && (a.addClass(s.containerModifierClass + "multirow"), "column" === l.slidesPerColumnFill && a.addClass(s.containerModifierClass + "multirow-column"));
            var p = l.direction && l.direction !== s.direction,
                u = s.loop && (l.slidesPerView !== s.slidesPerView || p);
            p && t && this.changeDirection(), h.extend(this.params, l), h.extend(this, {
              allowTouchMove: this.params.allowTouchMove,
              allowSlideNext: this.params.allowSlideNext,
              allowSlidePrev: this.params.allowSlidePrev
            }), this.currentBreakpoint = r, u && t && (this.loopDestroy(), this.loopCreate(), this.updateSlides(), this.slideTo(e - i + this.loopedSlides, 0, !1)), this.emit("breakpoint", l);
          }
        }
      },
      getBreakpoint: function getBreakpoint(e) {
        if (e) {
          var t = !1,
              i = Object.keys(e).map(function (e) {
            if ("string" == typeof e && 0 === e.indexOf("@")) {
              var t = parseFloat(e.substr(1));
              return {
                value: a.innerHeight * t,
                point: e
              };
            }

            return {
              value: e,
              point: e
            };
          });
          i.sort(function (e, t) {
            return parseInt(e.value, 10) - parseInt(t.value, 10);
          });

          for (var s = 0; s < i.length; s += 1) {
            var n = i[s],
                r = n.point;
            n.value <= a.innerWidth && (t = r);
          }

          return t || "max";
        }
      }
    },
    checkOverflow: {
      checkOverflow: function checkOverflow() {
        var e = this.params,
            t = this.isLocked,
            i = this.slides.length > 0 && e.slidesOffsetBefore + e.spaceBetween * (this.slides.length - 1) + this.slides[0].offsetWidth * this.slides.length;
        e.slidesOffsetBefore && e.slidesOffsetAfter && i ? this.isLocked = i <= this.size : this.isLocked = 1 === this.snapGrid.length, this.allowSlideNext = !this.isLocked, this.allowSlidePrev = !this.isLocked, t !== this.isLocked && this.emit(this.isLocked ? "lock" : "unlock"), t && t !== this.isLocked && (this.isEnd = !1, this.navigation && this.navigation.update());
      }
    },
    classes: {
      addClasses: function addClasses() {
        var e = this.classNames,
            t = this.params,
            i = this.rtl,
            s = this.$el,
            a = [];
        a.push("initialized"), a.push(t.direction), t.freeMode && a.push("free-mode"), t.autoHeight && a.push("autoheight"), i && a.push("rtl"), t.slidesPerColumn > 1 && (a.push("multirow"), "column" === t.slidesPerColumnFill && a.push("multirow-column")), I.android && a.push("android"), I.ios && a.push("ios"), t.cssMode && a.push("css-mode"), a.forEach(function (i) {
          e.push(t.containerModifierClass + i);
        }), s.addClass(e.join(" "));
      },
      removeClasses: function removeClasses() {
        var e = this.$el,
            t = this.classNames;
        e.removeClass(t.join(" "));
      }
    },
    images: {
      loadImage: function loadImage(e, t, i, s, n, o) {
        var l;

        function h() {
          o && o();
        }

        r(e).parent("picture")[0] || e.complete && n ? h() : t ? ((l = new a.Image()).onload = h, l.onerror = h, s && (l.sizes = s), i && (l.srcset = i), t && (l.src = t)) : h();
      },
      preloadImages: function preloadImages() {
        var e = this;

        function t() {
          null != e && e && !e.destroyed && (void 0 !== e.imagesLoaded && (e.imagesLoaded += 1), e.imagesLoaded === e.imagesToLoad.length && (e.params.updateOnImagesReady && e.update(), e.emit("imagesReady")));
        }

        e.imagesToLoad = e.$el.find("img");

        for (var i = 0; i < e.imagesToLoad.length; i += 1) {
          var s = e.imagesToLoad[i];
          e.loadImage(s, s.currentSrc || s.getAttribute("src"), s.srcset || s.getAttribute("srcset"), s.sizes || s.getAttribute("sizes"), !0, t);
        }
      }
    }
  },
      W = {},
      R = function (e) {
    function t() {
      for (var i, s, a, n = [], o = arguments.length; o--;) {
        n[o] = arguments[o];
      }

      1 === n.length && n[0].constructor && n[0].constructor === Object ? a = n[0] : (s = (i = n)[0], a = i[1]), a || (a = {}), a = h.extend({}, a), s && !a.el && (a.el = s), e.call(this, a), Object.keys(V).forEach(function (e) {
        Object.keys(V[e]).forEach(function (i) {
          t.prototype[i] || (t.prototype[i] = V[e][i]);
        });
      });
      var l = this;
      void 0 === l.modules && (l.modules = {}), Object.keys(l.modules).forEach(function (e) {
        var t = l.modules[e];

        if (t.params) {
          var i = Object.keys(t.params)[0],
              s = t.params[i];
          if ("object" != _typeof(s) || null === s) return;
          if (!(i in a) || !("enabled" in s)) return;
          !0 === a[i] && (a[i] = {
            enabled: !0
          }), "object" != _typeof(a[i]) || "enabled" in a[i] || (a[i].enabled = !0), a[i] || (a[i] = {
            enabled: !1
          });
        }
      });
      var c = h.extend({}, j);
      l.useModulesParams(c), l.params = h.extend({}, c, W, a), l.originalParams = h.extend({}, l.params), l.passedParams = h.extend({}, a), l.$ = r;
      var p = r(l.params.el);

      if (s = p[0]) {
        if (p.length > 1) {
          var u = [];
          return p.each(function (e, i) {
            var s = h.extend({}, a, {
              el: i
            });
            u.push(new t(s));
          }), u;
        }

        var m, f, v;
        return s.swiper = l, p.data("swiper", l), s && s.shadowRoot && s.shadowRoot.querySelector ? (m = r(s.shadowRoot.querySelector("." + l.params.wrapperClass))).children = function (e) {
          return p.children(e);
        } : m = p.children("." + l.params.wrapperClass), h.extend(l, {
          $el: p,
          el: s,
          $wrapperEl: m,
          wrapperEl: m[0],
          classNames: [],
          slides: r(),
          slidesGrid: [],
          snapGrid: [],
          slidesSizesGrid: [],
          isHorizontal: function isHorizontal() {
            return "horizontal" === l.params.direction;
          },
          isVertical: function isVertical() {
            return "vertical" === l.params.direction;
          },
          rtl: "rtl" === s.dir.toLowerCase() || "rtl" === p.css("direction"),
          rtlTranslate: "horizontal" === l.params.direction && ("rtl" === s.dir.toLowerCase() || "rtl" === p.css("direction")),
          wrongRTL: "-webkit-box" === m.css("display"),
          activeIndex: 0,
          realIndex: 0,
          isBeginning: !0,
          isEnd: !1,
          translate: 0,
          previousTranslate: 0,
          progress: 0,
          velocity: 0,
          animating: !1,
          allowSlideNext: l.params.allowSlideNext,
          allowSlidePrev: l.params.allowSlidePrev,
          touchEvents: (f = ["touchstart", "touchmove", "touchend", "touchcancel"], v = ["mousedown", "mousemove", "mouseup"], d.pointerEvents && (v = ["pointerdown", "pointermove", "pointerup"]), l.touchEventsTouch = {
            start: f[0],
            move: f[1],
            end: f[2],
            cancel: f[3]
          }, l.touchEventsDesktop = {
            start: v[0],
            move: v[1],
            end: v[2]
          }, d.touch || !l.params.simulateTouch ? l.touchEventsTouch : l.touchEventsDesktop),
          touchEventsData: {
            isTouched: void 0,
            isMoved: void 0,
            allowTouchCallbacks: void 0,
            touchStartTime: void 0,
            isScrolling: void 0,
            currentTranslate: void 0,
            startTranslate: void 0,
            allowThresholdMove: void 0,
            formElements: "input, select, option, textarea, button, video, label",
            lastClickTime: h.now(),
            clickTimeout: void 0,
            velocities: [],
            allowMomentumBounce: void 0,
            isTouchEvent: void 0,
            startMoving: void 0
          },
          allowClick: !0,
          allowTouchMove: l.params.allowTouchMove,
          touches: {
            startX: 0,
            startY: 0,
            currentX: 0,
            currentY: 0,
            diff: 0
          },
          imagesToLoad: [],
          imagesLoaded: 0
        }), l.useModules(), l.params.init && l.init(), l;
      }
    }

    e && (t.__proto__ = e), t.prototype = Object.create(e && e.prototype), t.prototype.constructor = t;
    var i = {
      extendedDefaults: {
        configurable: !0
      },
      defaults: {
        configurable: !0
      },
      Class: {
        configurable: !0
      },
      $: {
        configurable: !0
      }
    };
    return t.prototype.slidesPerViewDynamic = function () {
      var e = this.params,
          t = this.slides,
          i = this.slidesGrid,
          s = this.size,
          a = this.activeIndex,
          n = 1;

      if (e.centeredSlides) {
        for (var r, o = t[a].swiperSlideSize, l = a + 1; l < t.length; l += 1) {
          t[l] && !r && (n += 1, (o += t[l].swiperSlideSize) > s && (r = !0));
        }

        for (var h = a - 1; h >= 0; h -= 1) {
          t[h] && !r && (n += 1, (o += t[h].swiperSlideSize) > s && (r = !0));
        }
      } else for (var d = a + 1; d < t.length; d += 1) {
        i[d] - i[a] < s && (n += 1);
      }

      return n;
    }, t.prototype.update = function () {
      var e = this;

      if (e && !e.destroyed) {
        var t = e.snapGrid,
            i = e.params;
        i.breakpoints && e.setBreakpoint(), e.updateSize(), e.updateSlides(), e.updateProgress(), e.updateSlidesClasses(), e.params.freeMode ? (s(), e.params.autoHeight && e.updateAutoHeight()) : (("auto" === e.params.slidesPerView || e.params.slidesPerView > 1) && e.isEnd && !e.params.centeredSlides ? e.slideTo(e.slides.length - 1, 0, !1, !0) : e.slideTo(e.activeIndex, 0, !1, !0)) || s(), i.watchOverflow && t !== e.snapGrid && e.checkOverflow(), e.emit("update");
      }

      function s() {
        var t = e.rtlTranslate ? -1 * e.translate : e.translate,
            i = Math.min(Math.max(t, e.maxTranslate()), e.minTranslate());
        e.setTranslate(i), e.updateActiveIndex(), e.updateSlidesClasses();
      }
    }, t.prototype.changeDirection = function (e, t) {
      void 0 === t && (t = !0);
      var i = this.params.direction;
      return e || (e = "horizontal" === i ? "vertical" : "horizontal"), e === i || "horizontal" !== e && "vertical" !== e || (this.$el.removeClass("" + this.params.containerModifierClass + i).addClass("" + this.params.containerModifierClass + e), this.params.direction = e, this.slides.each(function (t, i) {
        "vertical" === e ? i.style.width = "" : i.style.height = "";
      }), this.emit("changeDirection"), t && this.update()), this;
    }, t.prototype.init = function () {
      this.initialized || (this.emit("beforeInit"), this.params.breakpoints && this.setBreakpoint(), this.addClasses(), this.params.loop && this.loopCreate(), this.updateSize(), this.updateSlides(), this.params.watchOverflow && this.checkOverflow(), this.params.grabCursor && this.setGrabCursor(), this.params.preloadImages && this.preloadImages(), this.params.loop ? this.slideTo(this.params.initialSlide + this.loopedSlides, 0, this.params.runCallbacksOnInit) : this.slideTo(this.params.initialSlide, 0, this.params.runCallbacksOnInit), this.attachEvents(), this.initialized = !0, this.emit("init"));
    }, t.prototype.destroy = function (e, t) {
      void 0 === e && (e = !0), void 0 === t && (t = !0);
      var i = this,
          s = i.params,
          a = i.$el,
          n = i.$wrapperEl,
          r = i.slides;
      return void 0 === i.params || i.destroyed || (i.emit("beforeDestroy"), i.initialized = !1, i.detachEvents(), s.loop && i.loopDestroy(), t && (i.removeClasses(), a.removeAttr("style"), n.removeAttr("style"), r && r.length && r.removeClass([s.slideVisibleClass, s.slideActiveClass, s.slideNextClass, s.slidePrevClass].join(" ")).removeAttr("style").removeAttr("data-swiper-slide-index")), i.emit("destroy"), Object.keys(i.eventsListeners).forEach(function (e) {
        i.off(e);
      }), !1 !== e && (i.$el[0].swiper = null, i.$el.data("swiper", null), h.deleteProps(i)), i.destroyed = !0), null;
    }, t.extendDefaults = function (e) {
      h.extend(W, e);
    }, i.extendedDefaults.get = function () {
      return W;
    }, i.defaults.get = function () {
      return j;
    }, i.Class.get = function () {
      return e;
    }, i.$.get = function () {
      return r;
    }, Object.defineProperties(t, i), t;
  }(c),
      F = {
    name: "device",
    proto: {
      device: I
    },
    "static": {
      device: I
    }
  },
      X = {
    name: "support",
    proto: {
      support: d
    },
    "static": {
      support: d
    }
  },
      U = {
    isEdge: !!a.navigator.userAgent.match(/Edge/g),
    isSafari: function () {
      var e = a.navigator.userAgent.toLowerCase();
      return e.indexOf("safari") >= 0 && e.indexOf("chrome") < 0 && e.indexOf("android") < 0;
    }(),
    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(a.navigator.userAgent)
  },
      K = {
    name: "browser",
    proto: {
      browser: U
    },
    "static": {
      browser: U
    }
  },
      Q = {
    name: "resize",
    create: function create() {
      var e = this;
      h.extend(e, {
        resize: {
          resizeHandler: function resizeHandler() {
            e && !e.destroyed && e.initialized && (e.emit("beforeResize"), e.emit("resize"));
          },
          orientationChangeHandler: function orientationChangeHandler() {
            e && !e.destroyed && e.initialized && e.emit("orientationchange");
          }
        }
      });
    },
    on: {
      init: function init() {
        a.addEventListener("resize", this.resize.resizeHandler), a.addEventListener("orientationchange", this.resize.orientationChangeHandler);
      },
      destroy: function destroy() {
        a.removeEventListener("resize", this.resize.resizeHandler), a.removeEventListener("orientationchange", this.resize.orientationChangeHandler);
      }
    }
  },
      Z = {
    func: a.MutationObserver || a.WebkitMutationObserver,
    attach: function attach(e, t) {
      void 0 === t && (t = {});
      var i = this,
          s = new (0, Z.func)(function (e) {
        if (1 !== e.length) {
          var t = function t() {
            i.emit("observerUpdate", e[0]);
          };

          a.requestAnimationFrame ? a.requestAnimationFrame(t) : a.setTimeout(t, 0);
        } else i.emit("observerUpdate", e[0]);
      });
      s.observe(e, {
        attributes: void 0 === t.attributes || t.attributes,
        childList: void 0 === t.childList || t.childList,
        characterData: void 0 === t.characterData || t.characterData
      }), i.observer.observers.push(s);
    },
    init: function init() {
      if (d.observer && this.params.observer) {
        if (this.params.observeParents) for (var e = this.$el.parents(), t = 0; t < e.length; t += 1) {
          this.observer.attach(e[t]);
        }
        this.observer.attach(this.$el[0], {
          childList: this.params.observeSlideChildren
        }), this.observer.attach(this.$wrapperEl[0], {
          attributes: !1
        });
      }
    },
    destroy: function destroy() {
      this.observer.observers.forEach(function (e) {
        e.disconnect();
      }), this.observer.observers = [];
    }
  },
      J = {
    name: "observer",
    params: {
      observer: !1,
      observeParents: !1,
      observeSlideChildren: !1
    },
    create: function create() {
      h.extend(this, {
        observer: {
          init: Z.init.bind(this),
          attach: Z.attach.bind(this),
          destroy: Z.destroy.bind(this),
          observers: []
        }
      });
    },
    on: {
      init: function init() {
        this.observer.init();
      },
      destroy: function destroy() {
        this.observer.destroy();
      }
    }
  },
      ee = {
    update: function update(e) {
      var t = this,
          i = t.params,
          s = i.slidesPerView,
          a = i.slidesPerGroup,
          n = i.centeredSlides,
          r = t.params.virtual,
          o = r.addSlidesBefore,
          l = r.addSlidesAfter,
          d = t.virtual,
          c = d.from,
          p = d.to,
          u = d.slides,
          m = d.slidesGrid,
          f = d.renderSlide,
          v = d.offset;
      t.updateActiveIndex();
      var g,
          y,
          w,
          b = t.activeIndex || 0;
      g = t.rtlTranslate ? "right" : t.isHorizontal() ? "left" : "top", n ? (y = Math.floor(s / 2) + a + o, w = Math.floor(s / 2) + a + l) : (y = s + (a - 1) + o, w = a + l);
      var x = Math.max((b || 0) - w, 0),
          E = Math.min((b || 0) + y, u.length - 1),
          C = (t.slidesGrid[x] || 0) - (t.slidesGrid[0] || 0);

      function T() {
        t.updateSlides(), t.updateProgress(), t.updateSlidesClasses(), t.lazy && t.params.lazy.enabled && t.lazy.load();
      }

      if (h.extend(t.virtual, {
        from: x,
        to: E,
        offset: C,
        slidesGrid: t.slidesGrid
      }), c === x && p === E && !e) return t.slidesGrid !== m && C !== v && t.slides.css(g, C + "px"), void t.updateProgress();
      if (t.params.virtual.renderExternal) return t.params.virtual.renderExternal.call(t, {
        offset: C,
        from: x,
        to: E,
        slides: function () {
          for (var e = [], t = x; t <= E; t += 1) {
            e.push(u[t]);
          }

          return e;
        }()
      }), void T();
      var S = [],
          M = [];
      if (e) t.$wrapperEl.find("." + t.params.slideClass).remove();else for (var _ = c; _ <= p; _ += 1) {
        (_ < x || _ > E) && t.$wrapperEl.find("." + t.params.slideClass + '[data-swiper-slide-index="' + _ + '"]').remove();
      }

      for (var z = 0; z < u.length; z += 1) {
        z >= x && z <= E && (void 0 === p || e ? M.push(z) : (z > p && M.push(z), z < c && S.push(z)));
      }

      M.forEach(function (e) {
        t.$wrapperEl.append(f(u[e], e));
      }), S.sort(function (e, t) {
        return t - e;
      }).forEach(function (e) {
        t.$wrapperEl.prepend(f(u[e], e));
      }), t.$wrapperEl.children(".swiper-slide").css(g, C + "px"), T();
    },
    renderSlide: function renderSlide(e, t) {
      var i = this.params.virtual;
      if (i.cache && this.virtual.cache[t]) return this.virtual.cache[t];
      var s = i.renderSlide ? r(i.renderSlide.call(this, e, t)) : r('<div class="' + this.params.slideClass + '" data-swiper-slide-index="' + t + '">' + e + "</div>");
      return s.attr("data-swiper-slide-index") || s.attr("data-swiper-slide-index", t), i.cache && (this.virtual.cache[t] = s), s;
    },
    appendSlide: function appendSlide(e) {
      if ("object" == _typeof(e) && "length" in e) for (var t = 0; t < e.length; t += 1) {
        e[t] && this.virtual.slides.push(e[t]);
      } else this.virtual.slides.push(e);
      this.virtual.update(!0);
    },
    prependSlide: function prependSlide(e) {
      var t = this.activeIndex,
          i = t + 1,
          s = 1;

      if (Array.isArray(e)) {
        for (var a = 0; a < e.length; a += 1) {
          e[a] && this.virtual.slides.unshift(e[a]);
        }

        i = t + e.length, s = e.length;
      } else this.virtual.slides.unshift(e);

      if (this.params.virtual.cache) {
        var n = this.virtual.cache,
            r = {};
        Object.keys(n).forEach(function (e) {
          var t = n[e],
              i = t.attr("data-swiper-slide-index");
          i && t.attr("data-swiper-slide-index", parseInt(i, 10) + 1), r[parseInt(e, 10) + s] = t;
        }), this.virtual.cache = r;
      }

      this.virtual.update(!0), this.slideTo(i, 0);
    },
    removeSlide: function removeSlide(e) {
      if (null != e) {
        var t = this.activeIndex;
        if (Array.isArray(e)) for (var i = e.length - 1; i >= 0; i -= 1) {
          this.virtual.slides.splice(e[i], 1), this.params.virtual.cache && delete this.virtual.cache[e[i]], e[i] < t && (t -= 1), t = Math.max(t, 0);
        } else this.virtual.slides.splice(e, 1), this.params.virtual.cache && delete this.virtual.cache[e], e < t && (t -= 1), t = Math.max(t, 0);
        this.virtual.update(!0), this.slideTo(t, 0);
      }
    },
    removeAllSlides: function removeAllSlides() {
      this.virtual.slides = [], this.params.virtual.cache && (this.virtual.cache = {}), this.virtual.update(!0), this.slideTo(0, 0);
    }
  },
      te = {
    name: "virtual",
    params: {
      virtual: {
        enabled: !1,
        slides: [],
        cache: !0,
        renderSlide: null,
        renderExternal: null,
        addSlidesBefore: 0,
        addSlidesAfter: 0
      }
    },
    create: function create() {
      h.extend(this, {
        virtual: {
          update: ee.update.bind(this),
          appendSlide: ee.appendSlide.bind(this),
          prependSlide: ee.prependSlide.bind(this),
          removeSlide: ee.removeSlide.bind(this),
          removeAllSlides: ee.removeAllSlides.bind(this),
          renderSlide: ee.renderSlide.bind(this),
          slides: this.params.virtual.slides,
          cache: {}
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        if (this.params.virtual.enabled) {
          this.classNames.push(this.params.containerModifierClass + "virtual");
          var e = {
            watchSlidesProgress: !0
          };
          h.extend(this.params, e), h.extend(this.originalParams, e), this.params.initialSlide || this.virtual.update();
        }
      },
      setTranslate: function setTranslate() {
        this.params.virtual.enabled && this.virtual.update();
      }
    }
  },
      ie = {
    handle: function handle(e) {
      var t = this.rtlTranslate,
          s = e;
      s.originalEvent && (s = s.originalEvent);
      var n = s.keyCode || s.charCode,
          r = this.params.keyboard.pageUpDown,
          o = r && 33 === n,
          l = r && 34 === n,
          h = 37 === n,
          d = 39 === n,
          c = 38 === n,
          p = 40 === n;
      if (!this.allowSlideNext && (this.isHorizontal() && d || this.isVertical() && p || l)) return !1;
      if (!this.allowSlidePrev && (this.isHorizontal() && h || this.isVertical() && c || o)) return !1;

      if (!(s.shiftKey || s.altKey || s.ctrlKey || s.metaKey || i.activeElement && i.activeElement.nodeName && ("input" === i.activeElement.nodeName.toLowerCase() || "textarea" === i.activeElement.nodeName.toLowerCase()))) {
        if (this.params.keyboard.onlyInViewport && (o || l || h || d || c || p)) {
          var u = !1;
          if (this.$el.parents("." + this.params.slideClass).length > 0 && 0 === this.$el.parents("." + this.params.slideActiveClass).length) return;
          var m = a.innerWidth,
              f = a.innerHeight,
              v = this.$el.offset();
          t && (v.left -= this.$el[0].scrollLeft);

          for (var g = [[v.left, v.top], [v.left + this.width, v.top], [v.left, v.top + this.height], [v.left + this.width, v.top + this.height]], y = 0; y < g.length; y += 1) {
            var w = g[y];
            w[0] >= 0 && w[0] <= m && w[1] >= 0 && w[1] <= f && (u = !0);
          }

          if (!u) return;
        }

        this.isHorizontal() ? ((o || l || h || d) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1), ((l || d) && !t || (o || h) && t) && this.slideNext(), ((o || h) && !t || (l || d) && t) && this.slidePrev()) : ((o || l || c || p) && (s.preventDefault ? s.preventDefault() : s.returnValue = !1), (l || p) && this.slideNext(), (o || c) && this.slidePrev()), this.emit("keyPress", n);
      }
    },
    enable: function enable() {
      this.keyboard.enabled || (r(i).on("keydown", this.keyboard.handle), this.keyboard.enabled = !0);
    },
    disable: function disable() {
      this.keyboard.enabled && (r(i).off("keydown", this.keyboard.handle), this.keyboard.enabled = !1);
    }
  },
      se = {
    name: "keyboard",
    params: {
      keyboard: {
        enabled: !1,
        onlyInViewport: !0,
        pageUpDown: !0
      }
    },
    create: function create() {
      h.extend(this, {
        keyboard: {
          enabled: !1,
          enable: ie.enable.bind(this),
          disable: ie.disable.bind(this),
          handle: ie.handle.bind(this)
        }
      });
    },
    on: {
      init: function init() {
        this.params.keyboard.enabled && this.keyboard.enable();
      },
      destroy: function destroy() {
        this.keyboard.enabled && this.keyboard.disable();
      }
    }
  },
      ae = {
    lastScrollTime: h.now(),
    lastEventBeforeSnap: void 0,
    recentWheelEvents: [],
    event: function event() {
      return a.navigator.userAgent.indexOf("firefox") > -1 ? "DOMMouseScroll" : function () {
        var e = ("onwheel" in i);

        if (!e) {
          var t = i.createElement("div");
          t.setAttribute("onwheel", "return;"), e = "function" == typeof t.onwheel;
        }

        return !e && i.implementation && i.implementation.hasFeature && !0 !== i.implementation.hasFeature("", "") && (e = i.implementation.hasFeature("Events.wheel", "3.0")), e;
      }() ? "wheel" : "mousewheel";
    },
    normalize: function normalize(e) {
      var t = 0,
          i = 0,
          s = 0,
          a = 0;
      return "detail" in e && (i = e.detail), "wheelDelta" in e && (i = -e.wheelDelta / 120), "wheelDeltaY" in e && (i = -e.wheelDeltaY / 120), "wheelDeltaX" in e && (t = -e.wheelDeltaX / 120), "axis" in e && e.axis === e.HORIZONTAL_AXIS && (t = i, i = 0), s = 10 * t, a = 10 * i, "deltaY" in e && (a = e.deltaY), "deltaX" in e && (s = e.deltaX), e.shiftKey && !s && (s = a, a = 0), (s || a) && e.deltaMode && (1 === e.deltaMode ? (s *= 40, a *= 40) : (s *= 800, a *= 800)), s && !t && (t = s < 1 ? -1 : 1), a && !i && (i = a < 1 ? -1 : 1), {
        spinX: t,
        spinY: i,
        pixelX: s,
        pixelY: a
      };
    },
    handleMouseEnter: function handleMouseEnter() {
      this.mouseEntered = !0;
    },
    handleMouseLeave: function handleMouseLeave() {
      this.mouseEntered = !1;
    },
    handle: function handle(e) {
      var t = e,
          i = this,
          s = i.params.mousewheel;
      i.params.cssMode && t.preventDefault();
      var a = i.$el;
      if ("container" !== i.params.mousewheel.eventsTarged && (a = r(i.params.mousewheel.eventsTarged)), !i.mouseEntered && !a[0].contains(t.target) && !s.releaseOnEdges) return !0;
      t.originalEvent && (t = t.originalEvent);
      var n = 0,
          o = i.rtlTranslate ? -1 : 1,
          l = ae.normalize(t);
      if (s.forceToAxis) {
        if (i.isHorizontal()) {
          if (!(Math.abs(l.pixelX) > Math.abs(l.pixelY))) return !0;
          n = -l.pixelX * o;
        } else {
          if (!(Math.abs(l.pixelY) > Math.abs(l.pixelX))) return !0;
          n = -l.pixelY;
        }
      } else n = Math.abs(l.pixelX) > Math.abs(l.pixelY) ? -l.pixelX * o : -l.pixelY;
      if (0 === n) return !0;

      if (s.invert && (n = -n), i.params.freeMode) {
        var d = {
          time: h.now(),
          delta: Math.abs(n),
          direction: Math.sign(n)
        },
            c = i.mousewheel.lastEventBeforeSnap,
            p = c && d.time < c.time + 500 && d.delta <= c.delta && d.direction === c.direction;

        if (!p) {
          i.mousewheel.lastEventBeforeSnap = void 0, i.params.loop && i.loopFix();
          var u = i.getTranslate() + n * s.sensitivity,
              m = i.isBeginning,
              f = i.isEnd;

          if (u >= i.minTranslate() && (u = i.minTranslate()), u <= i.maxTranslate() && (u = i.maxTranslate()), i.setTransition(0), i.setTranslate(u), i.updateProgress(), i.updateActiveIndex(), i.updateSlidesClasses(), (!m && i.isBeginning || !f && i.isEnd) && i.updateSlidesClasses(), i.params.freeModeSticky) {
            clearTimeout(i.mousewheel.timeout), i.mousewheel.timeout = void 0;
            var v = i.mousewheel.recentWheelEvents;
            v.length >= 15 && v.shift();
            var g = v.length ? v[v.length - 1] : void 0,
                y = v[0];
            if (v.push(d), g && (d.delta > g.delta || d.direction !== g.direction)) v.splice(0);else if (v.length >= 15 && d.time - y.time < 500 && y.delta - d.delta >= 1 && d.delta <= 6) {
              var w = n > 0 ? .8 : .2;
              i.mousewheel.lastEventBeforeSnap = d, v.splice(0), i.mousewheel.timeout = h.nextTick(function () {
                i.slideToClosest(i.params.speed, !0, void 0, w);
              }, 0);
            }
            i.mousewheel.timeout || (i.mousewheel.timeout = h.nextTick(function () {
              i.mousewheel.lastEventBeforeSnap = d, v.splice(0), i.slideToClosest(i.params.speed, !0, void 0, .5);
            }, 500));
          }

          if (p || i.emit("scroll", t), i.params.autoplay && i.params.autoplayDisableOnInteraction && i.autoplay.stop(), u === i.minTranslate() || u === i.maxTranslate()) return !0;
        }
      } else {
        var b = {
          time: h.now(),
          delta: Math.abs(n),
          direction: Math.sign(n),
          raw: e
        },
            x = i.mousewheel.recentWheelEvents;
        x.length >= 2 && x.shift();
        var E = x.length ? x[x.length - 1] : void 0;
        if (x.push(b), E ? (b.direction !== E.direction || b.delta > E.delta || b.time > E.time + 150) && i.mousewheel.animateSlider(b) : i.mousewheel.animateSlider(b), i.mousewheel.releaseScroll(b)) return !0;
      }

      return t.preventDefault ? t.preventDefault() : t.returnValue = !1, !1;
    },
    animateSlider: function animateSlider(e) {
      return e.delta >= 6 && h.now() - this.mousewheel.lastScrollTime < 60 || (e.direction < 0 ? this.isEnd && !this.params.loop || this.animating || (this.slideNext(), this.emit("scroll", e.raw)) : this.isBeginning && !this.params.loop || this.animating || (this.slidePrev(), this.emit("scroll", e.raw)), this.mousewheel.lastScrollTime = new a.Date().getTime(), !1);
    },
    releaseScroll: function releaseScroll(e) {
      var t = this.params.mousewheel;

      if (e.direction < 0) {
        if (this.isEnd && !this.params.loop && t.releaseOnEdges) return !0;
      } else if (this.isBeginning && !this.params.loop && t.releaseOnEdges) return !0;

      return !1;
    },
    enable: function enable() {
      var e = ae.event();
      if (this.params.cssMode) return this.wrapperEl.removeEventListener(e, this.mousewheel.handle), !0;
      if (!e) return !1;
      if (this.mousewheel.enabled) return !1;
      var t = this.$el;
      return "container" !== this.params.mousewheel.eventsTarged && (t = r(this.params.mousewheel.eventsTarged)), t.on("mouseenter", this.mousewheel.handleMouseEnter), t.on("mouseleave", this.mousewheel.handleMouseLeave), t.on(e, this.mousewheel.handle), this.mousewheel.enabled = !0, !0;
    },
    disable: function disable() {
      var e = ae.event();
      if (this.params.cssMode) return this.wrapperEl.addEventListener(e, this.mousewheel.handle), !0;
      if (!e) return !1;
      if (!this.mousewheel.enabled) return !1;
      var t = this.$el;
      return "container" !== this.params.mousewheel.eventsTarged && (t = r(this.params.mousewheel.eventsTarged)), t.off(e, this.mousewheel.handle), this.mousewheel.enabled = !1, !0;
    }
  },
      ne = {
    update: function update() {
      var e = this.params.navigation;

      if (!this.params.loop) {
        var t = this.navigation,
            i = t.$nextEl,
            s = t.$prevEl;
        s && s.length > 0 && (this.isBeginning ? s.addClass(e.disabledClass) : s.removeClass(e.disabledClass), s[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e.lockClass)), i && i.length > 0 && (this.isEnd ? i.addClass(e.disabledClass) : i.removeClass(e.disabledClass), i[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](e.lockClass));
      }
    },
    onPrevClick: function onPrevClick(e) {
      e.preventDefault(), this.isBeginning && !this.params.loop || this.slidePrev();
    },
    onNextClick: function onNextClick(e) {
      e.preventDefault(), this.isEnd && !this.params.loop || this.slideNext();
    },
    init: function init() {
      var e,
          t,
          i = this.params.navigation;
      (i.nextEl || i.prevEl) && (i.nextEl && (e = r(i.nextEl), this.params.uniqueNavElements && "string" == typeof i.nextEl && e.length > 1 && 1 === this.$el.find(i.nextEl).length && (e = this.$el.find(i.nextEl))), i.prevEl && (t = r(i.prevEl), this.params.uniqueNavElements && "string" == typeof i.prevEl && t.length > 1 && 1 === this.$el.find(i.prevEl).length && (t = this.$el.find(i.prevEl))), e && e.length > 0 && e.on("click", this.navigation.onNextClick), t && t.length > 0 && t.on("click", this.navigation.onPrevClick), h.extend(this.navigation, {
        $nextEl: e,
        nextEl: e && e[0],
        $prevEl: t,
        prevEl: t && t[0]
      }));
    },
    destroy: function destroy() {
      var e = this.navigation,
          t = e.$nextEl,
          i = e.$prevEl;
      t && t.length && (t.off("click", this.navigation.onNextClick), t.removeClass(this.params.navigation.disabledClass)), i && i.length && (i.off("click", this.navigation.onPrevClick), i.removeClass(this.params.navigation.disabledClass));
    }
  },
      re = {
    update: function update() {
      var e = this.rtl,
          t = this.params.pagination;

      if (t.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
        var i,
            s = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
            a = this.pagination.$el,
            n = this.params.loop ? Math.ceil((s - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length;

        if (this.params.loop ? ((i = Math.ceil((this.activeIndex - this.loopedSlides) / this.params.slidesPerGroup)) > s - 1 - 2 * this.loopedSlides && (i -= s - 2 * this.loopedSlides), i > n - 1 && (i -= n), i < 0 && "bullets" !== this.params.paginationType && (i = n + i)) : i = void 0 !== this.snapIndex ? this.snapIndex : this.activeIndex || 0, "bullets" === t.type && this.pagination.bullets && this.pagination.bullets.length > 0) {
          var o,
              l,
              h,
              d = this.pagination.bullets;
          if (t.dynamicBullets && (this.pagination.bulletSize = d.eq(0)[this.isHorizontal() ? "outerWidth" : "outerHeight"](!0), a.css(this.isHorizontal() ? "width" : "height", this.pagination.bulletSize * (t.dynamicMainBullets + 4) + "px"), t.dynamicMainBullets > 1 && void 0 !== this.previousIndex && (this.pagination.dynamicBulletIndex += i - this.previousIndex, this.pagination.dynamicBulletIndex > t.dynamicMainBullets - 1 ? this.pagination.dynamicBulletIndex = t.dynamicMainBullets - 1 : this.pagination.dynamicBulletIndex < 0 && (this.pagination.dynamicBulletIndex = 0)), o = i - this.pagination.dynamicBulletIndex, h = ((l = o + (Math.min(d.length, t.dynamicMainBullets) - 1)) + o) / 2), d.removeClass(t.bulletActiveClass + " " + t.bulletActiveClass + "-next " + t.bulletActiveClass + "-next-next " + t.bulletActiveClass + "-prev " + t.bulletActiveClass + "-prev-prev " + t.bulletActiveClass + "-main"), a.length > 1) d.each(function (e, s) {
            var a = r(s),
                n = a.index();
            n === i && a.addClass(t.bulletActiveClass), t.dynamicBullets && (n >= o && n <= l && a.addClass(t.bulletActiveClass + "-main"), n === o && a.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), n === l && a.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next"));
          });else {
            var c = d.eq(i),
                p = c.index();

            if (c.addClass(t.bulletActiveClass), t.dynamicBullets) {
              for (var u = d.eq(o), m = d.eq(l), f = o; f <= l; f += 1) {
                d.eq(f).addClass(t.bulletActiveClass + "-main");
              }

              if (this.params.loop) {
                if (p >= d.length - t.dynamicMainBullets) {
                  for (var v = t.dynamicMainBullets; v >= 0; v -= 1) {
                    d.eq(d.length - v).addClass(t.bulletActiveClass + "-main");
                  }

                  d.eq(d.length - t.dynamicMainBullets - 1).addClass(t.bulletActiveClass + "-prev");
                } else u.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), m.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next");
              } else u.prev().addClass(t.bulletActiveClass + "-prev").prev().addClass(t.bulletActiveClass + "-prev-prev"), m.next().addClass(t.bulletActiveClass + "-next").next().addClass(t.bulletActiveClass + "-next-next");
            }
          }

          if (t.dynamicBullets) {
            var g = Math.min(d.length, t.dynamicMainBullets + 4),
                y = (this.pagination.bulletSize * g - this.pagination.bulletSize) / 2 - h * this.pagination.bulletSize,
                w = e ? "right" : "left";
            d.css(this.isHorizontal() ? w : "top", y + "px");
          }
        }

        if ("fraction" === t.type && (a.find("." + t.currentClass).text(t.formatFractionCurrent(i + 1)), a.find("." + t.totalClass).text(t.formatFractionTotal(n))), "progressbar" === t.type) {
          var b;
          b = t.progressbarOpposite ? this.isHorizontal() ? "vertical" : "horizontal" : this.isHorizontal() ? "horizontal" : "vertical";
          var x = (i + 1) / n,
              E = 1,
              C = 1;
          "horizontal" === b ? E = x : C = x, a.find("." + t.progressbarFillClass).transform("translate3d(0,0,0) scaleX(" + E + ") scaleY(" + C + ")").transition(this.params.speed);
        }

        "custom" === t.type && t.renderCustom ? (a.html(t.renderCustom(this, i + 1, n)), this.emit("paginationRender", this, a[0])) : this.emit("paginationUpdate", this, a[0]), a[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](t.lockClass);
      }
    },
    render: function render() {
      var e = this.params.pagination;

      if (e.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
        var t = this.virtual && this.params.virtual.enabled ? this.virtual.slides.length : this.slides.length,
            i = this.pagination.$el,
            s = "";

        if ("bullets" === e.type) {
          for (var a = this.params.loop ? Math.ceil((t - 2 * this.loopedSlides) / this.params.slidesPerGroup) : this.snapGrid.length, n = 0; n < a; n += 1) {
            e.renderBullet ? s += e.renderBullet.call(this, n, e.bulletClass) : s += "<" + e.bulletElement + ' class="' + e.bulletClass + '"></' + e.bulletElement + ">";
          }

          i.html(s), this.pagination.bullets = i.find("." + e.bulletClass);
        }

        "fraction" === e.type && (s = e.renderFraction ? e.renderFraction.call(this, e.currentClass, e.totalClass) : '<span class="' + e.currentClass + '"></span> / <span class="' + e.totalClass + '"></span>', i.html(s)), "progressbar" === e.type && (s = e.renderProgressbar ? e.renderProgressbar.call(this, e.progressbarFillClass) : '<span class="' + e.progressbarFillClass + '"></span>', i.html(s)), "custom" !== e.type && this.emit("paginationRender", this.pagination.$el[0]);
      }
    },
    init: function init() {
      var e = this,
          t = e.params.pagination;

      if (t.el) {
        var i = r(t.el);
        0 !== i.length && (e.params.uniqueNavElements && "string" == typeof t.el && i.length > 1 && (i = e.$el.find(t.el)), "bullets" === t.type && t.clickable && i.addClass(t.clickableClass), i.addClass(t.modifierClass + t.type), "bullets" === t.type && t.dynamicBullets && (i.addClass("" + t.modifierClass + t.type + "-dynamic"), e.pagination.dynamicBulletIndex = 0, t.dynamicMainBullets < 1 && (t.dynamicMainBullets = 1)), "progressbar" === t.type && t.progressbarOpposite && i.addClass(t.progressbarOppositeClass), t.clickable && i.on("click", "." + t.bulletClass, function (t) {
          t.preventDefault();
          var i = r(this).index() * e.params.slidesPerGroup;
          e.params.loop && (i += e.loopedSlides), e.slideTo(i);
        }), h.extend(e.pagination, {
          $el: i,
          el: i[0]
        }));
      }
    },
    destroy: function destroy() {
      var e = this.params.pagination;

      if (e.el && this.pagination.el && this.pagination.$el && 0 !== this.pagination.$el.length) {
        var t = this.pagination.$el;
        t.removeClass(e.hiddenClass), t.removeClass(e.modifierClass + e.type), this.pagination.bullets && this.pagination.bullets.removeClass(e.bulletActiveClass), e.clickable && t.off("click", "." + e.bulletClass);
      }
    }
  },
      oe = {
    setTranslate: function setTranslate() {
      if (this.params.scrollbar.el && this.scrollbar.el) {
        var e = this.scrollbar,
            t = this.rtlTranslate,
            i = this.progress,
            s = e.dragSize,
            a = e.trackSize,
            n = e.$dragEl,
            r = e.$el,
            o = this.params.scrollbar,
            l = s,
            h = (a - s) * i;
        t ? (h = -h) > 0 ? (l = s - h, h = 0) : -h + s > a && (l = a + h) : h < 0 ? (l = s + h, h = 0) : h + s > a && (l = a - h), this.isHorizontal() ? (n.transform("translate3d(" + h + "px, 0, 0)"), n[0].style.width = l + "px") : (n.transform("translate3d(0px, " + h + "px, 0)"), n[0].style.height = l + "px"), o.hide && (clearTimeout(this.scrollbar.timeout), r[0].style.opacity = 1, this.scrollbar.timeout = setTimeout(function () {
          r[0].style.opacity = 0, r.transition(400);
        }, 1e3));
      }
    },
    setTransition: function setTransition(e) {
      this.params.scrollbar.el && this.scrollbar.el && this.scrollbar.$dragEl.transition(e);
    },
    updateSize: function updateSize() {
      if (this.params.scrollbar.el && this.scrollbar.el) {
        var e = this.scrollbar,
            t = e.$dragEl,
            i = e.$el;
        t[0].style.width = "", t[0].style.height = "";
        var s,
            a = this.isHorizontal() ? i[0].offsetWidth : i[0].offsetHeight,
            n = this.size / this.virtualSize,
            r = n * (a / this.size);
        s = "auto" === this.params.scrollbar.dragSize ? a * n : parseInt(this.params.scrollbar.dragSize, 10), this.isHorizontal() ? t[0].style.width = s + "px" : t[0].style.height = s + "px", i[0].style.display = n >= 1 ? "none" : "", this.params.scrollbar.hide && (i[0].style.opacity = 0), h.extend(e, {
          trackSize: a,
          divider: n,
          moveDivider: r,
          dragSize: s
        }), e.$el[this.params.watchOverflow && this.isLocked ? "addClass" : "removeClass"](this.params.scrollbar.lockClass);
      }
    },
    getPointerPosition: function getPointerPosition(e) {
      return this.isHorizontal() ? "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientX : e.clientX : "touchstart" === e.type || "touchmove" === e.type ? e.targetTouches[0].clientY : e.clientY;
    },
    setDragPosition: function setDragPosition(e) {
      var t,
          i = this.scrollbar,
          s = this.rtlTranslate,
          a = i.$el,
          n = i.dragSize,
          r = i.trackSize,
          o = i.dragStartPos;
      t = (i.getPointerPosition(e) - a.offset()[this.isHorizontal() ? "left" : "top"] - (null !== o ? o : n / 2)) / (r - n), t = Math.max(Math.min(t, 1), 0), s && (t = 1 - t);
      var l = this.minTranslate() + (this.maxTranslate() - this.minTranslate()) * t;
      this.updateProgress(l), this.setTranslate(l), this.updateActiveIndex(), this.updateSlidesClasses();
    },
    onDragStart: function onDragStart(e) {
      var t = this.params.scrollbar,
          i = this.scrollbar,
          s = this.$wrapperEl,
          a = i.$el,
          n = i.$dragEl;
      this.scrollbar.isTouched = !0, this.scrollbar.dragStartPos = e.target === n[0] || e.target === n ? i.getPointerPosition(e) - e.target.getBoundingClientRect()[this.isHorizontal() ? "left" : "top"] : null, e.preventDefault(), e.stopPropagation(), s.transition(100), n.transition(100), i.setDragPosition(e), clearTimeout(this.scrollbar.dragTimeout), a.transition(0), t.hide && a.css("opacity", 1), this.params.cssMode && this.$wrapperEl.css("scroll-snap-type", "none"), this.emit("scrollbarDragStart", e);
    },
    onDragMove: function onDragMove(e) {
      var t = this.scrollbar,
          i = this.$wrapperEl,
          s = t.$el,
          a = t.$dragEl;
      this.scrollbar.isTouched && (e.preventDefault ? e.preventDefault() : e.returnValue = !1, t.setDragPosition(e), i.transition(0), s.transition(0), a.transition(0), this.emit("scrollbarDragMove", e));
    },
    onDragEnd: function onDragEnd(e) {
      var t = this.params.scrollbar,
          i = this.scrollbar,
          s = this.$wrapperEl,
          a = i.$el;
      this.scrollbar.isTouched && (this.scrollbar.isTouched = !1, this.params.cssMode && (this.$wrapperEl.css("scroll-snap-type", ""), s.transition("")), t.hide && (clearTimeout(this.scrollbar.dragTimeout), this.scrollbar.dragTimeout = h.nextTick(function () {
        a.css("opacity", 0), a.transition(400);
      }, 1e3)), this.emit("scrollbarDragEnd", e), t.snapOnRelease && this.slideToClosest());
    },
    enableDraggable: function enableDraggable() {
      if (this.params.scrollbar.el) {
        var e = this.scrollbar,
            t = this.touchEventsTouch,
            s = this.touchEventsDesktop,
            a = this.params,
            n = e.$el[0],
            r = !(!d.passiveListener || !a.passiveListeners) && {
          passive: !1,
          capture: !1
        },
            o = !(!d.passiveListener || !a.passiveListeners) && {
          passive: !0,
          capture: !1
        };
        d.touch ? (n.addEventListener(t.start, this.scrollbar.onDragStart, r), n.addEventListener(t.move, this.scrollbar.onDragMove, r), n.addEventListener(t.end, this.scrollbar.onDragEnd, o)) : (n.addEventListener(s.start, this.scrollbar.onDragStart, r), i.addEventListener(s.move, this.scrollbar.onDragMove, r), i.addEventListener(s.end, this.scrollbar.onDragEnd, o));
      }
    },
    disableDraggable: function disableDraggable() {
      if (this.params.scrollbar.el) {
        var e = this.scrollbar,
            t = this.touchEventsTouch,
            s = this.touchEventsDesktop,
            a = this.params,
            n = e.$el[0],
            r = !(!d.passiveListener || !a.passiveListeners) && {
          passive: !1,
          capture: !1
        },
            o = !(!d.passiveListener || !a.passiveListeners) && {
          passive: !0,
          capture: !1
        };
        d.touch ? (n.removeEventListener(t.start, this.scrollbar.onDragStart, r), n.removeEventListener(t.move, this.scrollbar.onDragMove, r), n.removeEventListener(t.end, this.scrollbar.onDragEnd, o)) : (n.removeEventListener(s.start, this.scrollbar.onDragStart, r), i.removeEventListener(s.move, this.scrollbar.onDragMove, r), i.removeEventListener(s.end, this.scrollbar.onDragEnd, o));
      }
    },
    init: function init() {
      if (this.params.scrollbar.el) {
        var e = this.scrollbar,
            t = this.$el,
            i = this.params.scrollbar,
            s = r(i.el);
        this.params.uniqueNavElements && "string" == typeof i.el && s.length > 1 && 1 === t.find(i.el).length && (s = t.find(i.el));
        var a = s.find("." + this.params.scrollbar.dragClass);
        0 === a.length && (a = r('<div class="' + this.params.scrollbar.dragClass + '"></div>'), s.append(a)), h.extend(e, {
          $el: s,
          el: s[0],
          $dragEl: a,
          dragEl: a[0]
        }), i.draggable && e.enableDraggable();
      }
    },
    destroy: function destroy() {
      this.scrollbar.disableDraggable();
    }
  },
      le = {
    setTransform: function setTransform(e, t) {
      var i = this.rtl,
          s = r(e),
          a = i ? -1 : 1,
          n = s.attr("data-swiper-parallax") || "0",
          o = s.attr("data-swiper-parallax-x"),
          l = s.attr("data-swiper-parallax-y"),
          h = s.attr("data-swiper-parallax-scale"),
          d = s.attr("data-swiper-parallax-opacity");

      if (o || l ? (o = o || "0", l = l || "0") : this.isHorizontal() ? (o = n, l = "0") : (l = n, o = "0"), o = o.indexOf("%") >= 0 ? parseInt(o, 10) * t * a + "%" : o * t * a + "px", l = l.indexOf("%") >= 0 ? parseInt(l, 10) * t + "%" : l * t + "px", null != d) {
        var c = d - (d - 1) * (1 - Math.abs(t));
        s[0].style.opacity = c;
      }

      if (null == h) s.transform("translate3d(" + o + ", " + l + ", 0px)");else {
        var p = h - (h - 1) * (1 - Math.abs(t));
        s.transform("translate3d(" + o + ", " + l + ", 0px) scale(" + p + ")");
      }
    },
    setTranslate: function setTranslate() {
      var e = this,
          t = e.$el,
          i = e.slides,
          s = e.progress,
          a = e.snapGrid;
      t.children("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, i) {
        e.parallax.setTransform(i, s);
      }), i.each(function (t, i) {
        var n = i.progress;
        e.params.slidesPerGroup > 1 && "auto" !== e.params.slidesPerView && (n += Math.ceil(t / 2) - s * (a.length - 1)), n = Math.min(Math.max(n, -1), 1), r(i).find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, i) {
          e.parallax.setTransform(i, n);
        });
      });
    },
    setTransition: function setTransition(e) {
      void 0 === e && (e = this.params.speed), this.$el.find("[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]").each(function (t, i) {
        var s = r(i),
            a = parseInt(s.attr("data-swiper-parallax-duration"), 10) || e;
        0 === e && (a = 0), s.transition(a);
      });
    }
  },
      he = {
    getDistanceBetweenTouches: function getDistanceBetweenTouches(e) {
      if (e.targetTouches.length < 2) return 1;
      var t = e.targetTouches[0].pageX,
          i = e.targetTouches[0].pageY,
          s = e.targetTouches[1].pageX,
          a = e.targetTouches[1].pageY;
      return Math.sqrt(Math.pow(s - t, 2) + Math.pow(a - i, 2));
    },
    onGestureStart: function onGestureStart(e) {
      var t = this.params.zoom,
          i = this.zoom,
          s = i.gesture;

      if (i.fakeGestureTouched = !1, i.fakeGestureMoved = !1, !d.gestures) {
        if ("touchstart" !== e.type || "touchstart" === e.type && e.targetTouches.length < 2) return;
        i.fakeGestureTouched = !0, s.scaleStart = he.getDistanceBetweenTouches(e);
      }

      s.$slideEl && s.$slideEl.length || (s.$slideEl = r(e.target).closest("." + this.params.slideClass), 0 === s.$slideEl.length && (s.$slideEl = this.slides.eq(this.activeIndex)), s.$imageEl = s.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), s.$imageWrapEl = s.$imageEl.parent("." + t.containerClass), s.maxRatio = s.$imageWrapEl.attr("data-swiper-zoom") || t.maxRatio, 0 !== s.$imageWrapEl.length) ? (s.$imageEl && s.$imageEl.transition(0), this.zoom.isScaling = !0) : s.$imageEl = void 0;
    },
    onGestureChange: function onGestureChange(e) {
      var t = this.params.zoom,
          i = this.zoom,
          s = i.gesture;

      if (!d.gestures) {
        if ("touchmove" !== e.type || "touchmove" === e.type && e.targetTouches.length < 2) return;
        i.fakeGestureMoved = !0, s.scaleMove = he.getDistanceBetweenTouches(e);
      }

      s.$imageEl && 0 !== s.$imageEl.length && (i.scale = d.gestures ? e.scale * i.currentScale : s.scaleMove / s.scaleStart * i.currentScale, i.scale > s.maxRatio && (i.scale = s.maxRatio - 1 + Math.pow(i.scale - s.maxRatio + 1, .5)), i.scale < t.minRatio && (i.scale = t.minRatio + 1 - Math.pow(t.minRatio - i.scale + 1, .5)), s.$imageEl.transform("translate3d(0,0,0) scale(" + i.scale + ")"));
    },
    onGestureEnd: function onGestureEnd(e) {
      var t = this.params.zoom,
          i = this.zoom,
          s = i.gesture;

      if (!d.gestures) {
        if (!i.fakeGestureTouched || !i.fakeGestureMoved) return;
        if ("touchend" !== e.type || "touchend" === e.type && e.changedTouches.length < 2 && !I.android) return;
        i.fakeGestureTouched = !1, i.fakeGestureMoved = !1;
      }

      s.$imageEl && 0 !== s.$imageEl.length && (i.scale = Math.max(Math.min(i.scale, s.maxRatio), t.minRatio), s.$imageEl.transition(this.params.speed).transform("translate3d(0,0,0) scale(" + i.scale + ")"), i.currentScale = i.scale, i.isScaling = !1, 1 === i.scale && (s.$slideEl = void 0));
    },
    onTouchStart: function onTouchStart(e) {
      var t = this.zoom,
          i = t.gesture,
          s = t.image;
      i.$imageEl && 0 !== i.$imageEl.length && (s.isTouched || (I.android && e.cancelable && e.preventDefault(), s.isTouched = !0, s.touchesStart.x = "touchstart" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesStart.y = "touchstart" === e.type ? e.targetTouches[0].pageY : e.pageY));
    },
    onTouchMove: function onTouchMove(e) {
      var t = this.zoom,
          i = t.gesture,
          s = t.image,
          a = t.velocity;

      if (i.$imageEl && 0 !== i.$imageEl.length && (this.allowClick = !1, s.isTouched && i.$slideEl)) {
        s.isMoved || (s.width = i.$imageEl[0].offsetWidth, s.height = i.$imageEl[0].offsetHeight, s.startX = h.getTranslate(i.$imageWrapEl[0], "x") || 0, s.startY = h.getTranslate(i.$imageWrapEl[0], "y") || 0, i.slideWidth = i.$slideEl[0].offsetWidth, i.slideHeight = i.$slideEl[0].offsetHeight, i.$imageWrapEl.transition(0), this.rtl && (s.startX = -s.startX, s.startY = -s.startY));
        var n = s.width * t.scale,
            r = s.height * t.scale;

        if (!(n < i.slideWidth && r < i.slideHeight)) {
          if (s.minX = Math.min(i.slideWidth / 2 - n / 2, 0), s.maxX = -s.minX, s.minY = Math.min(i.slideHeight / 2 - r / 2, 0), s.maxY = -s.minY, s.touchesCurrent.x = "touchmove" === e.type ? e.targetTouches[0].pageX : e.pageX, s.touchesCurrent.y = "touchmove" === e.type ? e.targetTouches[0].pageY : e.pageY, !s.isMoved && !t.isScaling) {
            if (this.isHorizontal() && (Math.floor(s.minX) === Math.floor(s.startX) && s.touchesCurrent.x < s.touchesStart.x || Math.floor(s.maxX) === Math.floor(s.startX) && s.touchesCurrent.x > s.touchesStart.x)) return void (s.isTouched = !1);
            if (!this.isHorizontal() && (Math.floor(s.minY) === Math.floor(s.startY) && s.touchesCurrent.y < s.touchesStart.y || Math.floor(s.maxY) === Math.floor(s.startY) && s.touchesCurrent.y > s.touchesStart.y)) return void (s.isTouched = !1);
          }

          e.cancelable && e.preventDefault(), e.stopPropagation(), s.isMoved = !0, s.currentX = s.touchesCurrent.x - s.touchesStart.x + s.startX, s.currentY = s.touchesCurrent.y - s.touchesStart.y + s.startY, s.currentX < s.minX && (s.currentX = s.minX + 1 - Math.pow(s.minX - s.currentX + 1, .8)), s.currentX > s.maxX && (s.currentX = s.maxX - 1 + Math.pow(s.currentX - s.maxX + 1, .8)), s.currentY < s.minY && (s.currentY = s.minY + 1 - Math.pow(s.minY - s.currentY + 1, .8)), s.currentY > s.maxY && (s.currentY = s.maxY - 1 + Math.pow(s.currentY - s.maxY + 1, .8)), a.prevPositionX || (a.prevPositionX = s.touchesCurrent.x), a.prevPositionY || (a.prevPositionY = s.touchesCurrent.y), a.prevTime || (a.prevTime = Date.now()), a.x = (s.touchesCurrent.x - a.prevPositionX) / (Date.now() - a.prevTime) / 2, a.y = (s.touchesCurrent.y - a.prevPositionY) / (Date.now() - a.prevTime) / 2, Math.abs(s.touchesCurrent.x - a.prevPositionX) < 2 && (a.x = 0), Math.abs(s.touchesCurrent.y - a.prevPositionY) < 2 && (a.y = 0), a.prevPositionX = s.touchesCurrent.x, a.prevPositionY = s.touchesCurrent.y, a.prevTime = Date.now(), i.$imageWrapEl.transform("translate3d(" + s.currentX + "px, " + s.currentY + "px,0)");
        }
      }
    },
    onTouchEnd: function onTouchEnd() {
      var e = this.zoom,
          t = e.gesture,
          i = e.image,
          s = e.velocity;

      if (t.$imageEl && 0 !== t.$imageEl.length) {
        if (!i.isTouched || !i.isMoved) return i.isTouched = !1, void (i.isMoved = !1);
        i.isTouched = !1, i.isMoved = !1;
        var a = 300,
            n = 300,
            r = s.x * a,
            o = i.currentX + r,
            l = s.y * n,
            h = i.currentY + l;
        0 !== s.x && (a = Math.abs((o - i.currentX) / s.x)), 0 !== s.y && (n = Math.abs((h - i.currentY) / s.y));
        var d = Math.max(a, n);
        i.currentX = o, i.currentY = h;
        var c = i.width * e.scale,
            p = i.height * e.scale;
        i.minX = Math.min(t.slideWidth / 2 - c / 2, 0), i.maxX = -i.minX, i.minY = Math.min(t.slideHeight / 2 - p / 2, 0), i.maxY = -i.minY, i.currentX = Math.max(Math.min(i.currentX, i.maxX), i.minX), i.currentY = Math.max(Math.min(i.currentY, i.maxY), i.minY), t.$imageWrapEl.transition(d).transform("translate3d(" + i.currentX + "px, " + i.currentY + "px,0)");
      }
    },
    onTransitionEnd: function onTransitionEnd() {
      var e = this.zoom,
          t = e.gesture;
      t.$slideEl && this.previousIndex !== this.activeIndex && (t.$imageEl && t.$imageEl.transform("translate3d(0,0,0) scale(1)"), t.$imageWrapEl && t.$imageWrapEl.transform("translate3d(0,0,0)"), e.scale = 1, e.currentScale = 1, t.$slideEl = void 0, t.$imageEl = void 0, t.$imageWrapEl = void 0);
    },
    toggle: function toggle(e) {
      var t = this.zoom;
      t.scale && 1 !== t.scale ? t.out() : t["in"](e);
    },
    "in": function _in(e) {
      var t,
          i,
          s,
          a,
          n,
          r,
          o,
          l,
          h,
          d,
          c,
          p,
          u,
          m,
          f,
          v,
          g = this.zoom,
          y = this.params.zoom,
          w = g.gesture,
          b = g.image;
      w.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? w.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : w.$slideEl = this.slides.eq(this.activeIndex), w.$imageEl = w.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), w.$imageWrapEl = w.$imageEl.parent("." + y.containerClass)), w.$imageEl && 0 !== w.$imageEl.length && (w.$slideEl.addClass("" + y.zoomedSlideClass), void 0 === b.touchesStart.x && e ? (t = "touchend" === e.type ? e.changedTouches[0].pageX : e.pageX, i = "touchend" === e.type ? e.changedTouches[0].pageY : e.pageY) : (t = b.touchesStart.x, i = b.touchesStart.y), g.scale = w.$imageWrapEl.attr("data-swiper-zoom") || y.maxRatio, g.currentScale = w.$imageWrapEl.attr("data-swiper-zoom") || y.maxRatio, e ? (f = w.$slideEl[0].offsetWidth, v = w.$slideEl[0].offsetHeight, s = w.$slideEl.offset().left + f / 2 - t, a = w.$slideEl.offset().top + v / 2 - i, o = w.$imageEl[0].offsetWidth, l = w.$imageEl[0].offsetHeight, h = o * g.scale, d = l * g.scale, u = -(c = Math.min(f / 2 - h / 2, 0)), m = -(p = Math.min(v / 2 - d / 2, 0)), (n = s * g.scale) < c && (n = c), n > u && (n = u), (r = a * g.scale) < p && (r = p), r > m && (r = m)) : (n = 0, r = 0), w.$imageWrapEl.transition(300).transform("translate3d(" + n + "px, " + r + "px,0)"), w.$imageEl.transition(300).transform("translate3d(0,0,0) scale(" + g.scale + ")"));
    },
    out: function out() {
      var e = this.zoom,
          t = this.params.zoom,
          i = e.gesture;
      i.$slideEl || (this.params.virtual && this.params.virtual.enabled && this.virtual ? i.$slideEl = this.$wrapperEl.children("." + this.params.slideActiveClass) : i.$slideEl = this.slides.eq(this.activeIndex), i.$imageEl = i.$slideEl.find("img, svg, canvas, picture, .swiper-zoom-target"), i.$imageWrapEl = i.$imageEl.parent("." + t.containerClass)), i.$imageEl && 0 !== i.$imageEl.length && (e.scale = 1, e.currentScale = 1, i.$imageWrapEl.transition(300).transform("translate3d(0,0,0)"), i.$imageEl.transition(300).transform("translate3d(0,0,0) scale(1)"), i.$slideEl.removeClass("" + t.zoomedSlideClass), i.$slideEl = void 0);
    },
    enable: function enable() {
      var e = this.zoom;

      if (!e.enabled) {
        e.enabled = !0;
        var t = !("touchstart" !== this.touchEvents.start || !d.passiveListener || !this.params.passiveListeners) && {
          passive: !0,
          capture: !1
        },
            i = !d.passiveListener || {
          passive: !1,
          capture: !0
        },
            s = "." + this.params.slideClass;
        d.gestures ? (this.$wrapperEl.on("gesturestart", s, e.onGestureStart, t), this.$wrapperEl.on("gesturechange", s, e.onGestureChange, t), this.$wrapperEl.on("gestureend", s, e.onGestureEnd, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.on(this.touchEvents.start, s, e.onGestureStart, t), this.$wrapperEl.on(this.touchEvents.move, s, e.onGestureChange, i), this.$wrapperEl.on(this.touchEvents.end, s, e.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.on(this.touchEvents.cancel, s, e.onGestureEnd, t)), this.$wrapperEl.on(this.touchEvents.move, "." + this.params.zoom.containerClass, e.onTouchMove, i);
      }
    },
    disable: function disable() {
      var e = this.zoom;

      if (e.enabled) {
        this.zoom.enabled = !1;
        var t = !("touchstart" !== this.touchEvents.start || !d.passiveListener || !this.params.passiveListeners) && {
          passive: !0,
          capture: !1
        },
            i = !d.passiveListener || {
          passive: !1,
          capture: !0
        },
            s = "." + this.params.slideClass;
        d.gestures ? (this.$wrapperEl.off("gesturestart", s, e.onGestureStart, t), this.$wrapperEl.off("gesturechange", s, e.onGestureChange, t), this.$wrapperEl.off("gestureend", s, e.onGestureEnd, t)) : "touchstart" === this.touchEvents.start && (this.$wrapperEl.off(this.touchEvents.start, s, e.onGestureStart, t), this.$wrapperEl.off(this.touchEvents.move, s, e.onGestureChange, i), this.$wrapperEl.off(this.touchEvents.end, s, e.onGestureEnd, t), this.touchEvents.cancel && this.$wrapperEl.off(this.touchEvents.cancel, s, e.onGestureEnd, t)), this.$wrapperEl.off(this.touchEvents.move, "." + this.params.zoom.containerClass, e.onTouchMove, i);
      }
    }
  },
      de = {
    loadInSlide: function loadInSlide(e, t) {
      void 0 === t && (t = !0);
      var i = this,
          s = i.params.lazy;

      if (void 0 !== e && 0 !== i.slides.length) {
        var a = i.virtual && i.params.virtual.enabled ? i.$wrapperEl.children("." + i.params.slideClass + '[data-swiper-slide-index="' + e + '"]') : i.slides.eq(e),
            n = a.find("." + s.elementClass + ":not(." + s.loadedClass + "):not(." + s.loadingClass + ")");
        !a.hasClass(s.elementClass) || a.hasClass(s.loadedClass) || a.hasClass(s.loadingClass) || (n = n.add(a[0])), 0 !== n.length && n.each(function (e, n) {
          var o = r(n);
          o.addClass(s.loadingClass);
          var l = o.attr("data-background"),
              h = o.attr("data-src"),
              d = o.attr("data-srcset"),
              c = o.attr("data-sizes"),
              p = o.parent("picture");
          i.loadImage(o[0], h || l, d, c, !1, function () {
            if (null != i && i && (!i || i.params) && !i.destroyed) {
              if (l ? (o.css("background-image", 'url("' + l + '")'), o.removeAttr("data-background")) : (d && (o.attr("srcset", d), o.removeAttr("data-srcset")), c && (o.attr("sizes", c), o.removeAttr("data-sizes")), p.length && p.children("source").each(function (e, t) {
                var i = r(t);
                i.attr("data-srcset") && (i.attr("srcset", i.attr("data-srcset")), i.removeAttr("data-srcset"));
              }), h && (o.attr("src", h), o.removeAttr("data-src"))), o.addClass(s.loadedClass).removeClass(s.loadingClass), a.find("." + s.preloaderClass).remove(), i.params.loop && t) {
                var e = a.attr("data-swiper-slide-index");

                if (a.hasClass(i.params.slideDuplicateClass)) {
                  var n = i.$wrapperEl.children('[data-swiper-slide-index="' + e + '"]:not(.' + i.params.slideDuplicateClass + ")");
                  i.lazy.loadInSlide(n.index(), !1);
                } else {
                  var u = i.$wrapperEl.children("." + i.params.slideDuplicateClass + '[data-swiper-slide-index="' + e + '"]');
                  i.lazy.loadInSlide(u.index(), !1);
                }
              }

              i.emit("lazyImageReady", a[0], o[0]), i.params.autoHeight && i.updateAutoHeight();
            }
          }), i.emit("lazyImageLoad", a[0], o[0]);
        });
      }
    },
    load: function load() {
      var e = this,
          t = e.$wrapperEl,
          i = e.params,
          s = e.slides,
          a = e.activeIndex,
          n = e.virtual && i.virtual.enabled,
          o = i.lazy,
          l = i.slidesPerView;

      function h(e) {
        if (n) {
          if (t.children("." + i.slideClass + '[data-swiper-slide-index="' + e + '"]').length) return !0;
        } else if (s[e]) return !0;

        return !1;
      }

      function d(e) {
        return n ? r(e).attr("data-swiper-slide-index") : r(e).index();
      }

      if ("auto" === l && (l = 0), e.lazy.initialImageLoaded || (e.lazy.initialImageLoaded = !0), e.params.watchSlidesVisibility) t.children("." + i.slideVisibleClass).each(function (t, i) {
        var s = n ? r(i).attr("data-swiper-slide-index") : r(i).index();
        e.lazy.loadInSlide(s);
      });else if (l > 1) for (var c = a; c < a + l; c += 1) {
        h(c) && e.lazy.loadInSlide(c);
      } else e.lazy.loadInSlide(a);
      if (o.loadPrevNext) if (l > 1 || o.loadPrevNextAmount && o.loadPrevNextAmount > 1) {
        for (var p = o.loadPrevNextAmount, u = l, m = Math.min(a + u + Math.max(p, u), s.length), f = Math.max(a - Math.max(u, p), 0), v = a + l; v < m; v += 1) {
          h(v) && e.lazy.loadInSlide(v);
        }

        for (var g = f; g < a; g += 1) {
          h(g) && e.lazy.loadInSlide(g);
        }
      } else {
        var y = t.children("." + i.slideNextClass);
        y.length > 0 && e.lazy.loadInSlide(d(y));
        var w = t.children("." + i.slidePrevClass);
        w.length > 0 && e.lazy.loadInSlide(d(w));
      }
    }
  },
      ce = {
    LinearSpline: function LinearSpline(e, t) {
      var i, s, a, n, r;
      return this.x = e, this.y = t, this.lastIndex = e.length - 1, this.interpolate = function (e) {
        return e ? (r = function (e, t) {
          for (s = -1, i = e.length; i - s > 1;) {
            e[a = i + s >> 1] <= t ? s = a : i = a;
          }

          return i;
        }(this.x, e), n = r - 1, (e - this.x[n]) * (this.y[r] - this.y[n]) / (this.x[r] - this.x[n]) + this.y[n]) : 0;
      }, this;
    },
    getInterpolateFunction: function getInterpolateFunction(e) {
      this.controller.spline || (this.controller.spline = this.params.loop ? new ce.LinearSpline(this.slidesGrid, e.slidesGrid) : new ce.LinearSpline(this.snapGrid, e.snapGrid));
    },
    setTranslate: function setTranslate(e, t) {
      var i,
          s,
          a = this,
          n = a.controller.control;

      function r(e) {
        var t = a.rtlTranslate ? -a.translate : a.translate;
        "slide" === a.params.controller.by && (a.controller.getInterpolateFunction(e), s = -a.controller.spline.interpolate(-t)), s && "container" !== a.params.controller.by || (i = (e.maxTranslate() - e.minTranslate()) / (a.maxTranslate() - a.minTranslate()), s = (t - a.minTranslate()) * i + e.minTranslate()), a.params.controller.inverse && (s = e.maxTranslate() - s), e.updateProgress(s), e.setTranslate(s, a), e.updateActiveIndex(), e.updateSlidesClasses();
      }

      if (Array.isArray(n)) for (var o = 0; o < n.length; o += 1) {
        n[o] !== t && n[o] instanceof R && r(n[o]);
      } else n instanceof R && t !== n && r(n);
    },
    setTransition: function setTransition(e, t) {
      var i,
          s = this,
          a = s.controller.control;

      function n(t) {
        t.setTransition(e, s), 0 !== e && (t.transitionStart(), t.params.autoHeight && h.nextTick(function () {
          t.updateAutoHeight();
        }), t.$wrapperEl.transitionEnd(function () {
          a && (t.params.loop && "slide" === s.params.controller.by && t.loopFix(), t.transitionEnd());
        }));
      }

      if (Array.isArray(a)) for (i = 0; i < a.length; i += 1) {
        a[i] !== t && a[i] instanceof R && n(a[i]);
      } else a instanceof R && t !== a && n(a);
    }
  },
      pe = {
    makeElFocusable: function makeElFocusable(e) {
      return e.attr("tabIndex", "0"), e;
    },
    makeElNotFocusable: function makeElNotFocusable(e) {
      return e.attr("tabIndex", "-1"), e;
    },
    addElRole: function addElRole(e, t) {
      return e.attr("role", t), e;
    },
    addElLabel: function addElLabel(e, t) {
      return e.attr("aria-label", t), e;
    },
    disableEl: function disableEl(e) {
      return e.attr("aria-disabled", !0), e;
    },
    enableEl: function enableEl(e) {
      return e.attr("aria-disabled", !1), e;
    },
    onEnterKey: function onEnterKey(e) {
      var t = this.params.a11y;

      if (13 === e.keyCode) {
        var i = r(e.target);
        this.navigation && this.navigation.$nextEl && i.is(this.navigation.$nextEl) && (this.isEnd && !this.params.loop || this.slideNext(), this.isEnd ? this.a11y.notify(t.lastSlideMessage) : this.a11y.notify(t.nextSlideMessage)), this.navigation && this.navigation.$prevEl && i.is(this.navigation.$prevEl) && (this.isBeginning && !this.params.loop || this.slidePrev(), this.isBeginning ? this.a11y.notify(t.firstSlideMessage) : this.a11y.notify(t.prevSlideMessage)), this.pagination && i.is("." + this.params.pagination.bulletClass) && i[0].click();
      }
    },
    notify: function notify(e) {
      var t = this.a11y.liveRegion;
      0 !== t.length && (t.html(""), t.html(e));
    },
    updateNavigation: function updateNavigation() {
      if (!this.params.loop && this.navigation) {
        var e = this.navigation,
            t = e.$nextEl,
            i = e.$prevEl;
        i && i.length > 0 && (this.isBeginning ? (this.a11y.disableEl(i), this.a11y.makeElNotFocusable(i)) : (this.a11y.enableEl(i), this.a11y.makeElFocusable(i))), t && t.length > 0 && (this.isEnd ? (this.a11y.disableEl(t), this.a11y.makeElNotFocusable(t)) : (this.a11y.enableEl(t), this.a11y.makeElFocusable(t)));
      }
    },
    updatePagination: function updatePagination() {
      var e = this,
          t = e.params.a11y;
      e.pagination && e.params.pagination.clickable && e.pagination.bullets && e.pagination.bullets.length && e.pagination.bullets.each(function (i, s) {
        var a = r(s);
        e.a11y.makeElFocusable(a), e.a11y.addElRole(a, "button"), e.a11y.addElLabel(a, t.paginationBulletMessage.replace(/\{\{index\}\}/, a.index() + 1));
      });
    },
    init: function init() {
      this.$el.append(this.a11y.liveRegion);
      var e,
          t,
          i = this.params.a11y;
      this.navigation && this.navigation.$nextEl && (e = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t = this.navigation.$prevEl), e && (this.a11y.makeElFocusable(e), this.a11y.addElRole(e, "button"), this.a11y.addElLabel(e, i.nextSlideMessage), e.on("keydown", this.a11y.onEnterKey)), t && (this.a11y.makeElFocusable(t), this.a11y.addElRole(t, "button"), this.a11y.addElLabel(t, i.prevSlideMessage), t.on("keydown", this.a11y.onEnterKey)), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.on("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey);
    },
    destroy: function destroy() {
      var e, t;
      this.a11y.liveRegion && this.a11y.liveRegion.length > 0 && this.a11y.liveRegion.remove(), this.navigation && this.navigation.$nextEl && (e = this.navigation.$nextEl), this.navigation && this.navigation.$prevEl && (t = this.navigation.$prevEl), e && e.off("keydown", this.a11y.onEnterKey), t && t.off("keydown", this.a11y.onEnterKey), this.pagination && this.params.pagination.clickable && this.pagination.bullets && this.pagination.bullets.length && this.pagination.$el.off("keydown", "." + this.params.pagination.bulletClass, this.a11y.onEnterKey);
    }
  },
      ue = {
    init: function init() {
      if (this.params.history) {
        if (!a.history || !a.history.pushState) return this.params.history.enabled = !1, void (this.params.hashNavigation.enabled = !0);
        var e = this.history;
        e.initialized = !0, e.paths = ue.getPathValues(), (e.paths.key || e.paths.value) && (e.scrollToSlide(0, e.paths.value, this.params.runCallbacksOnInit), this.params.history.replaceState || a.addEventListener("popstate", this.history.setHistoryPopState));
      }
    },
    destroy: function destroy() {
      this.params.history.replaceState || a.removeEventListener("popstate", this.history.setHistoryPopState);
    },
    setHistoryPopState: function setHistoryPopState() {
      this.history.paths = ue.getPathValues(), this.history.scrollToSlide(this.params.speed, this.history.paths.value, !1);
    },
    getPathValues: function getPathValues() {
      var e = a.location.pathname.slice(1).split("/").filter(function (e) {
        return "" !== e;
      }),
          t = e.length;
      return {
        key: e[t - 2],
        value: e[t - 1]
      };
    },
    setHistory: function setHistory(e, t) {
      if (this.history.initialized && this.params.history.enabled) {
        var i = this.slides.eq(t),
            s = ue.slugify(i.attr("data-history"));
        a.location.pathname.includes(e) || (s = e + "/" + s);
        var n = a.history.state;
        n && n.value === s || (this.params.history.replaceState ? a.history.replaceState({
          value: s
        }, null, s) : a.history.pushState({
          value: s
        }, null, s));
      }
    },
    slugify: function slugify(e) {
      return e.toString().replace(/\s+/g, "-").replace(/[^\w-]+/g, "").replace(/--+/g, "-").replace(/^-+/, "").replace(/-+$/, "");
    },
    scrollToSlide: function scrollToSlide(e, t, i) {
      if (t) for (var s = 0, a = this.slides.length; s < a; s += 1) {
        var n = this.slides.eq(s);

        if (ue.slugify(n.attr("data-history")) === t && !n.hasClass(this.params.slideDuplicateClass)) {
          var r = n.index();
          this.slideTo(r, e, i);
        }
      } else this.slideTo(0, e, i);
    }
  },
      me = {
    onHashCange: function onHashCange() {
      this.emit("hashChange");
      var e = i.location.hash.replace("#", "");

      if (e !== this.slides.eq(this.activeIndex).attr("data-hash")) {
        var t = this.$wrapperEl.children("." + this.params.slideClass + '[data-hash="' + e + '"]').index();
        if (void 0 === t) return;
        this.slideTo(t);
      }
    },
    setHash: function setHash() {
      if (this.hashNavigation.initialized && this.params.hashNavigation.enabled) if (this.params.hashNavigation.replaceState && a.history && a.history.replaceState) a.history.replaceState(null, null, "#" + this.slides.eq(this.activeIndex).attr("data-hash") || ""), this.emit("hashSet");else {
        var e = this.slides.eq(this.activeIndex),
            t = e.attr("data-hash") || e.attr("data-history");
        i.location.hash = t || "", this.emit("hashSet");
      }
    },
    init: function init() {
      if (!(!this.params.hashNavigation.enabled || this.params.history && this.params.history.enabled)) {
        this.hashNavigation.initialized = !0;
        var e = i.location.hash.replace("#", "");
        if (e) for (var t = 0, s = this.slides.length; t < s; t += 1) {
          var n = this.slides.eq(t);

          if ((n.attr("data-hash") || n.attr("data-history")) === e && !n.hasClass(this.params.slideDuplicateClass)) {
            var o = n.index();
            this.slideTo(o, 0, this.params.runCallbacksOnInit, !0);
          }
        }
        this.params.hashNavigation.watchState && r(a).on("hashchange", this.hashNavigation.onHashCange);
      }
    },
    destroy: function destroy() {
      this.params.hashNavigation.watchState && r(a).off("hashchange", this.hashNavigation.onHashCange);
    }
  },
      fe = {
    run: function run() {
      var e = this,
          t = e.slides.eq(e.activeIndex),
          i = e.params.autoplay.delay;
      t.attr("data-swiper-autoplay") && (i = t.attr("data-swiper-autoplay") || e.params.autoplay.delay), clearTimeout(e.autoplay.timeout), e.autoplay.timeout = h.nextTick(function () {
        e.params.autoplay.reverseDirection ? e.params.loop ? (e.loopFix(), e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.isBeginning ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(e.slides.length - 1, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slidePrev(e.params.speed, !0, !0), e.emit("autoplay")) : e.params.loop ? (e.loopFix(), e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")) : e.isEnd ? e.params.autoplay.stopOnLastSlide ? e.autoplay.stop() : (e.slideTo(0, e.params.speed, !0, !0), e.emit("autoplay")) : (e.slideNext(e.params.speed, !0, !0), e.emit("autoplay")), e.params.cssMode && e.autoplay.running && e.autoplay.run();
      }, i);
    },
    start: function start() {
      return void 0 === this.autoplay.timeout && !this.autoplay.running && (this.autoplay.running = !0, this.emit("autoplayStart"), this.autoplay.run(), !0);
    },
    stop: function stop() {
      return !!this.autoplay.running && void 0 !== this.autoplay.timeout && (this.autoplay.timeout && (clearTimeout(this.autoplay.timeout), this.autoplay.timeout = void 0), this.autoplay.running = !1, this.emit("autoplayStop"), !0);
    },
    pause: function pause(e) {
      this.autoplay.running && (this.autoplay.paused || (this.autoplay.timeout && clearTimeout(this.autoplay.timeout), this.autoplay.paused = !0, 0 !== e && this.params.autoplay.waitForTransition ? (this.$wrapperEl[0].addEventListener("transitionend", this.autoplay.onTransitionEnd), this.$wrapperEl[0].addEventListener("webkitTransitionEnd", this.autoplay.onTransitionEnd)) : (this.autoplay.paused = !1, this.autoplay.run())));
    }
  },
      ve = {
    setTranslate: function setTranslate() {
      for (var e = this.slides, t = 0; t < e.length; t += 1) {
        var i = this.slides.eq(t),
            s = -i[0].swiperSlideOffset;
        this.params.virtualTranslate || (s -= this.translate);
        var a = 0;
        this.isHorizontal() || (a = s, s = 0);
        var n = this.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(i[0].progress), 0) : 1 + Math.min(Math.max(i[0].progress, -1), 0);
        i.css({
          opacity: n
        }).transform("translate3d(" + s + "px, " + a + "px, 0px)");
      }
    },
    setTransition: function setTransition(e) {
      var t = this,
          i = t.slides,
          s = t.$wrapperEl;

      if (i.transition(e), t.params.virtualTranslate && 0 !== e) {
        var a = !1;
        i.transitionEnd(function () {
          if (!a && t && !t.destroyed) {
            a = !0, t.animating = !1;

            for (var e = ["webkitTransitionEnd", "transitionend"], i = 0; i < e.length; i += 1) {
              s.trigger(e[i]);
            }
          }
        });
      }
    }
  },
      ge = {
    setTranslate: function setTranslate() {
      var e,
          t = this.$el,
          i = this.$wrapperEl,
          s = this.slides,
          a = this.width,
          n = this.height,
          o = this.rtlTranslate,
          l = this.size,
          h = this.params.cubeEffect,
          d = this.isHorizontal(),
          c = this.virtual && this.params.virtual.enabled,
          p = 0;
      h.shadow && (d ? (0 === (e = i.find(".swiper-cube-shadow")).length && (e = r('<div class="swiper-cube-shadow"></div>'), i.append(e)), e.css({
        height: a + "px"
      })) : 0 === (e = t.find(".swiper-cube-shadow")).length && (e = r('<div class="swiper-cube-shadow"></div>'), t.append(e)));

      for (var u = 0; u < s.length; u += 1) {
        var m = s.eq(u),
            f = u;
        c && (f = parseInt(m.attr("data-swiper-slide-index"), 10));
        var v = 90 * f,
            g = Math.floor(v / 360);
        o && (v = -v, g = Math.floor(-v / 360));
        var y = Math.max(Math.min(m[0].progress, 1), -1),
            w = 0,
            b = 0,
            x = 0;
        f % 4 == 0 ? (w = 4 * -g * l, x = 0) : (f - 1) % 4 == 0 ? (w = 0, x = 4 * -g * l) : (f - 2) % 4 == 0 ? (w = l + 4 * g * l, x = l) : (f - 3) % 4 == 0 && (w = -l, x = 3 * l + 4 * l * g), o && (w = -w), d || (b = w, w = 0);
        var E = "rotateX(" + (d ? 0 : -v) + "deg) rotateY(" + (d ? v : 0) + "deg) translate3d(" + w + "px, " + b + "px, " + x + "px)";

        if (y <= 1 && y > -1 && (p = 90 * f + 90 * y, o && (p = 90 * -f - 90 * y)), m.transform(E), h.slideShadows) {
          var C = d ? m.find(".swiper-slide-shadow-left") : m.find(".swiper-slide-shadow-top"),
              T = d ? m.find(".swiper-slide-shadow-right") : m.find(".swiper-slide-shadow-bottom");
          0 === C.length && (C = r('<div class="swiper-slide-shadow-' + (d ? "left" : "top") + '"></div>'), m.append(C)), 0 === T.length && (T = r('<div class="swiper-slide-shadow-' + (d ? "right" : "bottom") + '"></div>'), m.append(T)), C.length && (C[0].style.opacity = Math.max(-y, 0)), T.length && (T[0].style.opacity = Math.max(y, 0));
        }
      }

      if (i.css({
        "-webkit-transform-origin": "50% 50% -" + l / 2 + "px",
        "-moz-transform-origin": "50% 50% -" + l / 2 + "px",
        "-ms-transform-origin": "50% 50% -" + l / 2 + "px",
        "transform-origin": "50% 50% -" + l / 2 + "px"
      }), h.shadow) if (d) e.transform("translate3d(0px, " + (a / 2 + h.shadowOffset) + "px, " + -a / 2 + "px) rotateX(90deg) rotateZ(0deg) scale(" + h.shadowScale + ")");else {
        var S = Math.abs(p) - 90 * Math.floor(Math.abs(p) / 90),
            M = 1.5 - (Math.sin(2 * S * Math.PI / 360) / 2 + Math.cos(2 * S * Math.PI / 360) / 2),
            _ = h.shadowScale,
            z = h.shadowScale / M,
            $ = h.shadowOffset;
        e.transform("scale3d(" + _ + ", 1, " + z + ") translate3d(0px, " + (n / 2 + $) + "px, " + -n / 2 / z + "px) rotateX(-90deg)");
      }
      var P = U.isSafari || U.isWebView ? -l / 2 : 0;
      i.transform("translate3d(0px,0," + P + "px) rotateX(" + (this.isHorizontal() ? 0 : p) + "deg) rotateY(" + (this.isHorizontal() ? -p : 0) + "deg)");
    },
    setTransition: function setTransition(e) {
      var t = this.$el;
      this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), this.params.cubeEffect.shadow && !this.isHorizontal() && t.find(".swiper-cube-shadow").transition(e);
    }
  },
      ye = {
    setTranslate: function setTranslate() {
      for (var e = this.slides, t = this.rtlTranslate, i = 0; i < e.length; i += 1) {
        var s = e.eq(i),
            a = s[0].progress;
        this.params.flipEffect.limitRotation && (a = Math.max(Math.min(s[0].progress, 1), -1));
        var n = -180 * a,
            o = 0,
            l = -s[0].swiperSlideOffset,
            h = 0;

        if (this.isHorizontal() ? t && (n = -n) : (h = l, l = 0, o = -n, n = 0), s[0].style.zIndex = -Math.abs(Math.round(a)) + e.length, this.params.flipEffect.slideShadows) {
          var d = this.isHorizontal() ? s.find(".swiper-slide-shadow-left") : s.find(".swiper-slide-shadow-top"),
              c = this.isHorizontal() ? s.find(".swiper-slide-shadow-right") : s.find(".swiper-slide-shadow-bottom");
          0 === d.length && (d = r('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "left" : "top") + '"></div>'), s.append(d)), 0 === c.length && (c = r('<div class="swiper-slide-shadow-' + (this.isHorizontal() ? "right" : "bottom") + '"></div>'), s.append(c)), d.length && (d[0].style.opacity = Math.max(-a, 0)), c.length && (c[0].style.opacity = Math.max(a, 0));
        }

        s.transform("translate3d(" + l + "px, " + h + "px, 0px) rotateX(" + o + "deg) rotateY(" + n + "deg)");
      }
    },
    setTransition: function setTransition(e) {
      var t = this,
          i = t.slides,
          s = t.activeIndex,
          a = t.$wrapperEl;

      if (i.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e), t.params.virtualTranslate && 0 !== e) {
        var n = !1;
        i.eq(s).transitionEnd(function () {
          if (!n && t && !t.destroyed) {
            n = !0, t.animating = !1;

            for (var e = ["webkitTransitionEnd", "transitionend"], i = 0; i < e.length; i += 1) {
              a.trigger(e[i]);
            }
          }
        });
      }
    }
  },
      we = {
    setTranslate: function setTranslate() {
      for (var e = this.width, t = this.height, i = this.slides, s = this.$wrapperEl, a = this.slidesSizesGrid, n = this.params.coverflowEffect, o = this.isHorizontal(), l = this.translate, h = o ? e / 2 - l : t / 2 - l, c = o ? n.rotate : -n.rotate, p = n.depth, u = 0, m = i.length; u < m; u += 1) {
        var f = i.eq(u),
            v = a[u],
            g = (h - f[0].swiperSlideOffset - v / 2) / v * n.modifier,
            y = o ? c * g : 0,
            w = o ? 0 : c * g,
            b = -p * Math.abs(g),
            x = n.stretch;
        "string" == typeof x && -1 !== x.indexOf("%") && (x = parseFloat(n.stretch) / 100 * v);
        var E = o ? 0 : x * g,
            C = o ? x * g : 0,
            T = 1 - (1 - n.scale) * Math.abs(g);
        Math.abs(C) < .001 && (C = 0), Math.abs(E) < .001 && (E = 0), Math.abs(b) < .001 && (b = 0), Math.abs(y) < .001 && (y = 0), Math.abs(w) < .001 && (w = 0), Math.abs(T) < .001 && (T = 0);
        var S = "translate3d(" + C + "px," + E + "px," + b + "px)  rotateX(" + w + "deg) rotateY(" + y + "deg) scale(" + T + ")";

        if (f.transform(S), f[0].style.zIndex = 1 - Math.abs(Math.round(g)), n.slideShadows) {
          var M = o ? f.find(".swiper-slide-shadow-left") : f.find(".swiper-slide-shadow-top"),
              _ = o ? f.find(".swiper-slide-shadow-right") : f.find(".swiper-slide-shadow-bottom");

          0 === M.length && (M = r('<div class="swiper-slide-shadow-' + (o ? "left" : "top") + '"></div>'), f.append(M)), 0 === _.length && (_ = r('<div class="swiper-slide-shadow-' + (o ? "right" : "bottom") + '"></div>'), f.append(_)), M.length && (M[0].style.opacity = g > 0 ? g : 0), _.length && (_[0].style.opacity = -g > 0 ? -g : 0);
        }
      }

      (d.pointerEvents || d.prefixedPointerEvents) && (s[0].style.perspectiveOrigin = h + "px 50%");
    },
    setTransition: function setTransition(e) {
      this.slides.transition(e).find(".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left").transition(e);
    }
  },
      be = {
    init: function init() {
      var e = this.params.thumbs,
          t = this.constructor;
      e.swiper instanceof t ? (this.thumbs.swiper = e.swiper, h.extend(this.thumbs.swiper.originalParams, {
        watchSlidesProgress: !0,
        slideToClickedSlide: !1
      }), h.extend(this.thumbs.swiper.params, {
        watchSlidesProgress: !0,
        slideToClickedSlide: !1
      })) : h.isObject(e.swiper) && (this.thumbs.swiper = new t(h.extend({}, e.swiper, {
        watchSlidesVisibility: !0,
        watchSlidesProgress: !0,
        slideToClickedSlide: !1
      })), this.thumbs.swiperCreated = !0), this.thumbs.swiper.$el.addClass(this.params.thumbs.thumbsContainerClass), this.thumbs.swiper.on("tap", this.thumbs.onThumbClick);
    },
    onThumbClick: function onThumbClick() {
      var e = this.thumbs.swiper;

      if (e) {
        var t = e.clickedIndex,
            i = e.clickedSlide;

        if (!(i && r(i).hasClass(this.params.thumbs.slideThumbActiveClass) || null == t)) {
          var s;

          if (s = e.params.loop ? parseInt(r(e.clickedSlide).attr("data-swiper-slide-index"), 10) : t, this.params.loop) {
            var a = this.activeIndex;
            this.slides.eq(a).hasClass(this.params.slideDuplicateClass) && (this.loopFix(), this._clientLeft = this.$wrapperEl[0].clientLeft, a = this.activeIndex);
            var n = this.slides.eq(a).prevAll('[data-swiper-slide-index="' + s + '"]').eq(0).index(),
                o = this.slides.eq(a).nextAll('[data-swiper-slide-index="' + s + '"]').eq(0).index();
            s = void 0 === n ? o : void 0 === o ? n : o - a < a - n ? o : n;
          }

          this.slideTo(s);
        }
      }
    },
    update: function update(e) {
      var t = this.thumbs.swiper;

      if (t) {
        var i = "auto" === t.params.slidesPerView ? t.slidesPerViewDynamic() : t.params.slidesPerView,
            s = this.params.thumbs.autoScrollOffset,
            a = s && !t.params.loop;

        if (this.realIndex !== t.realIndex || a) {
          var n,
              r,
              o = t.activeIndex;

          if (t.params.loop) {
            t.slides.eq(o).hasClass(t.params.slideDuplicateClass) && (t.loopFix(), t._clientLeft = t.$wrapperEl[0].clientLeft, o = t.activeIndex);
            var l = t.slides.eq(o).prevAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index(),
                h = t.slides.eq(o).nextAll('[data-swiper-slide-index="' + this.realIndex + '"]').eq(0).index();
            n = void 0 === l ? h : void 0 === h ? l : h - o == o - l ? o : h - o < o - l ? h : l, r = this.activeIndex > this.previousIndex ? "next" : "prev";
          } else r = (n = this.realIndex) > this.previousIndex ? "next" : "prev";

          a && (n += "next" === r ? s : -1 * s), t.visibleSlidesIndexes && t.visibleSlidesIndexes.indexOf(n) < 0 && (t.params.centeredSlides ? n = n > o ? n - Math.floor(i / 2) + 1 : n + Math.floor(i / 2) - 1 : n > o && (n = n - i + 1), t.slideTo(n, e ? 0 : void 0));
        }

        var d = 1,
            c = this.params.thumbs.slideThumbActiveClass;
        if (this.params.slidesPerView > 1 && !this.params.centeredSlides && (d = this.params.slidesPerView), this.params.thumbs.multipleActiveThumbs || (d = 1), d = Math.floor(d), t.slides.removeClass(c), t.params.loop || t.params.virtual && t.params.virtual.enabled) for (var p = 0; p < d; p += 1) {
          t.$wrapperEl.children('[data-swiper-slide-index="' + (this.realIndex + p) + '"]').addClass(c);
        } else for (var u = 0; u < d; u += 1) {
          t.slides.eq(this.realIndex + u).addClass(c);
        }
      }
    }
  },
      xe = [F, X, K, Q, J, te, se, {
    name: "mousewheel",
    params: {
      mousewheel: {
        enabled: !1,
        releaseOnEdges: !1,
        invert: !1,
        forceToAxis: !1,
        sensitivity: 1,
        eventsTarged: "container"
      }
    },
    create: function create() {
      h.extend(this, {
        mousewheel: {
          enabled: !1,
          enable: ae.enable.bind(this),
          disable: ae.disable.bind(this),
          handle: ae.handle.bind(this),
          handleMouseEnter: ae.handleMouseEnter.bind(this),
          handleMouseLeave: ae.handleMouseLeave.bind(this),
          animateSlider: ae.animateSlider.bind(this),
          releaseScroll: ae.releaseScroll.bind(this),
          lastScrollTime: h.now(),
          lastEventBeforeSnap: void 0,
          recentWheelEvents: []
        }
      });
    },
    on: {
      init: function init() {
        !this.params.mousewheel.enabled && this.params.cssMode && this.mousewheel.disable(), this.params.mousewheel.enabled && this.mousewheel.enable();
      },
      destroy: function destroy() {
        this.params.cssMode && this.mousewheel.enable(), this.mousewheel.enabled && this.mousewheel.disable();
      }
    }
  }, {
    name: "navigation",
    params: {
      navigation: {
        nextEl: null,
        prevEl: null,
        hideOnClick: !1,
        disabledClass: "swiper-button-disabled",
        hiddenClass: "swiper-button-hidden",
        lockClass: "swiper-button-lock"
      }
    },
    create: function create() {
      h.extend(this, {
        navigation: {
          init: ne.init.bind(this),
          update: ne.update.bind(this),
          destroy: ne.destroy.bind(this),
          onNextClick: ne.onNextClick.bind(this),
          onPrevClick: ne.onPrevClick.bind(this)
        }
      });
    },
    on: {
      init: function init() {
        this.navigation.init(), this.navigation.update();
      },
      toEdge: function toEdge() {
        this.navigation.update();
      },
      fromEdge: function fromEdge() {
        this.navigation.update();
      },
      destroy: function destroy() {
        this.navigation.destroy();
      },
      click: function click(e) {
        var t,
            i = this.navigation,
            s = i.$nextEl,
            a = i.$prevEl;
        !this.params.navigation.hideOnClick || r(e.target).is(a) || r(e.target).is(s) || (s ? t = s.hasClass(this.params.navigation.hiddenClass) : a && (t = a.hasClass(this.params.navigation.hiddenClass)), !0 === t ? this.emit("navigationShow", this) : this.emit("navigationHide", this), s && s.toggleClass(this.params.navigation.hiddenClass), a && a.toggleClass(this.params.navigation.hiddenClass));
      }
    }
  }, {
    name: "pagination",
    params: {
      pagination: {
        el: null,
        bulletElement: "span",
        clickable: !1,
        hideOnClick: !1,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: !1,
        type: "bullets",
        dynamicBullets: !1,
        dynamicMainBullets: 1,
        formatFractionCurrent: function formatFractionCurrent(e) {
          return e;
        },
        formatFractionTotal: function formatFractionTotal(e) {
          return e;
        },
        bulletClass: "swiper-pagination-bullet",
        bulletActiveClass: "swiper-pagination-bullet-active",
        modifierClass: "swiper-pagination-",
        currentClass: "swiper-pagination-current",
        totalClass: "swiper-pagination-total",
        hiddenClass: "swiper-pagination-hidden",
        progressbarFillClass: "swiper-pagination-progressbar-fill",
        progressbarOppositeClass: "swiper-pagination-progressbar-opposite",
        clickableClass: "swiper-pagination-clickable",
        lockClass: "swiper-pagination-lock"
      }
    },
    create: function create() {
      h.extend(this, {
        pagination: {
          init: re.init.bind(this),
          render: re.render.bind(this),
          update: re.update.bind(this),
          destroy: re.destroy.bind(this),
          dynamicBulletIndex: 0
        }
      });
    },
    on: {
      init: function init() {
        this.pagination.init(), this.pagination.render(), this.pagination.update();
      },
      activeIndexChange: function activeIndexChange() {
        (this.params.loop || void 0 === this.snapIndex) && this.pagination.update();
      },
      snapIndexChange: function snapIndexChange() {
        this.params.loop || this.pagination.update();
      },
      slidesLengthChange: function slidesLengthChange() {
        this.params.loop && (this.pagination.render(), this.pagination.update());
      },
      snapGridLengthChange: function snapGridLengthChange() {
        this.params.loop || (this.pagination.render(), this.pagination.update());
      },
      destroy: function destroy() {
        this.pagination.destroy();
      },
      click: function click(e) {
        this.params.pagination.el && this.params.pagination.hideOnClick && this.pagination.$el.length > 0 && !r(e.target).hasClass(this.params.pagination.bulletClass) && (!0 === this.pagination.$el.hasClass(this.params.pagination.hiddenClass) ? this.emit("paginationShow", this) : this.emit("paginationHide", this), this.pagination.$el.toggleClass(this.params.pagination.hiddenClass));
      }
    }
  }, {
    name: "scrollbar",
    params: {
      scrollbar: {
        el: null,
        dragSize: "auto",
        hide: !1,
        draggable: !1,
        snapOnRelease: !0,
        lockClass: "swiper-scrollbar-lock",
        dragClass: "swiper-scrollbar-drag"
      }
    },
    create: function create() {
      h.extend(this, {
        scrollbar: {
          init: oe.init.bind(this),
          destroy: oe.destroy.bind(this),
          updateSize: oe.updateSize.bind(this),
          setTranslate: oe.setTranslate.bind(this),
          setTransition: oe.setTransition.bind(this),
          enableDraggable: oe.enableDraggable.bind(this),
          disableDraggable: oe.disableDraggable.bind(this),
          setDragPosition: oe.setDragPosition.bind(this),
          getPointerPosition: oe.getPointerPosition.bind(this),
          onDragStart: oe.onDragStart.bind(this),
          onDragMove: oe.onDragMove.bind(this),
          onDragEnd: oe.onDragEnd.bind(this),
          isTouched: !1,
          timeout: null,
          dragTimeout: null
        }
      });
    },
    on: {
      init: function init() {
        this.scrollbar.init(), this.scrollbar.updateSize(), this.scrollbar.setTranslate();
      },
      update: function update() {
        this.scrollbar.updateSize();
      },
      resize: function resize() {
        this.scrollbar.updateSize();
      },
      observerUpdate: function observerUpdate() {
        this.scrollbar.updateSize();
      },
      setTranslate: function setTranslate() {
        this.scrollbar.setTranslate();
      },
      setTransition: function setTransition(e) {
        this.scrollbar.setTransition(e);
      },
      destroy: function destroy() {
        this.scrollbar.destroy();
      }
    }
  }, {
    name: "parallax",
    params: {
      parallax: {
        enabled: !1
      }
    },
    create: function create() {
      h.extend(this, {
        parallax: {
          setTransform: le.setTransform.bind(this),
          setTranslate: le.setTranslate.bind(this),
          setTransition: le.setTransition.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        this.params.parallax.enabled && (this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0);
      },
      init: function init() {
        this.params.parallax.enabled && this.parallax.setTranslate();
      },
      setTranslate: function setTranslate() {
        this.params.parallax.enabled && this.parallax.setTranslate();
      },
      setTransition: function setTransition(e) {
        this.params.parallax.enabled && this.parallax.setTransition(e);
      }
    }
  }, {
    name: "zoom",
    params: {
      zoom: {
        enabled: !1,
        maxRatio: 3,
        minRatio: 1,
        toggle: !0,
        containerClass: "swiper-zoom-container",
        zoomedSlideClass: "swiper-slide-zoomed"
      }
    },
    create: function create() {
      var e = this,
          t = {
        enabled: !1,
        scale: 1,
        currentScale: 1,
        isScaling: !1,
        gesture: {
          $slideEl: void 0,
          slideWidth: void 0,
          slideHeight: void 0,
          $imageEl: void 0,
          $imageWrapEl: void 0,
          maxRatio: 3
        },
        image: {
          isTouched: void 0,
          isMoved: void 0,
          currentX: void 0,
          currentY: void 0,
          minX: void 0,
          minY: void 0,
          maxX: void 0,
          maxY: void 0,
          width: void 0,
          height: void 0,
          startX: void 0,
          startY: void 0,
          touchesStart: {},
          touchesCurrent: {}
        },
        velocity: {
          x: void 0,
          y: void 0,
          prevPositionX: void 0,
          prevPositionY: void 0,
          prevTime: void 0
        }
      };
      "onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out".split(" ").forEach(function (i) {
        t[i] = he[i].bind(e);
      }), h.extend(e, {
        zoom: t
      });
      var i = 1;
      Object.defineProperty(e.zoom, "scale", {
        get: function get() {
          return i;
        },
        set: function set(t) {
          if (i !== t) {
            var s = e.zoom.gesture.$imageEl ? e.zoom.gesture.$imageEl[0] : void 0,
                a = e.zoom.gesture.$slideEl ? e.zoom.gesture.$slideEl[0] : void 0;
            e.emit("zoomChange", t, s, a);
          }

          i = t;
        }
      });
    },
    on: {
      init: function init() {
        this.params.zoom.enabled && this.zoom.enable();
      },
      destroy: function destroy() {
        this.zoom.disable();
      },
      touchStart: function touchStart(e) {
        this.zoom.enabled && this.zoom.onTouchStart(e);
      },
      touchEnd: function touchEnd(e) {
        this.zoom.enabled && this.zoom.onTouchEnd(e);
      },
      doubleTap: function doubleTap(e) {
        this.params.zoom.enabled && this.zoom.enabled && this.params.zoom.toggle && this.zoom.toggle(e);
      },
      transitionEnd: function transitionEnd() {
        this.zoom.enabled && this.params.zoom.enabled && this.zoom.onTransitionEnd();
      },
      slideChange: function slideChange() {
        this.zoom.enabled && this.params.zoom.enabled && this.params.cssMode && this.zoom.onTransitionEnd();
      }
    }
  }, {
    name: "lazy",
    params: {
      lazy: {
        enabled: !1,
        loadPrevNext: !1,
        loadPrevNextAmount: 1,
        loadOnTransitionStart: !1,
        elementClass: "swiper-lazy",
        loadingClass: "swiper-lazy-loading",
        loadedClass: "swiper-lazy-loaded",
        preloaderClass: "swiper-lazy-preloader"
      }
    },
    create: function create() {
      h.extend(this, {
        lazy: {
          initialImageLoaded: !1,
          load: de.load.bind(this),
          loadInSlide: de.loadInSlide.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        this.params.lazy.enabled && this.params.preloadImages && (this.params.preloadImages = !1);
      },
      init: function init() {
        this.params.lazy.enabled && !this.params.loop && 0 === this.params.initialSlide && this.lazy.load();
      },
      scroll: function scroll() {
        this.params.freeMode && !this.params.freeModeSticky && this.lazy.load();
      },
      resize: function resize() {
        this.params.lazy.enabled && this.lazy.load();
      },
      scrollbarDragMove: function scrollbarDragMove() {
        this.params.lazy.enabled && this.lazy.load();
      },
      transitionStart: function transitionStart() {
        this.params.lazy.enabled && (this.params.lazy.loadOnTransitionStart || !this.params.lazy.loadOnTransitionStart && !this.lazy.initialImageLoaded) && this.lazy.load();
      },
      transitionEnd: function transitionEnd() {
        this.params.lazy.enabled && !this.params.lazy.loadOnTransitionStart && this.lazy.load();
      },
      slideChange: function slideChange() {
        this.params.lazy.enabled && this.params.cssMode && this.lazy.load();
      }
    }
  }, {
    name: "controller",
    params: {
      controller: {
        control: void 0,
        inverse: !1,
        by: "slide"
      }
    },
    create: function create() {
      h.extend(this, {
        controller: {
          control: this.params.controller.control,
          getInterpolateFunction: ce.getInterpolateFunction.bind(this),
          setTranslate: ce.setTranslate.bind(this),
          setTransition: ce.setTransition.bind(this)
        }
      });
    },
    on: {
      update: function update() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      },
      resize: function resize() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      },
      observerUpdate: function observerUpdate() {
        this.controller.control && this.controller.spline && (this.controller.spline = void 0, delete this.controller.spline);
      },
      setTranslate: function setTranslate(e, t) {
        this.controller.control && this.controller.setTranslate(e, t);
      },
      setTransition: function setTransition(e, t) {
        this.controller.control && this.controller.setTransition(e, t);
      }
    }
  }, {
    name: "a11y",
    params: {
      a11y: {
        enabled: !0,
        notificationClass: "swiper-notification",
        prevSlideMessage: "Previous slide",
        nextSlideMessage: "Next slide",
        firstSlideMessage: "This is the first slide",
        lastSlideMessage: "This is the last slide",
        paginationBulletMessage: "Go to slide {{index}}"
      }
    },
    create: function create() {
      var e = this;
      h.extend(e, {
        a11y: {
          liveRegion: r('<span class="' + e.params.a11y.notificationClass + '" aria-live="assertive" aria-atomic="true"></span>')
        }
      }), Object.keys(pe).forEach(function (t) {
        e.a11y[t] = pe[t].bind(e);
      });
    },
    on: {
      init: function init() {
        this.params.a11y.enabled && (this.a11y.init(), this.a11y.updateNavigation());
      },
      toEdge: function toEdge() {
        this.params.a11y.enabled && this.a11y.updateNavigation();
      },
      fromEdge: function fromEdge() {
        this.params.a11y.enabled && this.a11y.updateNavigation();
      },
      paginationUpdate: function paginationUpdate() {
        this.params.a11y.enabled && this.a11y.updatePagination();
      },
      destroy: function destroy() {
        this.params.a11y.enabled && this.a11y.destroy();
      }
    }
  }, {
    name: "history",
    params: {
      history: {
        enabled: !1,
        replaceState: !1,
        key: "slides"
      }
    },
    create: function create() {
      h.extend(this, {
        history: {
          init: ue.init.bind(this),
          setHistory: ue.setHistory.bind(this),
          setHistoryPopState: ue.setHistoryPopState.bind(this),
          scrollToSlide: ue.scrollToSlide.bind(this),
          destroy: ue.destroy.bind(this)
        }
      });
    },
    on: {
      init: function init() {
        this.params.history.enabled && this.history.init();
      },
      destroy: function destroy() {
        this.params.history.enabled && this.history.destroy();
      },
      transitionEnd: function transitionEnd() {
        this.history.initialized && this.history.setHistory(this.params.history.key, this.activeIndex);
      },
      slideChange: function slideChange() {
        this.history.initialized && this.params.cssMode && this.history.setHistory(this.params.history.key, this.activeIndex);
      }
    }
  }, {
    name: "hash-navigation",
    params: {
      hashNavigation: {
        enabled: !1,
        replaceState: !1,
        watchState: !1
      }
    },
    create: function create() {
      h.extend(this, {
        hashNavigation: {
          initialized: !1,
          init: me.init.bind(this),
          destroy: me.destroy.bind(this),
          setHash: me.setHash.bind(this),
          onHashCange: me.onHashCange.bind(this)
        }
      });
    },
    on: {
      init: function init() {
        this.params.hashNavigation.enabled && this.hashNavigation.init();
      },
      destroy: function destroy() {
        this.params.hashNavigation.enabled && this.hashNavigation.destroy();
      },
      transitionEnd: function transitionEnd() {
        this.hashNavigation.initialized && this.hashNavigation.setHash();
      },
      slideChange: function slideChange() {
        this.hashNavigation.initialized && this.params.cssMode && this.hashNavigation.setHash();
      }
    }
  }, {
    name: "autoplay",
    params: {
      autoplay: {
        enabled: !1,
        delay: 3e3,
        waitForTransition: !0,
        disableOnInteraction: !0,
        stopOnLastSlide: !1,
        reverseDirection: !1
      }
    },
    create: function create() {
      var e = this;
      h.extend(e, {
        autoplay: {
          running: !1,
          paused: !1,
          run: fe.run.bind(e),
          start: fe.start.bind(e),
          stop: fe.stop.bind(e),
          pause: fe.pause.bind(e),
          onVisibilityChange: function onVisibilityChange() {
            "hidden" === document.visibilityState && e.autoplay.running && e.autoplay.pause(), "visible" === document.visibilityState && e.autoplay.paused && (e.autoplay.run(), e.autoplay.paused = !1);
          },
          onTransitionEnd: function onTransitionEnd(t) {
            e && !e.destroyed && e.$wrapperEl && t.target === this && (e.$wrapperEl[0].removeEventListener("transitionend", e.autoplay.onTransitionEnd), e.$wrapperEl[0].removeEventListener("webkitTransitionEnd", e.autoplay.onTransitionEnd), e.autoplay.paused = !1, e.autoplay.running ? e.autoplay.run() : e.autoplay.stop());
          }
        }
      });
    },
    on: {
      init: function init() {
        this.params.autoplay.enabled && (this.autoplay.start(), document.addEventListener("visibilitychange", this.autoplay.onVisibilityChange));
      },
      beforeTransitionStart: function beforeTransitionStart(e, t) {
        this.autoplay.running && (t || !this.params.autoplay.disableOnInteraction ? this.autoplay.pause(e) : this.autoplay.stop());
      },
      sliderFirstMove: function sliderFirstMove() {
        this.autoplay.running && (this.params.autoplay.disableOnInteraction ? this.autoplay.stop() : this.autoplay.pause());
      },
      touchEnd: function touchEnd() {
        this.params.cssMode && this.autoplay.paused && !this.params.autoplay.disableOnInteraction && this.autoplay.run();
      },
      destroy: function destroy() {
        this.autoplay.running && this.autoplay.stop(), document.removeEventListener("visibilitychange", this.autoplay.onVisibilityChange);
      }
    }
  }, {
    name: "effect-fade",
    params: {
      fadeEffect: {
        crossFade: !1
      }
    },
    create: function create() {
      h.extend(this, {
        fadeEffect: {
          setTranslate: ve.setTranslate.bind(this),
          setTransition: ve.setTransition.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        if ("fade" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "fade");
          var e = {
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            spaceBetween: 0,
            virtualTranslate: !0
          };
          h.extend(this.params, e), h.extend(this.originalParams, e);
        }
      },
      setTranslate: function setTranslate() {
        "fade" === this.params.effect && this.fadeEffect.setTranslate();
      },
      setTransition: function setTransition(e) {
        "fade" === this.params.effect && this.fadeEffect.setTransition(e);
      }
    }
  }, {
    name: "effect-cube",
    params: {
      cubeEffect: {
        slideShadows: !0,
        shadow: !0,
        shadowOffset: 20,
        shadowScale: .94
      }
    },
    create: function create() {
      h.extend(this, {
        cubeEffect: {
          setTranslate: ge.setTranslate.bind(this),
          setTransition: ge.setTransition.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        if ("cube" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "cube"), this.classNames.push(this.params.containerModifierClass + "3d");
          var e = {
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            resistanceRatio: 0,
            spaceBetween: 0,
            centeredSlides: !1,
            virtualTranslate: !0
          };
          h.extend(this.params, e), h.extend(this.originalParams, e);
        }
      },
      setTranslate: function setTranslate() {
        "cube" === this.params.effect && this.cubeEffect.setTranslate();
      },
      setTransition: function setTransition(e) {
        "cube" === this.params.effect && this.cubeEffect.setTransition(e);
      }
    }
  }, {
    name: "effect-flip",
    params: {
      flipEffect: {
        slideShadows: !0,
        limitRotation: !0
      }
    },
    create: function create() {
      h.extend(this, {
        flipEffect: {
          setTranslate: ye.setTranslate.bind(this),
          setTransition: ye.setTransition.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        if ("flip" === this.params.effect) {
          this.classNames.push(this.params.containerModifierClass + "flip"), this.classNames.push(this.params.containerModifierClass + "3d");
          var e = {
            slidesPerView: 1,
            slidesPerColumn: 1,
            slidesPerGroup: 1,
            watchSlidesProgress: !0,
            spaceBetween: 0,
            virtualTranslate: !0
          };
          h.extend(this.params, e), h.extend(this.originalParams, e);
        }
      },
      setTranslate: function setTranslate() {
        "flip" === this.params.effect && this.flipEffect.setTranslate();
      },
      setTransition: function setTransition(e) {
        "flip" === this.params.effect && this.flipEffect.setTransition(e);
      }
    }
  }, {
    name: "effect-coverflow",
    params: {
      coverflowEffect: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        scale: 1,
        modifier: 1,
        slideShadows: !0
      }
    },
    create: function create() {
      h.extend(this, {
        coverflowEffect: {
          setTranslate: we.setTranslate.bind(this),
          setTransition: we.setTransition.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        "coverflow" === this.params.effect && (this.classNames.push(this.params.containerModifierClass + "coverflow"), this.classNames.push(this.params.containerModifierClass + "3d"), this.params.watchSlidesProgress = !0, this.originalParams.watchSlidesProgress = !0);
      },
      setTranslate: function setTranslate() {
        "coverflow" === this.params.effect && this.coverflowEffect.setTranslate();
      },
      setTransition: function setTransition(e) {
        "coverflow" === this.params.effect && this.coverflowEffect.setTransition(e);
      }
    }
  }, {
    name: "thumbs",
    params: {
      thumbs: {
        swiper: null,
        multipleActiveThumbs: !0,
        autoScrollOffset: 0,
        slideThumbActiveClass: "swiper-slide-thumb-active",
        thumbsContainerClass: "swiper-container-thumbs"
      }
    },
    create: function create() {
      h.extend(this, {
        thumbs: {
          swiper: null,
          init: be.init.bind(this),
          update: be.update.bind(this),
          onThumbClick: be.onThumbClick.bind(this)
        }
      });
    },
    on: {
      beforeInit: function beforeInit() {
        var e = this.params.thumbs;
        e && e.swiper && (this.thumbs.init(), this.thumbs.update(!0));
      },
      slideChange: function slideChange() {
        this.thumbs.swiper && this.thumbs.update();
      },
      update: function update() {
        this.thumbs.swiper && this.thumbs.update();
      },
      resize: function resize() {
        this.thumbs.swiper && this.thumbs.update();
      },
      observerUpdate: function observerUpdate() {
        this.thumbs.swiper && this.thumbs.update();
      },
      setTransition: function setTransition(e) {
        var t = this.thumbs.swiper;
        t && t.setTransition(e);
      },
      beforeDestroy: function beforeDestroy() {
        var e = this.thumbs.swiper;
        e && this.thumbs.swiperCreated && e && e.destroy();
      }
    }
  }];

  return void 0 === R.use && (R.use = R.Class.use, R.installModule = R.Class.installModule), R.use(xe), R;
}), function (e, t, i, s) {
  function a(t, i) {
    this.settings = null, this.options = e.extend({}, a.Defaults, i), this.$element = e(t), this._handlers = {}, this._plugins = {}, this._supress = {}, this._current = null, this._speed = null, this._coordinates = [], this._breakpoint = null, this._width = null, this._items = [], this._clones = [], this._mergers = [], this._widths = [], this._invalidated = {}, this._pipe = [], this._drag = {
      time: null,
      target: null,
      pointer: null,
      stage: {
        start: null,
        current: null
      },
      direction: null
    }, this._states = {
      current: {},
      tags: {
        initializing: ["busy"],
        animating: ["busy"],
        dragging: ["interacting"]
      }
    }, e.each(["onResize", "onThrottledResize"], e.proxy(function (t, i) {
      this._handlers[i] = e.proxy(this[i], this);
    }, this)), e.each(a.Plugins, e.proxy(function (e, t) {
      this._plugins[e.charAt(0).toLowerCase() + e.slice(1)] = new t(this);
    }, this)), e.each(a.Workers, e.proxy(function (t, i) {
      this._pipe.push({
        filter: i.filter,
        run: e.proxy(i.run, this)
      });
    }, this)), this.setup(), this.initialize();
  }

  a.Defaults = {
    items: 3,
    loop: !1,
    center: !1,
    rewind: !1,
    checkVisibility: !0,
    mouseDrag: !0,
    touchDrag: !0,
    pullDrag: !0,
    freeDrag: !1,
    margin: 0,
    stagePadding: 0,
    merge: !1,
    mergeFit: !0,
    autoWidth: !1,
    startPosition: 0,
    rtl: !1,
    smartSpeed: 250,
    fluidSpeed: !1,
    dragEndSpeed: !1,
    responsive: {},
    responsiveRefreshRate: 200,
    responsiveBaseElement: t,
    fallbackEasing: "swing",
    slideTransition: "",
    info: !1,
    nestedItemSelector: !1,
    itemElement: "div",
    stageElement: "div",
    refreshClass: "owl-refresh",
    loadedClass: "owl-loaded",
    loadingClass: "owl-loading",
    rtlClass: "owl-rtl",
    responsiveClass: "owl-responsive",
    dragClass: "owl-drag",
    itemClass: "owl-item",
    stageClass: "owl-stage",
    stageOuterClass: "owl-stage-outer",
    grabClass: "owl-grab"
  }, a.Width = {
    Default: "default",
    Inner: "inner",
    Outer: "outer"
  }, a.Type = {
    Event: "event",
    State: "state"
  }, a.Plugins = {}, a.Workers = [{
    filter: ["width", "settings"],
    run: function run() {
      this._width = this.$element.width();
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(e) {
      e.current = this._items && this._items[this.relative(this._current)];
    }
  }, {
    filter: ["items", "settings"],
    run: function run() {
      this.$stage.children(".cloned").remove();
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(e) {
      var t = this.settings.margin || "",
          i = !this.settings.autoWidth,
          s = this.settings.rtl,
          a = {
        width: "auto",
        "margin-left": s ? t : "",
        "margin-right": s ? "" : t
      };
      !i && this.$stage.children().css(a), e.css = a;
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(e) {
      var t = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,
          i = null,
          s = this._items.length,
          a = !this.settings.autoWidth,
          n = [];

      for (e.items = {
        merge: !1,
        width: t
      }; s--;) {
        i = this._mergers[s], i = this.settings.mergeFit && Math.min(i, this.settings.items) || i, e.items.merge = i > 1 || e.items.merge, n[s] = a ? t * i : this._items[s].width();
      }

      this._widths = n;
    }
  }, {
    filter: ["items", "settings"],
    run: function run() {
      var t = [],
          i = this._items,
          s = this.settings,
          a = Math.max(2 * s.items, 4),
          n = 2 * Math.ceil(i.length / 2),
          r = s.loop && i.length ? s.rewind ? a : Math.max(a, n) : 0,
          o = "",
          l = "";

      for (r /= 2; r > 0;) {
        t.push(this.normalize(t.length / 2, !0)), o += i[t[t.length - 1]][0].outerHTML, t.push(this.normalize(i.length - 1 - (t.length - 1) / 2, !0)), l = i[t[t.length - 1]][0].outerHTML + l, r -= 1;
      }

      this._clones = t, e(o).addClass("cloned").appendTo(this.$stage), e(l).addClass("cloned").prependTo(this.$stage);
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run() {
      for (var e = this.settings.rtl ? 1 : -1, t = this._clones.length + this._items.length, i = -1, s = 0, a = 0, n = []; ++i < t;) {
        s = n[i - 1] || 0, a = this._widths[this.relative(i)] + this.settings.margin, n.push(s + a * e);
      }

      this._coordinates = n;
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run() {
      var e = this.settings.stagePadding,
          t = this._coordinates,
          i = {
        width: Math.ceil(Math.abs(t[t.length - 1])) + 2 * e,
        "padding-left": e || "",
        "padding-right": e || ""
      };
      this.$stage.css(i);
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(e) {
      var t = this._coordinates.length,
          i = !this.settings.autoWidth,
          s = this.$stage.children();
      if (i && e.items.merge) for (; t--;) {
        e.css.width = this._widths[this.relative(t)], s.eq(t).css(e.css);
      } else i && (e.css.width = e.items.width, s.css(e.css));
    }
  }, {
    filter: ["items"],
    run: function run() {
      this._coordinates.length < 1 && this.$stage.removeAttr("style");
    }
  }, {
    filter: ["width", "items", "settings"],
    run: function run(e) {
      e.current = e.current ? this.$stage.children().index(e.current) : 0, e.current = Math.max(this.minimum(), Math.min(this.maximum(), e.current)), this.reset(e.current);
    }
  }, {
    filter: ["position"],
    run: function run() {
      this.animate(this.coordinates(this._current));
    }
  }, {
    filter: ["width", "position", "items", "settings"],
    run: function run() {
      var e,
          t,
          i,
          s,
          a = this.settings.rtl ? 1 : -1,
          n = 2 * this.settings.stagePadding,
          r = this.coordinates(this.current()) + n,
          o = r + this.width() * a,
          l = [];

      for (i = 0, s = this._coordinates.length; i < s; i++) {
        e = this._coordinates[i - 1] || 0, t = Math.abs(this._coordinates[i]) + n * a, (this.op(e, "<=", r) && this.op(e, ">", o) || this.op(t, "<", r) && this.op(t, ">", o)) && l.push(i);
      }

      this.$stage.children(".active").removeClass("active"), this.$stage.children(":eq(" + l.join("), :eq(") + ")").addClass("active"), this.$stage.children(".center").removeClass("center"), this.settings.center && this.$stage.children().eq(this.current()).addClass("center");
    }
  }], a.prototype.initializeStage = function () {
    this.$stage = this.$element.find("." + this.settings.stageClass), this.$stage.length || (this.$element.addClass(this.options.loadingClass), this.$stage = e("<" + this.settings.stageElement + ">", {
      "class": this.settings.stageClass
    }).wrap(e("<div/>", {
      "class": this.settings.stageOuterClass
    })), this.$element.append(this.$stage.parent()));
  }, a.prototype.initializeItems = function () {
    var t = this.$element.find(".owl-item");
    if (t.length) return this._items = t.get().map(function (t) {
      return e(t);
    }), this._mergers = this._items.map(function () {
      return 1;
    }), void this.refresh();
    this.replace(this.$element.children().not(this.$stage.parent())), this.isVisible() ? this.refresh() : this.invalidate("width"), this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass);
  }, a.prototype.initialize = function () {
    var e, t, i;
    (this.enter("initializing"), this.trigger("initialize"), this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl), this.settings.autoWidth && !this.is("pre-loading")) && (e = this.$element.find("img"), t = this.settings.nestedItemSelector ? "." + this.settings.nestedItemSelector : s, i = this.$element.children(t).width(), e.length && i <= 0 && this.preloadAutoWidthImages(e));
    this.initializeStage(), this.initializeItems(), this.registerEventHandlers(), this.leave("initializing"), this.trigger("initialized");
  }, a.prototype.isVisible = function () {
    return !this.settings.checkVisibility || this.$element.is(":visible");
  }, a.prototype.setup = function () {
    var t = this.viewport(),
        i = this.options.responsive,
        s = -1,
        a = null;
    i ? (e.each(i, function (e) {
      e <= t && e > s && (s = Number(e));
    }), "function" == typeof (a = e.extend({}, this.options, i[s])).stagePadding && (a.stagePadding = a.stagePadding()), delete a.responsive, a.responsiveClass && this.$element.attr("class", this.$element.attr("class").replace(new RegExp("(" + this.options.responsiveClass + "-)\\S+\\s", "g"), "$1" + s))) : a = e.extend({}, this.options), this.trigger("change", {
      property: {
        name: "settings",
        value: a
      }
    }), this._breakpoint = s, this.settings = a, this.invalidate("settings"), this.trigger("changed", {
      property: {
        name: "settings",
        value: this.settings
      }
    });
  }, a.prototype.optionsLogic = function () {
    this.settings.autoWidth && (this.settings.stagePadding = !1, this.settings.merge = !1);
  }, a.prototype.prepare = function (t) {
    var i = this.trigger("prepare", {
      content: t
    });
    return i.data || (i.data = e("<" + this.settings.itemElement + "/>").addClass(this.options.itemClass).append(t)), this.trigger("prepared", {
      content: i.data
    }), i.data;
  }, a.prototype.update = function () {
    for (var t = 0, i = this._pipe.length, s = e.proxy(function (e) {
      return this[e];
    }, this._invalidated), a = {}; t < i;) {
      (this._invalidated.all || e.grep(this._pipe[t].filter, s).length > 0) && this._pipe[t].run(a), t++;
    }

    this._invalidated = {}, !this.is("valid") && this.enter("valid");
  }, a.prototype.width = function (e) {
    switch (e = e || a.Width.Default) {
      case a.Width.Inner:
      case a.Width.Outer:
        return this._width;

      default:
        return this._width - 2 * this.settings.stagePadding + this.settings.margin;
    }
  }, a.prototype.refresh = function () {
    this.enter("refreshing"), this.trigger("refresh"), this.setup(), this.optionsLogic(), this.$element.addClass(this.options.refreshClass), this.update(), this.$element.removeClass(this.options.refreshClass), this.leave("refreshing"), this.trigger("refreshed");
  }, a.prototype.onThrottledResize = function () {
    t.clearTimeout(this.resizeTimer), this.resizeTimer = t.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);
  }, a.prototype.onResize = function () {
    return !!this._items.length && this._width !== this.$element.width() && !!this.isVisible() && (this.enter("resizing"), this.trigger("resize").isDefaultPrevented() ? (this.leave("resizing"), !1) : (this.invalidate("width"), this.refresh(), this.leave("resizing"), void this.trigger("resized")));
  }, a.prototype.registerEventHandlers = function () {
    e.support.transition && this.$stage.on(e.support.transition.end + ".owl.core", e.proxy(this.onTransitionEnd, this)), !1 !== this.settings.responsive && this.on(t, "resize", this._handlers.onThrottledResize), this.settings.mouseDrag && (this.$element.addClass(this.options.dragClass), this.$stage.on("mousedown.owl.core", e.proxy(this.onDragStart, this)), this.$stage.on("dragstart.owl.core selectstart.owl.core", function () {
      return !1;
    })), this.settings.touchDrag && (this.$stage.on("touchstart.owl.core", e.proxy(this.onDragStart, this)), this.$stage.on("touchcancel.owl.core", e.proxy(this.onDragEnd, this)));
  }, a.prototype.onDragStart = function (t) {
    var s = null;
    3 !== t.which && (e.support.transform ? s = {
      x: (s = this.$stage.css("transform").replace(/.*\(|\)| /g, "").split(","))[16 === s.length ? 12 : 4],
      y: s[16 === s.length ? 13 : 5]
    } : (s = this.$stage.position(), s = {
      x: this.settings.rtl ? s.left + this.$stage.width() - this.width() + this.settings.margin : s.left,
      y: s.top
    }), this.is("animating") && (e.support.transform ? this.animate(s.x) : this.$stage.stop(), this.invalidate("position")), this.$element.toggleClass(this.options.grabClass, "mousedown" === t.type), this.speed(0), this._drag.time = new Date().getTime(), this._drag.target = e(t.target), this._drag.stage.start = s, this._drag.stage.current = s, this._drag.pointer = this.pointer(t), e(i).on("mouseup.owl.core touchend.owl.core", e.proxy(this.onDragEnd, this)), e(i).one("mousemove.owl.core touchmove.owl.core", e.proxy(function (t) {
      var s = this.difference(this._drag.pointer, this.pointer(t));
      e(i).on("mousemove.owl.core touchmove.owl.core", e.proxy(this.onDragMove, this)), Math.abs(s.x) < Math.abs(s.y) && this.is("valid") || (t.preventDefault(), this.enter("dragging"), this.trigger("drag"));
    }, this)));
  }, a.prototype.onDragMove = function (e) {
    var t = null,
        i = null,
        s = null,
        a = this.difference(this._drag.pointer, this.pointer(e)),
        n = this.difference(this._drag.stage.start, a);
    this.is("dragging") && (e.preventDefault(), this.settings.loop ? (t = this.coordinates(this.minimum()), i = this.coordinates(this.maximum() + 1) - t, n.x = ((n.x - t) % i + i) % i + t) : (t = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum()), i = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum()), s = this.settings.pullDrag ? -1 * a.x / 5 : 0, n.x = Math.max(Math.min(n.x, t + s), i + s)), this._drag.stage.current = n, this.animate(n.x));
  }, a.prototype.onDragEnd = function (t) {
    var s = this.difference(this._drag.pointer, this.pointer(t)),
        a = this._drag.stage.current,
        n = s.x > 0 ^ this.settings.rtl ? "left" : "right";
    e(i).off(".owl.core"), this.$element.removeClass(this.options.grabClass), (0 !== s.x && this.is("dragging") || !this.is("valid")) && (this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed), this.current(this.closest(a.x, 0 !== s.x ? n : this._drag.direction)), this.invalidate("position"), this.update(), this._drag.direction = n, (Math.abs(s.x) > 3 || new Date().getTime() - this._drag.time > 300) && this._drag.target.one("click.owl.core", function () {
      return !1;
    })), this.is("dragging") && (this.leave("dragging"), this.trigger("dragged"));
  }, a.prototype.closest = function (t, i) {
    var a = -1,
        n = this.width(),
        r = this.coordinates();
    return this.settings.freeDrag || e.each(r, e.proxy(function (e, o) {
      return "left" === i && t > o - 30 && t < o + 30 ? a = e : "right" === i && t > o - n - 30 && t < o - n + 30 ? a = e + 1 : this.op(t, "<", o) && this.op(t, ">", r[e + 1] !== s ? r[e + 1] : o - n) && (a = "left" === i ? e + 1 : e), -1 === a;
    }, this)), this.settings.loop || (this.op(t, ">", r[this.minimum()]) ? a = t = this.minimum() : this.op(t, "<", r[this.maximum()]) && (a = t = this.maximum())), a;
  }, a.prototype.animate = function (t) {
    var i = this.speed() > 0;
    this.is("animating") && this.onTransitionEnd(), i && (this.enter("animating"), this.trigger("translate")), e.support.transform3d && e.support.transition ? this.$stage.css({
      transform: "translate3d(" + t + "px,0px,0px)",
      transition: this.speed() / 1e3 + "s" + (this.settings.slideTransition ? " " + this.settings.slideTransition : "")
    }) : i ? this.$stage.animate({
      left: t + "px"
    }, this.speed(), this.settings.fallbackEasing, e.proxy(this.onTransitionEnd, this)) : this.$stage.css({
      left: t + "px"
    });
  }, a.prototype.is = function (e) {
    return this._states.current[e] && this._states.current[e] > 0;
  }, a.prototype.current = function (e) {
    if (e === s) return this._current;
    if (0 === this._items.length) return s;

    if (e = this.normalize(e), this._current !== e) {
      var t = this.trigger("change", {
        property: {
          name: "position",
          value: e
        }
      });
      t.data !== s && (e = this.normalize(t.data)), this._current = e, this.invalidate("position"), this.trigger("changed", {
        property: {
          name: "position",
          value: this._current
        }
      });
    }

    return this._current;
  }, a.prototype.invalidate = function (t) {
    return "string" === e.type(t) && (this._invalidated[t] = !0, this.is("valid") && this.leave("valid")), e.map(this._invalidated, function (e, t) {
      return t;
    });
  }, a.prototype.reset = function (e) {
    (e = this.normalize(e)) !== s && (this._speed = 0, this._current = e, this.suppress(["translate", "translated"]), this.animate(this.coordinates(e)), this.release(["translate", "translated"]));
  }, a.prototype.normalize = function (e, t) {
    var i = this._items.length,
        a = t ? 0 : this._clones.length;
    return !this.isNumeric(e) || i < 1 ? e = s : (e < 0 || e >= i + a) && (e = ((e - a / 2) % i + i) % i + a / 2), e;
  }, a.prototype.relative = function (e) {
    return e -= this._clones.length / 2, this.normalize(e, !0);
  }, a.prototype.maximum = function (e) {
    var t,
        i,
        s,
        a = this.settings,
        n = this._coordinates.length;
    if (a.loop) n = this._clones.length / 2 + this._items.length - 1;else if (a.autoWidth || a.merge) {
      if (t = this._items.length) for (i = this._items[--t].width(), s = this.$element.width(); t-- && !((i += this._items[t].width() + this.settings.margin) > s);) {
        ;
      }
      n = t + 1;
    } else n = a.center ? this._items.length - 1 : this._items.length - a.items;
    return e && (n -= this._clones.length / 2), Math.max(n, 0);
  }, a.prototype.minimum = function (e) {
    return e ? 0 : this._clones.length / 2;
  }, a.prototype.items = function (e) {
    return e === s ? this._items.slice() : (e = this.normalize(e, !0), this._items[e]);
  }, a.prototype.mergers = function (e) {
    return e === s ? this._mergers.slice() : (e = this.normalize(e, !0), this._mergers[e]);
  }, a.prototype.clones = function (t) {
    var i = this._clones.length / 2,
        a = i + this._items.length,
        n = function n(e) {
      return e % 2 == 0 ? a + e / 2 : i - (e + 1) / 2;
    };

    return t === s ? e.map(this._clones, function (e, t) {
      return n(t);
    }) : e.map(this._clones, function (e, i) {
      return e === t ? n(i) : null;
    });
  }, a.prototype.speed = function (e) {
    return e !== s && (this._speed = e), this._speed;
  }, a.prototype.coordinates = function (t) {
    var i,
        a = 1,
        n = t - 1;
    return t === s ? e.map(this._coordinates, e.proxy(function (e, t) {
      return this.coordinates(t);
    }, this)) : (this.settings.center ? (this.settings.rtl && (a = -1, n = t + 1), i = this._coordinates[t], i += (this.width() - i + (this._coordinates[n] || 0)) / 2 * a) : i = this._coordinates[n] || 0, i = Math.ceil(i));
  }, a.prototype.duration = function (e, t, i) {
    return 0 === i ? 0 : Math.min(Math.max(Math.abs(t - e), 1), 6) * Math.abs(i || this.settings.smartSpeed);
  }, a.prototype.to = function (e, t) {
    var i = this.current(),
        s = null,
        a = e - this.relative(i),
        n = (a > 0) - (a < 0),
        r = this._items.length,
        o = this.minimum(),
        l = this.maximum();
    this.settings.loop ? (!this.settings.rewind && Math.abs(a) > r / 2 && (a += -1 * n * r), (s = (((e = i + a) - o) % r + r) % r + o) !== e && s - a <= l && s - a > 0 && (i = s - a, e = s, this.reset(i))) : this.settings.rewind ? e = (e % (l += 1) + l) % l : e = Math.max(o, Math.min(l, e)), this.speed(this.duration(i, e, t)), this.current(e), this.isVisible() && this.update();
  }, a.prototype.next = function (e) {
    e = e || !1, this.to(this.relative(this.current()) + 1, e);
  }, a.prototype.prev = function (e) {
    e = e || !1, this.to(this.relative(this.current()) - 1, e);
  }, a.prototype.onTransitionEnd = function (e) {
    if (e !== s && (e.stopPropagation(), (e.target || e.srcElement || e.originalTarget) !== this.$stage.get(0))) return !1;
    this.leave("animating"), this.trigger("translated");
  }, a.prototype.viewport = function () {
    var s;
    return this.options.responsiveBaseElement !== t ? s = e(this.options.responsiveBaseElement).width() : t.innerWidth ? s = t.innerWidth : i.documentElement && i.documentElement.clientWidth ? s = i.documentElement.clientWidth : console.warn("Can not detect viewport width."), s;
  }, a.prototype.replace = function (t) {
    this.$stage.empty(), this._items = [], t && (t = t instanceof jQuery ? t : e(t)), this.settings.nestedItemSelector && (t = t.find("." + this.settings.nestedItemSelector)), t.filter(function () {
      return 1 === this.nodeType;
    }).each(e.proxy(function (e, t) {
      t = this.prepare(t), this.$stage.append(t), this._items.push(t), this._mergers.push(1 * t.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1);
    }, this)), this.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0), this.invalidate("items");
  }, a.prototype.add = function (t, i) {
    var a = this.relative(this._current);
    i = i === s ? this._items.length : this.normalize(i, !0), t = t instanceof jQuery ? t : e(t), this.trigger("add", {
      content: t,
      position: i
    }), t = this.prepare(t), 0 === this._items.length || i === this._items.length ? (0 === this._items.length && this.$stage.append(t), 0 !== this._items.length && this._items[i - 1].after(t), this._items.push(t), this._mergers.push(1 * t.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1)) : (this._items[i].before(t), this._items.splice(i, 0, t), this._mergers.splice(i, 0, 1 * t.find("[data-merge]").addBack("[data-merge]").attr("data-merge") || 1)), this._items[a] && this.reset(this._items[a].index()), this.invalidate("items"), this.trigger("added", {
      content: t,
      position: i
    });
  }, a.prototype.remove = function (e) {
    (e = this.normalize(e, !0)) !== s && (this.trigger("remove", {
      content: this._items[e],
      position: e
    }), this._items[e].remove(), this._items.splice(e, 1), this._mergers.splice(e, 1), this.invalidate("items"), this.trigger("removed", {
      content: null,
      position: e
    }));
  }, a.prototype.preloadAutoWidthImages = function (t) {
    t.each(e.proxy(function (t, i) {
      this.enter("pre-loading"), i = e(i), e(new Image()).one("load", e.proxy(function (e) {
        i.attr("src", e.target.src), i.css("opacity", 1), this.leave("pre-loading"), !this.is("pre-loading") && !this.is("initializing") && this.refresh();
      }, this)).attr("src", i.attr("src") || i.attr("data-src") || i.attr("data-src-retina"));
    }, this));
  }, a.prototype.destroy = function () {
    for (var s in this.$element.off(".owl.core"), this.$stage.off(".owl.core"), e(i).off(".owl.core"), !1 !== this.settings.responsive && (t.clearTimeout(this.resizeTimer), this.off(t, "resize", this._handlers.onThrottledResize)), this._plugins) {
      this._plugins[s].destroy();
    }

    this.$stage.children(".cloned").remove(), this.$stage.unwrap(), this.$stage.children().contents().unwrap(), this.$stage.children().unwrap(), this.$stage.remove(), this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class", this.$element.attr("class").replace(new RegExp(this.options.responsiveClass + "-\\S+\\s", "g"), "")).removeData("owl.carousel");
  }, a.prototype.op = function (e, t, i) {
    var s = this.settings.rtl;

    switch (t) {
      case "<":
        return s ? e > i : e < i;

      case ">":
        return s ? e < i : e > i;

      case ">=":
        return s ? e <= i : e >= i;

      case "<=":
        return s ? e >= i : e <= i;
    }
  }, a.prototype.on = function (e, t, i, s) {
    e.addEventListener ? e.addEventListener(t, i, s) : e.attachEvent && e.attachEvent("on" + t, i);
  }, a.prototype.off = function (e, t, i, s) {
    e.removeEventListener ? e.removeEventListener(t, i, s) : e.detachEvent && e.detachEvent("on" + t, i);
  }, a.prototype.trigger = function (t, i, s, n, r) {
    var o = {
      item: {
        count: this._items.length,
        index: this.current()
      }
    },
        l = e.camelCase(e.grep(["on", t, s], function (e) {
      return e;
    }).join("-").toLowerCase()),
        h = e.Event([t, "owl", s || "carousel"].join(".").toLowerCase(), e.extend({
      relatedTarget: this
    }, o, i));
    return this._supress[t] || (e.each(this._plugins, function (e, t) {
      t.onTrigger && t.onTrigger(h);
    }), this.register({
      type: a.Type.Event,
      name: t
    }), this.$element.trigger(h), this.settings && "function" == typeof this.settings[l] && this.settings[l].call(this, h)), h;
  }, a.prototype.enter = function (t) {
    e.each([t].concat(this._states.tags[t] || []), e.proxy(function (e, t) {
      this._states.current[t] === s && (this._states.current[t] = 0), this._states.current[t]++;
    }, this));
  }, a.prototype.leave = function (t) {
    e.each([t].concat(this._states.tags[t] || []), e.proxy(function (e, t) {
      this._states.current[t]--;
    }, this));
  }, a.prototype.register = function (t) {
    if (t.type === a.Type.Event) {
      if (e.event.special[t.name] || (e.event.special[t.name] = {}), !e.event.special[t.name].owl) {
        var i = e.event.special[t.name]._default;
        e.event.special[t.name]._default = function (e) {
          return !i || !i.apply || e.namespace && -1 !== e.namespace.indexOf("owl") ? e.namespace && e.namespace.indexOf("owl") > -1 : i.apply(this, arguments);
        }, e.event.special[t.name].owl = !0;
      }
    } else t.type === a.Type.State && (this._states.tags[t.name] ? this._states.tags[t.name] = this._states.tags[t.name].concat(t.tags) : this._states.tags[t.name] = t.tags, this._states.tags[t.name] = e.grep(this._states.tags[t.name], e.proxy(function (i, s) {
      return e.inArray(i, this._states.tags[t.name]) === s;
    }, this)));
  }, a.prototype.suppress = function (t) {
    e.each(t, e.proxy(function (e, t) {
      this._supress[t] = !0;
    }, this));
  }, a.prototype.release = function (t) {
    e.each(t, e.proxy(function (e, t) {
      delete this._supress[t];
    }, this));
  }, a.prototype.pointer = function (e) {
    var i = {
      x: null,
      y: null
    };
    return (e = (e = e.originalEvent || e || t.event).touches && e.touches.length ? e.touches[0] : e.changedTouches && e.changedTouches.length ? e.changedTouches[0] : e).pageX ? (i.x = e.pageX, i.y = e.pageY) : (i.x = e.clientX, i.y = e.clientY), i;
  }, a.prototype.isNumeric = function (e) {
    return !isNaN(parseFloat(e));
  }, a.prototype.difference = function (e, t) {
    return {
      x: e.x - t.x,
      y: e.y - t.y
    };
  }, e.fn.owlCarousel = function (t) {
    var i = Array.prototype.slice.call(arguments, 1);
    return this.each(function () {
      var s = e(this),
          n = s.data("owl.carousel");
      n || (n = new a(this, "object" == _typeof(t) && t), s.data("owl.carousel", n), e.each(["next", "prev", "to", "destroy", "refresh", "replace", "add", "remove"], function (t, i) {
        n.register({
          type: a.Type.Event,
          name: i
        }), n.$element.on(i + ".owl.carousel.core", e.proxy(function (e) {
          e.namespace && e.relatedTarget !== this && (this.suppress([i]), n[i].apply(this, [].slice.call(arguments, 1)), this.release([i]));
        }, n));
      })), "string" == typeof t && "_" !== t.charAt(0) && n[t].apply(n, i);
    });
  }, e.fn.owlCarousel.Constructor = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(t) {
    this._core = t, this._interval = null, this._visible = null, this._handlers = {
      "initialized.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.autoRefresh && this.watch();
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this._core.$element.on(this._handlers);
  };

  a.Defaults = {
    autoRefresh: !0,
    autoRefreshInterval: 500
  }, a.prototype.watch = function () {
    this._interval || (this._visible = this._core.isVisible(), this._interval = t.setInterval(e.proxy(this.refresh, this), this._core.settings.autoRefreshInterval));
  }, a.prototype.refresh = function () {
    this._core.isVisible() !== this._visible && (this._visible = !this._visible, this._core.$element.toggleClass("owl-hidden", !this._visible), this._visible && this._core.invalidate("width") && this._core.refresh());
  }, a.prototype.destroy = function () {
    var e, i;

    for (e in t.clearInterval(this._interval), this._handlers) {
      this._core.$element.off(e, this._handlers[e]);
    }

    for (i in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[i] && (this[i] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.AutoRefresh = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(t) {
    this._core = t, this._loaded = [], this._handlers = {
      "initialized.owl.carousel change.owl.carousel resized.owl.carousel": e.proxy(function (t) {
        if (t.namespace && this._core.settings && this._core.settings.lazyLoad && (t.property && "position" == t.property.name || "initialized" == t.type)) {
          var i = this._core.settings,
              s = i.center && Math.ceil(i.items / 2) || i.items,
              a = i.center && -1 * s || 0,
              n = (t.property && void 0 !== t.property.value ? t.property.value : this._core.current()) + a,
              r = this._core.clones().length,
              o = e.proxy(function (e, t) {
            this.load(t);
          }, this);

          for (i.lazyLoadEager > 0 && (s += i.lazyLoadEager, i.loop && (n -= i.lazyLoadEager, s++)); a++ < s;) {
            this.load(r / 2 + this._core.relative(n)), r && e.each(this._core.clones(this._core.relative(n)), o), n++;
          }
        }
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this._core.$element.on(this._handlers);
  };

  a.Defaults = {
    lazyLoad: !1,
    lazyLoadEager: 0
  }, a.prototype.load = function (i) {
    var s = this._core.$stage.children().eq(i),
        a = s && s.find(".owl-lazy");

    !a || e.inArray(s.get(0), this._loaded) > -1 || (a.each(e.proxy(function (i, s) {
      var a,
          n = e(s),
          r = t.devicePixelRatio > 1 && n.attr("data-src-retina") || n.attr("data-src") || n.attr("data-srcset");
      this._core.trigger("load", {
        element: n,
        url: r
      }, "lazy"), n.is("img") ? n.one("load.owl.lazy", e.proxy(function () {
        n.css("opacity", 1), this._core.trigger("loaded", {
          element: n,
          url: r
        }, "lazy");
      }, this)).attr("src", r) : n.is("source") ? n.one("load.owl.lazy", e.proxy(function () {
        this._core.trigger("loaded", {
          element: n,
          url: r
        }, "lazy");
      }, this)).attr("srcset", r) : ((a = new Image()).onload = e.proxy(function () {
        n.css({
          "background-image": 'url("' + r + '")',
          opacity: "1"
        }), this._core.trigger("loaded", {
          element: n,
          url: r
        }, "lazy");
      }, this), a.src = r);
    }, this)), this._loaded.push(s.get(0)));
  }, a.prototype.destroy = function () {
    var e, t;

    for (e in this.handlers) {
      this._core.$element.off(e, this.handlers[e]);
    }

    for (t in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[t] && (this[t] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.Lazy = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(i) {
    this._core = i, this._previousHeight = null, this._handlers = {
      "initialized.owl.carousel refreshed.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.autoHeight && this.update();
      }, this),
      "changed.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.autoHeight && "position" === e.property.name && this.update();
      }, this),
      "loaded.owl.lazy": e.proxy(function (e) {
        e.namespace && this._core.settings.autoHeight && e.element.closest("." + this._core.settings.itemClass).index() === this._core.current() && this.update();
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this._core.$element.on(this._handlers), this._intervalId = null;
    var s = this;
    e(t).on("load", function () {
      s._core.settings.autoHeight && s.update();
    }), e(t).resize(function () {
      s._core.settings.autoHeight && (null != s._intervalId && clearTimeout(s._intervalId), s._intervalId = setTimeout(function () {
        s.update();
      }, 250));
    });
  };

  a.Defaults = {
    autoHeight: !1,
    autoHeightClass: "owl-height"
  }, a.prototype.update = function () {
    var t = this._core._current,
        i = t + this._core.settings.items,
        s = this._core.settings.lazyLoad,
        a = this._core.$stage.children().toArray().slice(t, i),
        n = [],
        r = 0;

    e.each(a, function (t, i) {
      n.push(e(i).height());
    }), (r = Math.max.apply(null, n)) <= 1 && s && this._previousHeight && (r = this._previousHeight), this._previousHeight = r, this._core.$stage.parent().height(r).addClass(this._core.settings.autoHeightClass);
  }, a.prototype.destroy = function () {
    var e, t;

    for (e in this._handlers) {
      this._core.$element.off(e, this._handlers[e]);
    }

    for (t in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[t] && (this[t] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.AutoHeight = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(t) {
    this._core = t, this._videos = {}, this._playing = null, this._handlers = {
      "initialized.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.register({
          type: "state",
          name: "playing",
          tags: ["interacting"]
        });
      }, this),
      "resize.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.video && this.isInFullScreen() && e.preventDefault();
      }, this),
      "refreshed.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.is("resizing") && this._core.$stage.find(".cloned .owl-video-frame").remove();
      }, this),
      "changed.owl.carousel": e.proxy(function (e) {
        e.namespace && "position" === e.property.name && this._playing && this.stop();
      }, this),
      "prepared.owl.carousel": e.proxy(function (t) {
        if (t.namespace) {
          var i = e(t.content).find(".owl-video");
          i.length && (i.css("display", "none"), this.fetch(i, e(t.content)));
        }
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this._core.$element.on(this._handlers), this._core.$element.on("click.owl.video", ".owl-video-play-icon", e.proxy(function (e) {
      this.play(e);
    }, this));
  };

  a.Defaults = {
    video: !1,
    videoHeight: !1,
    videoWidth: !1
  }, a.prototype.fetch = function (e, t) {
    var i = e.attr("data-vimeo-id") ? "vimeo" : e.attr("data-vzaar-id") ? "vzaar" : "youtube",
        s = e.attr("data-vimeo-id") || e.attr("data-youtube-id") || e.attr("data-vzaar-id"),
        a = e.attr("data-width") || this._core.settings.videoWidth,
        n = e.attr("data-height") || this._core.settings.videoHeight,
        r = e.attr("href");

    if (!r) throw new Error("Missing video URL.");
    if ((s = r.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/))[3].indexOf("youtu") > -1) i = "youtube";else if (s[3].indexOf("vimeo") > -1) i = "vimeo";else {
      if (!(s[3].indexOf("vzaar") > -1)) throw new Error("Video URL not supported.");
      i = "vzaar";
    }
    s = s[6], this._videos[r] = {
      type: i,
      id: s,
      width: a,
      height: n
    }, t.attr("data-video", r), this.thumbnail(e, this._videos[r]);
  }, a.prototype.thumbnail = function (t, i) {
    var s,
        a,
        n = i.width && i.height ? "width:" + i.width + "px;height:" + i.height + "px;" : "",
        r = t.find("img"),
        o = "src",
        l = "",
        h = this._core.settings,
        d = function d(i) {
      '<div class="owl-video-play-icon"></div>', s = h.lazyLoad ? e("<div/>", {
        "class": "owl-video-tn " + l,
        srcType: i
      }) : e("<div/>", {
        "class": "owl-video-tn",
        style: "opacity:1;background-image:url(" + i + ")"
      }), t.after(s), t.after('<div class="owl-video-play-icon"></div>');
    };

    if (t.wrap(e("<div/>", {
      "class": "owl-video-wrapper",
      style: n
    })), this._core.settings.lazyLoad && (o = "data-src", l = "owl-lazy"), r.length) return d(r.attr(o)), r.remove(), !1;
    "youtube" === i.type ? (a = "//img.youtube.com/vi/" + i.id + "/hqdefault.jpg", d(a)) : "vimeo" === i.type ? e.ajax({
      type: "GET",
      url: "//vimeo.com/api/v2/video/" + i.id + ".json",
      jsonp: "callback",
      dataType: "jsonp",
      success: function success(e) {
        a = e[0].thumbnail_large, d(a);
      }
    }) : "vzaar" === i.type && e.ajax({
      type: "GET",
      url: "//vzaar.com/api/videos/" + i.id + ".json",
      jsonp: "callback",
      dataType: "jsonp",
      success: function success(e) {
        a = e.framegrab_url, d(a);
      }
    });
  }, a.prototype.stop = function () {
    this._core.trigger("stop", null, "video"), this._playing.find(".owl-video-frame").remove(), this._playing.removeClass("owl-video-playing"), this._playing = null, this._core.leave("playing"), this._core.trigger("stopped", null, "video");
  }, a.prototype.play = function (t) {
    var i,
        s = e(t.target).closest("." + this._core.settings.itemClass),
        a = this._videos[s.attr("data-video")],
        n = a.width || "100%",
        r = a.height || this._core.$stage.height();

    this._playing || (this._core.enter("playing"), this._core.trigger("play", null, "video"), s = this._core.items(this._core.relative(s.index())), this._core.reset(s.index()), (i = e('<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>')).attr("height", r), i.attr("width", n), "youtube" === a.type ? i.attr("src", "//www.youtube.com/embed/" + a.id + "?autoplay=1&rel=0&v=" + a.id) : "vimeo" === a.type ? i.attr("src", "//player.vimeo.com/video/" + a.id + "?autoplay=1") : "vzaar" === a.type && i.attr("src", "//view.vzaar.com/" + a.id + "/player?autoplay=true"), e(i).wrap('<div class="owl-video-frame" />').insertAfter(s.find(".owl-video")), this._playing = s.addClass("owl-video-playing"));
  }, a.prototype.isInFullScreen = function () {
    var t = i.fullscreenElement || i.mozFullScreenElement || i.webkitFullscreenElement;
    return t && e(t).parent().hasClass("owl-video-frame");
  }, a.prototype.destroy = function () {
    var e, t;

    for (e in this._core.$element.off("click.owl.video"), this._handlers) {
      this._core.$element.off(e, this._handlers[e]);
    }

    for (t in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[t] && (this[t] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.Video = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(t) {
    this.core = t, this.core.options = e.extend({}, a.Defaults, this.core.options), this.swapping = !0, this.previous = s, this.next = s, this.handlers = {
      "change.owl.carousel": e.proxy(function (e) {
        e.namespace && "position" == e.property.name && (this.previous = this.core.current(), this.next = e.property.value);
      }, this),
      "drag.owl.carousel dragged.owl.carousel translated.owl.carousel": e.proxy(function (e) {
        e.namespace && (this.swapping = "translated" == e.type);
      }, this),
      "translate.owl.carousel": e.proxy(function (e) {
        e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn) && this.swap();
      }, this)
    }, this.core.$element.on(this.handlers);
  };

  a.Defaults = {
    animateOut: !1,
    animateIn: !1
  }, a.prototype.swap = function () {
    if (1 === this.core.settings.items && e.support.animation && e.support.transition) {
      this.core.speed(0);
      var t,
          i = e.proxy(this.clear, this),
          s = this.core.$stage.children().eq(this.previous),
          a = this.core.$stage.children().eq(this.next),
          n = this.core.settings.animateIn,
          r = this.core.settings.animateOut;
      this.core.current() !== this.previous && (r && (t = this.core.coordinates(this.previous) - this.core.coordinates(this.next), s.one(e.support.animation.end, i).css({
        left: t + "px"
      }).addClass("animated owl-animated-out").addClass(r)), n && a.one(e.support.animation.end, i).addClass("animated owl-animated-in").addClass(n));
    }
  }, a.prototype.clear = function (t) {
    e(t.target).css({
      left: ""
    }).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut), this.core.onTransitionEnd();
  }, a.prototype.destroy = function () {
    var e, t;

    for (e in this.handlers) {
      this.core.$element.off(e, this.handlers[e]);
    }

    for (t in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[t] && (this[t] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.Animate = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  var a = function a(t) {
    this._core = t, this._call = null, this._time = 0, this._timeout = 0, this._paused = !0, this._handlers = {
      "changed.owl.carousel": e.proxy(function (e) {
        e.namespace && "settings" === e.property.name ? this._core.settings.autoplay ? this.play() : this.stop() : e.namespace && "position" === e.property.name && this._paused && (this._time = 0);
      }, this),
      "initialized.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.autoplay && this.play();
      }, this),
      "play.owl.autoplay": e.proxy(function (e, t, i) {
        e.namespace && this.play(t, i);
      }, this),
      "stop.owl.autoplay": e.proxy(function (e) {
        e.namespace && this.stop();
      }, this),
      "mouseover.owl.autoplay": e.proxy(function () {
        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.pause();
      }, this),
      "mouseleave.owl.autoplay": e.proxy(function () {
        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.play();
      }, this),
      "touchstart.owl.core": e.proxy(function () {
        this._core.settings.autoplayHoverPause && this._core.is("rotating") && this.pause();
      }, this),
      "touchend.owl.core": e.proxy(function () {
        this._core.settings.autoplayHoverPause && this.play();
      }, this)
    }, this._core.$element.on(this._handlers), this._core.options = e.extend({}, a.Defaults, this._core.options);
  };

  a.Defaults = {
    autoplay: !1,
    autoplayTimeout: 5e3,
    autoplayHoverPause: !1,
    autoplaySpeed: !1
  }, a.prototype._next = function (s) {
    this._call = t.setTimeout(e.proxy(this._next, this, s), this._timeout * (Math.round(this.read() / this._timeout) + 1) - this.read()), this._core.is("interacting") || i.hidden || this._core.next(s || this._core.settings.autoplaySpeed);
  }, a.prototype.read = function () {
    return new Date().getTime() - this._time;
  }, a.prototype.play = function (i, s) {
    var a;
    this._core.is("rotating") || this._core.enter("rotating"), i = i || this._core.settings.autoplayTimeout, a = Math.min(this._time % (this._timeout || i), i), this._paused ? (this._time = this.read(), this._paused = !1) : t.clearTimeout(this._call), this._time += this.read() % i - a, this._timeout = i, this._call = t.setTimeout(e.proxy(this._next, this, s), i - a);
  }, a.prototype.stop = function () {
    this._core.is("rotating") && (this._time = 0, this._paused = !0, t.clearTimeout(this._call), this._core.leave("rotating"));
  }, a.prototype.pause = function () {
    this._core.is("rotating") && !this._paused && (this._time = this.read(), this._paused = !0, t.clearTimeout(this._call));
  }, a.prototype.destroy = function () {
    var e, t;

    for (e in this.stop(), this._handlers) {
      this._core.$element.off(e, this._handlers[e]);
    }

    for (t in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[t] && (this[t] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.autoplay = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  "use strict";

  var a = function a(t) {
    this._core = t, this._initialized = !1, this._pages = [], this._controls = {}, this._templates = [], this.$element = this._core.$element, this._overrides = {
      next: this._core.next,
      prev: this._core.prev,
      to: this._core.to
    }, this._handlers = {
      "prepared.owl.carousel": e.proxy(function (t) {
        t.namespace && this._core.settings.dotsData && this._templates.push('<div class="' + this._core.settings.dotClass + '">' + e(t.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot") + "</div>");
      }, this),
      "added.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.dotsData && this._templates.splice(e.position, 0, this._templates.pop());
      }, this),
      "remove.owl.carousel": e.proxy(function (e) {
        e.namespace && this._core.settings.dotsData && this._templates.splice(e.position, 1);
      }, this),
      "changed.owl.carousel": e.proxy(function (e) {
        e.namespace && "position" == e.property.name && this.draw();
      }, this),
      "initialized.owl.carousel": e.proxy(function (e) {
        e.namespace && !this._initialized && (this._core.trigger("initialize", null, "navigation"), this.initialize(), this.update(), this.draw(), this._initialized = !0, this._core.trigger("initialized", null, "navigation"));
      }, this),
      "refreshed.owl.carousel": e.proxy(function (e) {
        e.namespace && this._initialized && (this._core.trigger("refresh", null, "navigation"), this.update(), this.draw(), this._core.trigger("refreshed", null, "navigation"));
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this.$element.on(this._handlers);
  };

  a.Defaults = {
    nav: !1,
    navText: ['<span aria-label="Previous">&#x2039;</span>', '<span aria-label="Next">&#x203a;</span>'],
    navSpeed: !1,
    navElement: 'button type="button" role="presentation"',
    navContainer: !1,
    navContainerClass: "owl-nav",
    navClass: ["owl-prev", "owl-next"],
    slideBy: 1,
    dotClass: "owl-dot",
    dotsClass: "owl-dots",
    dots: !0,
    dotsEach: !1,
    dotsData: !1,
    dotsSpeed: !1,
    dotsContainer: !1
  }, a.prototype.initialize = function () {
    var t,
        i = this._core.settings;

    for (t in this._controls.$relative = (i.navContainer ? e(i.navContainer) : e("<div>").addClass(i.navContainerClass).appendTo(this.$element)).addClass("disabled"), this._controls.$previous = e("<" + i.navElement + ">").addClass(i.navClass[0]).html(i.navText[0]).prependTo(this._controls.$relative).on("click", e.proxy(function (e) {
      this.prev(i.navSpeed);
    }, this)), this._controls.$next = e("<" + i.navElement + ">").addClass(i.navClass[1]).html(i.navText[1]).appendTo(this._controls.$relative).on("click", e.proxy(function (e) {
      this.next(i.navSpeed);
    }, this)), i.dotsData || (this._templates = [e('<button role="button">').addClass(i.dotClass).append(e("<span>")).prop("outerHTML")]), this._controls.$absolute = (i.dotsContainer ? e(i.dotsContainer) : e("<div>").addClass(i.dotsClass).appendTo(this.$element)).addClass("disabled"), this._controls.$absolute.on("click", "button", e.proxy(function (t) {
      var s = e(t.target).parent().is(this._controls.$absolute) ? e(t.target).index() : e(t.target).parent().index();
      t.preventDefault(), this.to(s, i.dotsSpeed);
    }, this)), this._overrides) {
      this._core[t] = e.proxy(this[t], this);
    }
  }, a.prototype.destroy = function () {
    var e, t, i, s, a;

    for (e in a = this._core.settings, this._handlers) {
      this.$element.off(e, this._handlers[e]);
    }

    for (t in this._controls) {
      "$relative" === t && a.navContainer ? this._controls[t].html("") : this._controls[t].remove();
    }

    for (s in this.overides) {
      this._core[s] = this._overrides[s];
    }

    for (i in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[i] && (this[i] = null);
    }
  }, a.prototype.update = function () {
    var e,
        t,
        i = this._core.clones().length / 2,
        s = i + this._core.items().length,
        a = this._core.maximum(!0),
        n = this._core.settings,
        r = n.center || n.autoWidth || n.dotsData ? 1 : n.dotsEach || n.items;

    if ("page" !== n.slideBy && (n.slideBy = Math.min(n.slideBy, n.items)), n.dots || "page" == n.slideBy) for (this._pages = [], e = i, t = 0, 0; e < s; e++) {
      if (t >= r || 0 === t) {
        if (this._pages.push({
          start: Math.min(a, e - i),
          end: e - i + r - 1
        }), Math.min(a, e - i) === a) break;
        t = 0;
      }

      t += this._core.mergers(this._core.relative(e));
    }
  }, a.prototype.draw = function () {
    var t,
        i = this._core.settings,
        s = this._core.items().length <= i.items,
        a = this._core.relative(this._core.current()),
        n = i.loop || i.rewind;

    this._controls.$relative.toggleClass("disabled", !i.nav || s), i.nav && (this._controls.$previous.toggleClass("disabled", !n && a <= this._core.minimum(!0)), this._controls.$next.toggleClass("disabled", !n && a >= this._core.maximum(!0))), this._controls.$absolute.toggleClass("disabled", !i.dots || s), i.dots && (t = this._pages.length - this._controls.$absolute.children().length, i.dotsData && 0 !== t ? this._controls.$absolute.html(this._templates.join("")) : t > 0 ? this._controls.$absolute.append(new Array(t + 1).join(this._templates[0])) : t < 0 && this._controls.$absolute.children().slice(t).remove(), this._controls.$absolute.find(".active").removeClass("active"), this._controls.$absolute.children().eq(e.inArray(this.current(), this._pages)).addClass("active"));
  }, a.prototype.onTrigger = function (t) {
    var i = this._core.settings;
    t.page = {
      index: e.inArray(this.current(), this._pages),
      count: this._pages.length,
      size: i && (i.center || i.autoWidth || i.dotsData ? 1 : i.dotsEach || i.items)
    };
  }, a.prototype.current = function () {
    var t = this._core.relative(this._core.current());

    return e.grep(this._pages, e.proxy(function (e, i) {
      return e.start <= t && e.end >= t;
    }, this)).pop();
  }, a.prototype.getPosition = function (t) {
    var i,
        s,
        a = this._core.settings;
    return "page" == a.slideBy ? (i = e.inArray(this.current(), this._pages), s = this._pages.length, t ? ++i : --i, i = this._pages[(i % s + s) % s].start) : (i = this._core.relative(this._core.current()), s = this._core.items().length, t ? i += a.slideBy : i -= a.slideBy), i;
  }, a.prototype.next = function (t) {
    e.proxy(this._overrides.to, this._core)(this.getPosition(!0), t);
  }, a.prototype.prev = function (t) {
    e.proxy(this._overrides.to, this._core)(this.getPosition(!1), t);
  }, a.prototype.to = function (t, i, s) {
    var a;
    !s && this._pages.length ? (a = this._pages.length, e.proxy(this._overrides.to, this._core)(this._pages[(t % a + a) % a].start, i)) : e.proxy(this._overrides.to, this._core)(t, i);
  }, e.fn.owlCarousel.Constructor.Plugins.Navigation = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  "use strict";

  var a = function a(i) {
    this._core = i, this._hashes = {}, this.$element = this._core.$element, this._handlers = {
      "initialized.owl.carousel": e.proxy(function (i) {
        i.namespace && "URLHash" === this._core.settings.startPosition && e(t).trigger("hashchange.owl.navigation");
      }, this),
      "prepared.owl.carousel": e.proxy(function (t) {
        if (t.namespace) {
          var i = e(t.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");
          if (!i) return;
          this._hashes[i] = t.content;
        }
      }, this),
      "changed.owl.carousel": e.proxy(function (i) {
        if (i.namespace && "position" === i.property.name) {
          var s = this._core.items(this._core.relative(this._core.current())),
              a = e.map(this._hashes, function (e, t) {
            return e === s ? t : null;
          }).join();

          if (!a || t.location.hash.slice(1) === a) return;
          t.location.hash = a;
        }
      }, this)
    }, this._core.options = e.extend({}, a.Defaults, this._core.options), this.$element.on(this._handlers), e(t).on("hashchange.owl.navigation", e.proxy(function (e) {
      var i = t.location.hash.substring(1),
          s = this._core.$stage.children(),
          a = this._hashes[i] && s.index(this._hashes[i]);

      void 0 !== a && a !== this._core.current() && this._core.to(this._core.relative(a), !1, !0);
    }, this));
  };

  a.Defaults = {
    URLhashListener: !1
  }, a.prototype.destroy = function () {
    var i, s;

    for (i in e(t).off("hashchange.owl.navigation"), this._handlers) {
      this._core.$element.off(i, this._handlers[i]);
    }

    for (s in Object.getOwnPropertyNames(this)) {
      "function" != typeof this[s] && (this[s] = null);
    }
  }, e.fn.owlCarousel.Constructor.Plugins.Hash = a;
}(window.Zepto || window.jQuery, window, document), function (e, t, i, s) {
  function a(t, i) {
    var s = !1,
        a = t.charAt(0).toUpperCase() + t.slice(1);
    return e.each((t + " " + o.join(a + " ") + a).split(" "), function (e, t) {
      if (void 0 !== r[t]) return s = !i || t, !1;
    }), s;
  }

  function n(e) {
    return a(e, !0);
  }

  var r = e("<support>").get(0).style,
      o = "Webkit Moz O ms".split(" "),
      l = {
    transition: {
      end: {
        WebkitTransition: "webkitTransitionEnd",
        MozTransition: "transitionend",
        OTransition: "oTransitionEnd",
        transition: "transitionend"
      }
    },
    animation: {
      end: {
        WebkitAnimation: "webkitAnimationEnd",
        MozAnimation: "animationend",
        OAnimation: "oAnimationEnd",
        animation: "animationend"
      }
    }
  },
      h = function h() {
    return !!a("transform");
  },
      d = function d() {
    return !!a("perspective");
  },
      c = function c() {
    return !!a("animation");
  };

  (function () {
    return !!a("transition");
  })() && (e.support.transition = new String(n("transition")), e.support.transition.end = l.transition.end[e.support.transition]), c() && (e.support.animation = new String(n("animation")), e.support.animation.end = l.animation.end[e.support.animation]), h() && (e.support.transform = new String(n("transform")), e.support.transform3d = d());
}(window.Zepto || window.jQuery, window, document), function (e, t) {
  "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : _typeof(module)) ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == (typeof exports === "undefined" ? "undefined" : _typeof(exports)) ? exports.datepicker = t() : e.datepicker = t();
}(window, function () {
  return function (e) {
    var t = {};

    function i(s) {
      if (t[s]) return t[s].exports;
      var a = t[s] = {
        i: s,
        l: !1,
        exports: {}
      };
      return e[s].call(a.exports, a, a.exports, i), a.l = !0, a.exports;
    }

    return i.m = e, i.c = t, i.d = function (e, t, s) {
      i.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: s
      });
    }, i.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, i.t = function (e, t) {
      if (1 & t && (e = i(e)), 8 & t) return e;
      if (4 & t && "object" == _typeof(e) && e && e.__esModule) return e;
      var s = Object.create(null);
      if (i.r(s), Object.defineProperty(s, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var a in e) {
        i.d(s, a, function (t) {
          return e[t];
        }.bind(null, a));
      }
      return s;
    }, i.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e["default"];
      } : function () {
        return e;
      };
      return i.d(t, "a", t), t;
    }, i.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, i.p = "", i(i.s = 0);
  }([function (e, t, i) {
    "use strict";

    i.r(t), i(1);
    var s = [],
        a = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        n = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        r = {
      t: "top",
      r: "right",
      b: "bottom",
      l: "left",
      c: "centered"
    };

    function o() {}

    var l = ["click", "focusin", "keydown", "input"];

    function h(e) {
      l.forEach(function (t) {
        e.addEventListener(t, e === document ? z : $);
      });
    }

    function d(e) {
      return Array.isArray(e) ? e.map(d) : "[object Object]" === M(e) ? Object.keys(e).reduce(function (t, i) {
        return t[i] = d(e[i]), t;
      }, {}) : e;
    }

    function c(e, t) {
      var i = e.calendar.querySelector(".qs-overlay"),
          s = i && !i.classList.contains("qs-hidden");
      t = t || new Date(e.currentYear, e.currentMonth), e.calendar.innerHTML = [p(t, e, s), u(t, e, s), m(e, s)].join(""), s && window.requestAnimationFrame(function () {
        T(!0, e);
      });
    }

    function p(e, t, i) {
      return ['<div class="qs-controls' + (i ? " qs-blur" : "") + '">', '<div class="qs-arrow qs-left"></div>', '<div class="qs-month-year">', '<span class="qs-month">' + t.months[e.getMonth()] + "</span>", '<span class="qs-year">' + e.getFullYear() + "</span>", "</div>", '<div class="qs-arrow qs-right"></div>', "</div>"].join("");
    }

    function u(e, t, i) {
      var s = t.currentMonth,
          a = t.currentYear,
          n = t.dateSelected,
          r = t.maxDate,
          o = t.minDate,
          l = t.showAllDates,
          h = t.days,
          d = t.disabledDates,
          c = t.startDay,
          p = (t.weekendIndices, t.events),
          u = t.getRange ? t.getRange() : {},
          m = +u.start,
          f = +u.end,
          v = x(new Date(e).setDate(1)),
          g = v.getDay() - c,
          y = g < 0 ? 7 : 0;
      v.setMonth(v.getMonth() + 1), v.setDate(0);
      var w = v.getDate(),
          b = [],
          E = y + 7 * ((g + w) / 7 | 0);
      E += (g + w) % 7 ? 7 : 0;

      for (var C = 1; C <= E; C++) {
        var T = (C - 1) % 7,
            S = h[T],
            M = C - (g >= 0 ? g : 7 + g),
            _ = new Date(a, s, M),
            z = p[+_],
            $ = M < 1 || M > w,
            P = $ ? M < 1 ? -1 : 1 : 0,
            D = $ && !l,
            k = D ? "" : _.getDate(),
            L = 0 === T || 6 === T,
            I = m !== f,
            O = "qs-square " + S;

        z && !D && (O += " qs-event"), $ && (O += " qs-outside-current-month"), !l && $ || (O += " qs-num"), +_ == +n && (O += " qs-active"), (d[+_] || t.disabler(_) || L && t.noWeekends || o && +_ < +o || r && +_ > +r) && !D && (O += " qs-disabled"), +x(new Date()) == +_ && (O += " qs-current"), +_ === m && f && I && (O += " qs-range-start"), +_ > m && +_ < f && (O += " qs-range-middle"), +_ === f && m && I && (O += " qs-range-end"), D && (O += " qs-empty", k = ""), b.push('<div class="' + O + '" data-direction="' + P + '">' + k + "</div>");
      }

      var A = h.map(function (e) {
        return '<div class="qs-square qs-day">' + e + "</div>";
      }).concat(b);
      return A.unshift('<div class="qs-squares' + (i ? " qs-blur" : "") + '">'), A.push("</div>"), A.join("");
    }

    function m(e, t) {
      var i = e.overlayPlaceholder,
          s = e.overlayButton;
      return ['<div class="qs-overlay' + (t ? "" : " qs-hidden") + '">', "<div>", '<input class="qs-overlay-year" placeholder="' + i + '" />', '<div class="qs-close">&#10005;</div>', "</div>", '<div class="qs-overlay-month-container">' + e.overlayMonths.map(function (e, t) {
        return '<div class="qs-overlay-month" data-month-num="' + t + '">' + e + "</div>";
      }).join("") + "</div>", '<div class="qs-submit qs-disabled">' + s + "</div>", "</div>"].join("");
    }

    function f(e, t, i) {
      var s = t.el,
          a = t.calendar.querySelector(".qs-active"),
          n = e.textContent,
          r = t.sibling;
      (s.disabled || s.readOnly) && t.respectDisabledReadOnly || (t.dateSelected = i ? void 0 : new Date(t.currentYear, t.currentMonth, n), a && a.classList.remove("qs-active"), i || e.classList.add("qs-active"), g(s, t, i), i || E(t), r && (v({
        instance: t,
        deselect: i
      }), t.first && !r.dateSelected && (r.currentYear = t.currentYear, r.currentMonth = t.currentMonth, r.currentMonthName = t.currentMonthName), c(t), c(r)), t.onSelect(t, i ? void 0 : new Date(t.dateSelected)));
    }

    function v(e) {
      var t = e.instance.first ? e.instance : e.instance.sibling,
          i = t.sibling;
      t === e.instance ? e.deselect ? (t.minDate = t.originalMinDate, i.minDate = i.originalMinDate) : i.minDate = t.dateSelected : e.deselect ? (i.maxDate = i.originalMaxDate, t.maxDate = t.originalMaxDate) : t.maxDate = i.dateSelected;
    }

    function g(e, t, i) {
      if (!t.nonInput) return i ? e.value = "" : t.formatter !== o ? t.formatter(e, t.dateSelected, t) : void (e.value = t.dateSelected.toDateString());
    }

    function y(e, t, i, s) {
      i || s ? (i && (t.currentYear = +i), s && (t.currentMonth = +s)) : (t.currentMonth += e.contains("qs-right") ? 1 : -1, 12 === t.currentMonth ? (t.currentMonth = 0, t.currentYear++) : -1 === t.currentMonth && (t.currentMonth = 11, t.currentYear--)), t.currentMonthName = t.months[t.currentMonth], c(t), t.onMonthChange(t);
    }

    function w(e) {
      if (!e.noPosition) {
        var t = e.position.top,
            i = e.position.right;
        if (e.position.centered) return e.calendarContainer.classList.add("qs-centered");
        var s = e.positionedEl.getBoundingClientRect(),
            a = e.el.getBoundingClientRect(),
            n = e.calendarContainer.getBoundingClientRect(),
            r = a.top - s.top + (t ? -1 * n.height : a.height) + "px",
            o = a.left - s.left + (i ? a.width - n.width : 0) + "px";
        e.calendarContainer.style.setProperty("top", r), e.calendarContainer.style.setProperty("left", o);
      }
    }

    function b(e) {
      return "[object Date]" === M(e) && "Invalid Date" !== e.toString();
    }

    function x(e) {
      if (b(e) || "number" == typeof e && !isNaN(e)) {
        var t = new Date(+e);
        return new Date(t.getFullYear(), t.getMonth(), t.getDate());
      }
    }

    function E(e) {
      e.disabled || !e.calendarContainer.classList.contains("qs-hidden") && !e.alwaysShow && (T(!0, e), e.calendarContainer.classList.add("qs-hidden"), e.onHide(e));
    }

    function C(e) {
      e.disabled || (e.calendarContainer.classList.remove("qs-hidden"), w(e), e.onShow(e));
    }

    function T(e, t) {
      var i = t.calendar,
          s = i.querySelector(".qs-overlay"),
          a = s.querySelector(".qs-overlay-year"),
          n = i.querySelector(".qs-controls"),
          r = i.querySelector(".qs-squares");
      e ? (s.classList.add("qs-hidden"), n.classList.remove("qs-blur"), r.classList.remove("qs-blur"), a.value = "") : (s.classList.remove("qs-hidden"), n.classList.add("qs-blur"), r.classList.add("qs-blur"), a.focus());
    }

    function S(e, t, i, s) {
      var a = isNaN(+new Date().setFullYear(t.value || void 0)),
          n = a ? null : t.value;
      13 === e.which || 13 === e.keyCode || "click" === e.type ? s ? y(null, i, n, s) : a || t.classList.contains("qs-disabled") || y(null, i, n) : i.calendar.contains(t) && i.calendar.querySelector(".qs-submit").classList[a ? "add" : "remove"]("qs-disabled");
    }

    function M(e) {
      return {}.toString.call(e);
    }

    function _(e) {
      s.forEach(function (t) {
        t !== e && E(t);
      });
    }

    function z(e) {
      if (!e.__qs_shadow_dom) {
        var t = e.which || e.keyCode,
            i = e.type,
            a = e.target,
            r = a.classList,
            o = s.filter(function (e) {
          return e.calendar.contains(a) || e.el === a;
        })[0],
            l = o && o.calendar.contains(a);
        if (!(o && o.isMobile && o.disableMobile)) if ("click" === i) {
          if (!o) return s.forEach(E);
          if (o.disabled) return;
          var h = o.calendar,
              d = o.calendarContainer,
              p = o.disableYearOverlay,
              u = o.nonInput,
              m = h.querySelector(".qs-overlay-year"),
              v = !!h.querySelector(".qs-hidden"),
              g = h.querySelector(".qs-month-year").contains(a),
              w = a.dataset.monthNum;
          if (o.noPosition && !l) (d.classList.contains("qs-hidden") ? C : E)(o);else if (r.contains("qs-arrow")) y(r, o);else if (g || r.contains("qs-close")) p || T(!v, o);else if (w) S(e, m, o, w);else {
            if (r.contains("qs-disabled")) return;

            if (r.contains("qs-num")) {
              var b = a.textContent,
                  x = +a.dataset.direction,
                  M = new Date(o.currentYear, o.currentMonth + x, b);

              if (x) {
                o.currentYear = M.getFullYear(), o.currentMonth = M.getMonth(), o.currentMonthName = n[o.currentMonth], c(o);

                for (var z, $ = o.calendar.querySelectorAll('[data-direction="0"]'), P = 0; !z;) {
                  var D = $[P];
                  D.textContent === b && (z = D), P++;
                }

                a = z;
              }

              return void (+M == +o.dateSelected ? f(a, o, !0) : a.classList.contains("qs-disabled") || f(a, o));
            }

            r.contains("qs-submit") ? S(e, m, o) : u && a === o.el && (C(o), _(o));
          }
        } else if ("focusin" === i && o) C(o), _(o);else if ("keydown" === i && 9 === t && o) E(o);else if ("keydown" === i && o && !o.disabled) {
          var k = !o.calendar.querySelector(".qs-overlay").classList.contains("qs-hidden");
          13 === t && k && l ? S(e, a, o) : 27 === t && k && l && T(!0, o);
        } else if ("input" === i) {
          if (!o || !o.calendar.contains(a)) return;
          var L = o.calendar.querySelector(".qs-submit"),
              I = a.value.split("").reduce(function (e, t) {
            return e || "0" !== t ? e + (t.match(/[0-9]/) ? t : "") : "";
          }, "").slice(0, 4);
          a.value = I, L.classList[4 === I.length ? "remove" : "add"]("qs-disabled");
        }
      }
    }

    function $(e) {
      z(e), e.__qs_shadow_dom = !0;
    }

    function P(e, t) {
      l.forEach(function (i) {
        e.removeEventListener(i, t);
      });
    }

    function D() {
      C(this);
    }

    function k() {
      E(this);
    }

    function L(e, t) {
      var i = x(e),
          s = this.currentYear,
          a = this.currentMonth,
          n = this.sibling;
      if (null == e) return this.dateSelected = void 0, g(this.el, this, !0), n && (v({
        instance: this,
        deselect: !0
      }), c(n)), c(this), this;
      if (!b(e)) throw new Error("`setDate` needs a JavaScript Date object.");
      if (this.disabledDates[+i] || i < this.minDate || i > this.maxDate) throw new Error("You can't manually set a date that's disabled.");
      this.dateSelected = i, t && (this.currentYear = i.getFullYear(), this.currentMonth = i.getMonth(), this.currentMonthName = this.months[i.getMonth()]), g(this.el, this), n && (v({
        instance: this
      }), c(n));
      var r = s === i.getFullYear() && a === i.getMonth();
      return r || t ? c(this, i) : r || c(this, new Date(s, a, 1)), this;
    }

    function I(e) {
      return A(this, e, !0);
    }

    function O(e) {
      return A(this, e);
    }

    function A(e, t, i) {
      var s = e.dateSelected,
          a = e.first,
          n = e.sibling,
          r = e.minDate,
          o = e.maxDate,
          l = x(t),
          h = i ? "Min" : "Max";

      function d() {
        return "original" + h + "Date";
      }

      function p() {
        return h.toLowerCase() + "Date";
      }

      function u() {
        return "set" + h;
      }

      function m() {
        throw new Error("Out-of-range date passed to " + u());
      }

      if (null == t) e[d()] = void 0, n ? (n[d()] = void 0, i ? (a && !s || !a && !n.dateSelected) && (e.minDate = void 0, n.minDate = void 0) : (a && !n.dateSelected || !a && !s) && (e.maxDate = void 0, n.maxDate = void 0)) : e[p()] = void 0;else {
        if (!b(t)) throw new Error("Invalid date passed to " + u());
        n ? ((a && i && l > (s || o) || a && !i && l < (n.dateSelected || r) || !a && i && l > (n.dateSelected || o) || !a && !i && l < (s || r)) && m(), e[d()] = l, n[d()] = l, (i && (a && !s || !a && !n.dateSelected) || !i && (a && !n.dateSelected || !a && !s)) && (e[p()] = l, n[p()] = l)) : ((i && l > (s || o) || !i && l < (s || r)) && m(), e[p()] = l);
      }
      return n && c(n), c(e), e;
    }

    function q() {
      var e = this.first ? this : this.sibling,
          t = e.sibling;
      return {
        start: e.dateSelected,
        end: t.dateSelected
      };
    }

    function H() {
      var e = this.shadowDom,
          t = this.positionedEl,
          i = this.calendarContainer,
          a = this.sibling,
          n = this;
      this.inlinePosition && (s.some(function (e) {
        return e !== n && e.positionedEl === t;
      }) || t.style.setProperty("position", null)), i.remove(), s = s.filter(function (e) {
        return e !== n;
      }), a && delete a.sibling, s.length || P(document, z);
      var r = s.some(function (t) {
        return t.shadowDom === e;
      });

      for (var o in e && !r && P(e, $), this) {
        delete this[o];
      }

      s.length || l.forEach(function (e) {
        document.removeEventListener(e, z);
      });
    }

    function N(e, t) {
      var i = new Date(e);
      if (!b(i)) throw new Error("`navigate` needs a JavaScript Date object.");
      this.currentYear = i.getFullYear(), this.currentMonth = i.getMonth(), c(this), t && this.onMonthChange(this);
    }

    t["default"] = function (e, t) {
      var i = function (e, t) {
        var i,
            l,
            h = function (e) {
          var t = d(e);
          t.events && (t.events = t.events.reduce(function (e, t) {
            if (!b(t)) throw new Error('"options.events" must only contain valid JavaScript Date objects.');
            return e[+x(t)] = !0, e;
          }, {})), ["startDate", "dateSelected", "minDate", "maxDate"].forEach(function (e) {
            var i = t[e];
            if (i && !b(i)) throw new Error('"options.' + e + '" needs to be a valid JavaScript Date object.');
            t[e] = x(i);
          });
          var i = t.position,
              n = t.maxDate,
              l = t.minDate,
              h = t.dateSelected,
              c = t.overlayPlaceholder,
              p = t.overlayButton,
              u = t.startDay,
              m = t.id;
          if (t.startDate = x(t.startDate || h || new Date()), t.disabledDates = (t.disabledDates || []).reduce(function (e, t) {
            var i = +x(t);
            if (!b(t)) throw new Error('You supplied an invalid date to "options.disabledDates".');
            if (i === +x(h)) throw new Error('"disabledDates" cannot contain the same date as "dateSelected".');
            return e[i] = 1, e;
          }, {}), t.hasOwnProperty("id") && null == m) throw new Error("Id cannot be `null` or `undefined`");

          if (null != m) {
            var f = s.filter(function (e) {
              return e.id === m;
            });
            if (f.length > 1) throw new Error("Only two datepickers can share an id.");
            f.length ? (t.second = !0, t.sibling = f[0]) : t.first = !0;
          }

          var v = ["tr", "tl", "br", "bl", "c"].some(function (e) {
            return i === e;
          });
          if (i && !v) throw new Error('"options.position" must be one of the following: tl, tr, bl, br, or c.');

          function g(e) {
            throw new Error('"dateSelected" in options is ' + (e ? "less" : "greater") + ' than "' + (e || "max") + 'Date".');
          }

          if (t.position = function (e) {
            var t = e[0],
                i = e[1],
                s = {};
            return s[r[t]] = 1, i && (s[r[i]] = 1), s;
          }(i || "bl"), n < l) throw new Error('"maxDate" in options is less than "minDate".');

          if (h && (l > h && g("min"), n < h && g()), ["onSelect", "onShow", "onHide", "onMonthChange", "formatter", "disabler"].forEach(function (e) {
            "function" != typeof t[e] && (t[e] = o);
          }), ["customDays", "customMonths", "customOverlayMonths"].forEach(function (e, i) {
            var s = t[e],
                a = i ? 12 : 7;

            if (s) {
              if (!Array.isArray(s) || s.length !== a || s.some(function (e) {
                return "string" != typeof e;
              })) throw new Error('"' + e + '" must be an array with ${num} strings.');
              t[i ? i < 2 ? "months" : "overlayMonths" : "days"] = s;
            }
          }), u && u > 0 && u < 7) {
            var y = (t.customDays || a).slice(),
                w = y.splice(0, u);
            t.customDays = y.concat(w), t.startDay = +u, t.weekendIndices = [y.length - 1, y.length];
          } else t.startDay = 0, t.weekendIndices = [6, 0];

          return "string" != typeof c && delete t.overlayPlaceholder, "string" != typeof p && delete t.overlayButton, t;
        }(t || {
          startDate: x(new Date()),
          position: "bl"
        }),
            c = e;

        if ("string" == typeof c) c = "#" === c[0] ? document.getElementById(c.slice(1)) : document.querySelector(c);else {
          if ("[object ShadowRoot]" === M(c)) throw new Error("Using a shadow DOM as your selector is not supported.");

          for (var p, u = ("getRootNode" in window.Node.prototype), m = c.parentNode; !p;) {
            var f = M(m);
            if ("[object HTMLDocument]" === f) p = !0;else if ("[object ShadowRoot]" === f) {
              if (p = !0, !u) throw new Error("The shadow DOM is not supported in your browser.");
              i = m, l = m.host;
            } else m = m.parentNode;
          }
        }
        if (!c) throw new Error("No selector / element found.");
        if (s.some(function (e) {
          return e.el === c;
        })) throw new Error("A datepicker already exists on that element.");
        var v = c === document.body,
            y = i ? c.parentElement || i : v ? document.body : c.parentElement,
            w = i ? c.parentElement || l : y,
            E = document.createElement("div"),
            T = document.createElement("div");
        E.className = "qs-datepicker-container qs-hidden", T.className = "qs-datepicker";
        var S = {
          shadowDom: i,
          customElement: l,
          positionedEl: w,
          el: c,
          parent: y,
          nonInput: "INPUT" !== c.nodeName,
          noPosition: v,
          position: !v && h.position,
          startDate: h.startDate,
          dateSelected: h.dateSelected,
          disabledDates: h.disabledDates,
          minDate: h.minDate,
          maxDate: h.maxDate,
          noWeekends: !!h.noWeekends,
          weekendIndices: h.weekendIndices,
          calendarContainer: E,
          calendar: T,
          currentMonth: (h.startDate || h.dateSelected).getMonth(),
          currentMonthName: (h.months || n)[(h.startDate || h.dateSelected).getMonth()],
          currentYear: (h.startDate || h.dateSelected).getFullYear(),
          events: h.events || {},
          setDate: L,
          remove: H,
          setMin: I,
          setMax: O,
          show: D,
          hide: k,
          navigate: N,
          onSelect: h.onSelect,
          onShow: h.onShow,
          onHide: h.onHide,
          onMonthChange: h.onMonthChange,
          formatter: h.formatter,
          disabler: h.disabler,
          months: h.months || n,
          days: h.customDays || a,
          startDay: h.startDay,
          overlayMonths: h.overlayMonths || (h.months || n).map(function (e) {
            return e.slice(0, 3);
          }),
          overlayPlaceholder: h.overlayPlaceholder || "4-digit year",
          overlayButton: h.overlayButton || "Submit",
          disableYearOverlay: !!h.disableYearOverlay,
          disableMobile: !!h.disableMobile,
          isMobile: "ontouchstart" in window,
          alwaysShow: !!h.alwaysShow,
          id: h.id,
          showAllDates: !!h.showAllDates,
          respectDisabledReadOnly: !!h.respectDisabledReadOnly,
          first: h.first,
          second: h.second
        };

        if (h.sibling) {
          var _ = h.sibling,
              z = S,
              $ = _.minDate || z.minDate,
              P = _.maxDate || z.maxDate;
          z.sibling = _, _.sibling = z, _.minDate = $, _.maxDate = P, z.minDate = $, z.maxDate = P, _.originalMinDate = $, _.originalMaxDate = P, z.originalMinDate = $, z.originalMaxDate = P, _.getRange = q, z.getRange = q;
        }

        h.dateSelected && g(c, S);
        var A = getComputedStyle(w).position;
        v || A && "static" !== A || (S.inlinePosition = !0, w.style.setProperty("position", "relative"));
        var B = s.filter(function (e) {
          return e.positionedEl === S.positionedEl;
        });
        return B.some(function (e) {
          return e.inlinePosition;
        }) && (S.inlinePosition = !0, B.forEach(function (e) {
          e.inlinePosition = !0;
        })), E.appendChild(T), y.appendChild(E), S.alwaysShow && C(S), S;
      }(e, t);

      if (s.length || h(document), i.shadowDom && (s.some(function (e) {
        return e.shadowDom === i.shadowDom;
      }) || h(i.shadowDom)), s.push(i), i.second) {
        var l = i.sibling;
        v({
          instance: i,
          deselect: !i.dateSelected
        }), v({
          instance: l,
          deselect: !l.dateSelected
        }), c(l);
      }

      return c(i, i.startDate || i.dateSelected), i.alwaysShow && w(i), i;
    };
  }, function (e, t, i) {}])["default"];
});